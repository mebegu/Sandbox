// <copyright file="NatSet.isListSorted.g.cs">Copyright ©  2015</copyright>
// <auto-generated>
// This file contains automatically generated unit tests.
// Do NOT modify this file manually.
// 
// When Pex is invoked again,
// it might remove or update any previously generated unit tests.
// 
// If the contents of this file becomes outdated, e.g. if it does not
// compile anymore, you may delete this file and invoke Pex again.
// </auto-generated>
using System;
using System.Collections.Generic;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using Microsoft.Pex.Framework.Generated;

namespace NatSet
{
    public partial class NatSet
    {
[TestMethod]
[PexGeneratedBy(typeof(global::NatSet.NatSet))]
[PexRaisedContractException]
public void isListSortedThrowsContractException380()
{
    bool b;
    b = this.isListSorted((List<int>)null);
}
[TestMethod]
[PexGeneratedBy(typeof(global::NatSet.NatSet))]
public void isListSorted350()
{
    List<int> list;
    bool b;
    int[] ints = new int[0];
    list = new List<int>((IEnumerable<int>)ints);
    b = this.isListSorted(list);
    Assert.AreEqual<bool>(true, b);
}
[TestMethod]
[PexGeneratedBy(typeof(global::NatSet.NatSet))]
public void isListSorted44()
{
    List<int> list;
    bool b;
    int[] ints = new int[1];
    list = new List<int>((IEnumerable<int>)ints);
    b = this.isListSorted(list);
    Assert.AreEqual<bool>(true, b);
}
[TestMethod]
[PexGeneratedBy(typeof(global::NatSet.NatSet))]
public void isListSorted119()
{
    List<int> list;
    bool b;
    int[] ints = new int[2];
    list = new List<int>((IEnumerable<int>)ints);
    b = this.isListSorted(list);
    Assert.AreEqual<bool>(true, b);
}
[TestMethod]
[PexGeneratedBy(typeof(global::NatSet.NatSet))]
public void isListSorted310()
{
    List<int> list;
    bool b;
    int[] ints = new int[2];
    ints[0] = 1;
    list = new List<int>((IEnumerable<int>)ints);
    b = this.isListSorted(list);
    Assert.AreEqual<bool>(false, b);
}
[TestMethod]
[PexGeneratedBy(typeof(global::NatSet.NatSet))]
public void isListSorted730()
{
    List<int> list;
    bool b;
    int[] ints = new int[3];
    list = new List<int>((IEnumerable<int>)ints);
    b = this.isListSorted(list);
    Assert.AreEqual<bool>(true, b);
}
[TestMethod]
[PexGeneratedBy(typeof(global::NatSet.NatSet))]
[PexRaisedContractException]
public void isListSortedThrowsContractException188()
{
    bool b;
    b = this.isListSorted((List<int>)null);
}
[TestMethod]
[PexGeneratedBy(typeof(global::NatSet.NatSet))]
public void isListSorted35001()
{
    List<int> list;
    bool b;
    int[] ints = new int[0];
    list = new List<int>((IEnumerable<int>)ints);
    b = this.isListSorted(list);
    Assert.AreEqual<bool>(true, b);
}
[TestMethod]
[PexGeneratedBy(typeof(global::NatSet.NatSet))]
public void isListSorted4401()
{
    List<int> list;
    bool b;
    int[] ints = new int[1];
    list = new List<int>((IEnumerable<int>)ints);
    b = this.isListSorted(list);
    Assert.AreEqual<bool>(true, b);
}
[TestMethod]
[PexGeneratedBy(typeof(global::NatSet.NatSet))]
public void isListSorted11901()
{
    List<int> list;
    bool b;
    int[] ints = new int[2];
    list = new List<int>((IEnumerable<int>)ints);
    b = this.isListSorted(list);
    Assert.AreEqual<bool>(true, b);
}
[TestMethod]
[PexGeneratedBy(typeof(global::NatSet.NatSet))]
public void isListSorted31001()
{
    List<int> list;
    bool b;
    int[] ints = new int[2];
    ints[0] = 1;
    list = new List<int>((IEnumerable<int>)ints);
    b = this.isListSorted(list);
    Assert.AreEqual<bool>(false, b);
}
[TestMethod]
[PexGeneratedBy(typeof(global::NatSet.NatSet))]
public void isListSorted73001()
{
    List<int> list;
    bool b;
    int[] ints = new int[3];
    list = new List<int>((IEnumerable<int>)ints);
    b = this.isListSorted(list);
    Assert.AreEqual<bool>(true, b);
}
[TestMethod]
[PexGeneratedBy(typeof(global::NatSet.NatSet))]
[PexRaisedContractException]
public void isListSortedThrowsContractException265()
{
    bool b;
    b = this.isListSorted((List<int>)null);
}
[TestMethod]
[PexGeneratedBy(typeof(global::NatSet.NatSet))]
public void isListSorted35002()
{
    List<int> list;
    bool b;
    int[] ints = new int[0];
    list = new List<int>((IEnumerable<int>)ints);
    b = this.isListSorted(list);
    Assert.AreEqual<bool>(true, b);
}
[TestMethod]
[PexGeneratedBy(typeof(global::NatSet.NatSet))]
public void isListSorted4402()
{
    List<int> list;
    bool b;
    int[] ints = new int[1];
    list = new List<int>((IEnumerable<int>)ints);
    b = this.isListSorted(list);
    Assert.AreEqual<bool>(true, b);
}
[TestMethod]
[PexGeneratedBy(typeof(global::NatSet.NatSet))]
public void isListSorted11902()
{
    List<int> list;
    bool b;
    int[] ints = new int[2];
    list = new List<int>((IEnumerable<int>)ints);
    b = this.isListSorted(list);
    Assert.AreEqual<bool>(true, b);
}
[TestMethod]
[PexGeneratedBy(typeof(global::NatSet.NatSet))]
public void isListSorted31002()
{
    List<int> list;
    bool b;
    int[] ints = new int[2];
    ints[0] = 1;
    list = new List<int>((IEnumerable<int>)ints);
    b = this.isListSorted(list);
    Assert.AreEqual<bool>(false, b);
}
[TestMethod]
[PexGeneratedBy(typeof(global::NatSet.NatSet))]
public void isListSorted73002()
{
    List<int> list;
    bool b;
    int[] ints = new int[3];
    list = new List<int>((IEnumerable<int>)ints);
    b = this.isListSorted(list);
    Assert.AreEqual<bool>(true, b);
}
    }
}
