<?xml version="1.0" encoding="utf-8"?>
<pex id="{477c26e9-8cfb-4fe4-9333-9b101019c7da}" creationTime="2015-03-18 19:00:55Z" configuration="*\*\*" created="2015-03-18 19:00:55Z" pexVersion="0.94.51006.1" xml="C:\Users\MehmetBerk\documents\visual studio 2010\Projects\NatSet\NatSet\bin\Debug\reports\150318.210055.4828.pex\report.per" html="C:\Users\MehmetBerk\documents\visual studio 2010\Projects\NatSet\NatSet\bin\Debug\reports\150318.210055.4828.pex\report.html"><environment commandLine="&quot;C:\Program Files (x86)\Microsoft Pex\bin\Microsoft.Pex.x86.exe&quot; &quot;C:\Users\MehmetBerk\documents\visual studio 2010\Projects\NatSet\NatSet\bin\Debug\NatSet.dll&quot; /targetx86 /clrversion:v4.0.30319 /donotopenreport /reportlevel:Xml /reportrootpath:&quot;C:\Users\MehmetBerk\documents\visual studio 2010\Projects\NatSet\NatSet\bin\Debug\reports&quot; /testframework:VisualStudioUnitTest /testlanguage:cs /testprojectfile:&quot;C:\Users\MehmetBerk\documents\visual studio 2010\Projects\NatSet\NatSet\NatSet.csproj&quot; /testprojectnotupdate /testprojectskip" machineName="GÜRÇAY" osVersion="Microsoft Windows NT 6.2.9200.0" processorCount="4" clrVersion="4.0.30319.34014" bitness="x86" user="MehmetBerk"><envVars><envVar name="HOMEPATH" value="\Users\MehmetBerk"/>
<envVar name="COMPUTERNAME" value="GÜRÇAY"/>
<envVar name="CLRMONITOR_INJECT_TYPES" value=""/>
<envVar name="CommonProgramFiles(x86)" value="C:\Program Files (x86)\Common Files"/>
<envVar name="PROCESSOR_IDENTIFIER" value="Intel64 Family 6 Model 58 Stepping 9, GenuineIntel"/>
<envVar name="SESSIONNAME" value="Console"/>
<envVar name="TMP" value="C:\Users\MEHMET~1\AppData\Local\Temp"/>
<envVar name="PROCESSOR_REVISION" value="3a09"/>
<envVar name="CLRMONITOR_INSTRUMENT_TYPES_EXCLUSIONS" value=""/>
<envVar name="PATHEXT" value=".COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC"/>
<envVar name="VS100COMNTOOLS" value="C:\Program Files (x86)\Microsoft Visual Studio 10.0\Common7\Tools\"/>
<envVar name="COMPLUS_DEFAULTVERSION" value="v4.0.30319"/>
<envVar name="CLRMONITOR_CLSID" value="{21bbb412-71ac-41f9-a377-48529a4859cf}"/>
<envVar name="SystemDrive" value="C:"/>
<envVar name="PROCESSOR_LEVEL" value="6"/>
<envVar name="TEMP" value="C:\Users\MEHMET~1\AppData\Local\Temp"/>
<envVar name="LOCALAPPDATA" value="C:\Users\MehmetBerk\AppData\Local"/>
<envVar name="pex_wait_for_server_channel" value="1"/>
<envVar name="CLRMONITOR_PROTECT_ALL_CCTORS" value="1"/>
<envVar name="CLRMONITOR_PROTECT_TYPES" value="Microsoft.FSharp.Text.Printf,Microsoft.FSharp.Text.PrintfImpl"/>
<envVar name="PSModulePath" value="C:\WINDOWS\system32\WindowsPowerShell\v1.0\Modules\"/>
<envVar name="VSPID" value="12928"/>
<envVar name="CLRMONITOR_INITIALIZED" value="0xc"/>
<envVar name="USERDOMAIN" value="GÜRÇAY"/>
<envVar name="ComSpec" value="C:\WINDOWS\system32\cmd.exe"/>
<envVar name="CLRMONITOR_ERASE_FINALIZER_TYPES" value=""/>
<envVar name="CLRMONITOR_INJECT_NAMESPACES" value=""/>
<envVar name="NUMBER_OF_PROCESSORS" value="4"/>
<envVar name="CommonProgramFiles" value="C:\Program Files (x86)\Common Files"/>
<envVar name="ProgramFiles(x86)" value="C:\Program Files (x86)"/>
<envVar name="PUBLIC" value="C:\Users\Public"/>
<envVar name="CLRMONITOR_INSTRUMENT_NAMESPACES_EXCLUSIONS" value=""/>
<envVar name="CLRMONITOR_FLAGS" value=""/>
<envVar name="VisualStudioDir" value="C:\Users\MehmetBerk\Documents\Visual Studio 2010"/>
<envVar name="pex_instrumentation" value="1"/>
<envVar name="CLRMONITOR_INSTRUMENT_TYPES" value="System.Array,System.Array+ArrayEnumerator,System.Array+FunctorComparer`1,System.Array+SZArrayEnumerator,System.Array+SorterGenericArray,System.Array+SorterObjectArray,System.Boolean,System.Byte,System.Char,System.CharEnumerator,System.ComponentModel.Component,System.ComponentModel.Container,System.ComponentModel.Container+Site,System.Convert,System.Currency,System.DateTime,System.Decimal,System.Diagnostics.Assert,System.Double,System.Globalization.CharUnicodeInfo,System.Globalization.CultureTableRecord,System.Globalization.TextInfo,System.Guid,System.IO.MemoryStream,System.IO.Stream,System.IO.StreamReader,System.IO.StreamWriter,System.IO.StringReader,System.IO.StringWriter,System.Int16,System.Int32,System.Int64,System.Lazy`1,System.Lazy`1+Boxed,System.Lazy`1+LazyInternalExceptionHolder,System.Math,System.Nullable,System.Nullable`1,System.OrdinalComparer,System.SByte,System.SZArrayHelper,System.SZArrayHelper+SZGenericArrayEnumerator`1,System.Single,System.String,System.StringComparer,System.Text.ASCIIEncoding,System.Text.DecoderNLS,System.Text.Encoding,System.Text.UTF8Encoding,System.TimeSpan,System.Tuple,System.Tuple`1,System.Tuple`2,System.Tuple`3,System.Tuple`4,System.Tuple`5,System.Tuple`6,System.Tuple`7,System.Tuple`8,System.UInt16,System.UInt32,System.UInt64,System.Xml.XmlTextWriter,System.Xml.XmlTextWriter+Namespace,System.Xml.XmlTextWriter+NamespaceState,System.Xml.XmlTextWriter+SpecialAttr,System.Xml.XmlTextWriter+State,System.Xml.XmlTextWriter+TagInfo,System.Xml.XmlTextWriter+Token,System.Xml.XmlWriter,System.Xml.XmlWriter+&lt;WriteAttributeStringAsyncHelper&gt;d__0,System.Xml.XmlWriter+&lt;WriteAttributesAsync&gt;d__7,System.Xml.XmlWriter+&lt;WriteElementStringAsync&gt;d__20,System.Xml.XmlWriter+&lt;WriteLocalNamespacesAsync&gt;d__23,System.Xml.XmlWriter+&lt;WriteNodeAsync&gt;d__19,System.Xml.XmlWriter+&lt;WriteNodeAsync_CallAsyncReader&gt;d__10,System.Xml.XmlWriter+&lt;WriteNodeAsync_CallSyncReader&gt;d__a,System.Xml.XmlWriter+&lt;WriteQualifiedNameAsync&gt;d__3,__Box`1,__SzArrayHelper`1"/>
<envVar name="ProgramData" value="C:\ProgramData"/>
<envVar name="ProgramW6432" value="C:\Program Files"/>
<envVar name="ProgramFiles" value="C:\Program Files (x86)"/>
<envVar name="CLRMONITOR_ERASE_CCTOR_TYPES" value=""/>
<envVar name="FP_NO_HOST_CHECK" value="NO"/>
<envVar name="pex_clientid" value="pex12928_1"/>
<envVar name="windir" value="C:\WINDOWS"/>
<envVar name="SystemRoot" value="C:\WINDOWS"/>
<envVar name="CLRMONITOR_INSTRUMENT_ATTRIBUTE" value="Microsoft.Moles.Framework.Moles.MolesInstrumentAttribute"/>
<envVar name="COMPLUS_ProfAPI_ProfilerCompatibilitySetting" value="EnableV2Profiler"/>
<envVar name="pex_server_channel" value="pex12928"/>
<envVar name="CommonProgramW6432" value="C:\Program Files\Common Files"/>
<envVar name="PROCESSOR_ARCHITEW6432" value="AMD64"/>
<envVar name="LOGONSERVER" value="\\MicrosoftAccount"/>
<envVar name="USERPROFILE" value="C:\Users\MehmetBerk"/>
<envVar name="CLRMONITOR_SUBSTITUTIONS" value="C:\WINDOWS\assembly\GAC_MSIL\Microsoft.ExtendedReflection\0.94.0.0__31bf3856ad364e35\Microsoft.ExtendedReflection.dll"/>
<envVar name="USERDOMAIN_ROAMINGPROFILE" value="GÜRÇAY"/>
<envVar name="APPDATA" value="C:\Users\MehmetBerk\AppData\Roaming"/>
<envVar name="HOMEDRIVE" value="C:"/>
<envVar name="CLRMONITOR_INJECT_ASSEMBLIES" value=""/>
<envVar name="CodeContractsInstallDir" value="C:\Program Files (x86)\Microsoft\Contracts\"/>
<envVar name="CLRMONITOR_INSTRUMENT_ASSEMBLIES" value="FSharp.Core,FSharp.PowerPack,Microsoft.Contracts,Microsoft.VisualBasic,Microsoft.VisualStudio.QualityTools.UnitTestFramework,NatSet,System,System.Core,System.Web"/>
<envVar name="USERNAME" value="MehmetBerk"/>
<envVar name="COR_PROFILER" value="{21bbb412-71ac-41f9-a377-48529a4859cf}"/>
<envVar name="PROCESSOR_ARCHITECTURE" value="x86"/>
<envVar name="CLRMONITOR_INSTRUMENT_ASSEMBLIES_EXCLUSIONS" value="Microsoft.VisualBasic"/>
<envVar name="OS" value="Windows_NT"/>
<envVar name="CLRMONITOR_INSTRUMENT_NAMESPACES" value="System.Collections,System.Collections.Generic,System.Collections.ObjectModel,System.Collections.Specialized,System.Diagnostics.Contracts"/>
<envVar name="Path" value="C:\ProgramData\Oracle\Java\javapath;c:\Program Files (x86)\AMD APP\bin\x86_64;c:\Program Files (x86)\AMD APP\bin\x86;c:\Program Files (x86)\Intel\iCLS Client\;c:\Program Files\Intel\iCLS Client\;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;c:\Program Files (x86)\ATI Technologies\ATI.ACE\Core-Static;C:\Program Files (x86)\Windows Live\Shared;C:\Users\MehmetBerk\Desktop\eclipse_koc\eclipse\jdk1.6.0_25\jdk1.6.0_25\bin;c:\Program Files (x86)\Microsoft SQL Server\100\Tools\Binn\;c:\Program Files\Microsoft SQL Server\100\Tools\Binn\;c:\Program Files\Microsoft SQL Server\100\DTS\Binn\"/>
<envVar name="AMDAPPSDKROOT" value="c:\Program Files (x86)\AMD APP\"/>
<envVar name="ALLUSERSPROFILE" value="C:\ProgramData"/>
</envVars>
</environment>
<settings/>
<reflection/>
<assembly name="NatSet" version="1.0.0.0" fileVersion="1.0.0.0" fullName="NatSet, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" location="C:\Users\MehmetBerk\documents\visual studio 2010\Projects\NatSet\NatSet\bin\Debug\NatSet.dll" fileName="NatSet.dll"><settings testFramework="VisualStudioUnitTest" testLanguage="cs"/>
<fixture name="NatSet" type="NatSet.NatSet" typeName="NatSet" token="2000003" href="fix\NatSet.628.html"><type spec="Class"><definition assemblyName="NatSet" name="NatSet" token="2000003" namespace="NatSet"/>
</type>
<exploration shortName="findMax()" fullName="NatSet.NatSet.findMax()"><method><definition assemblyName="NatSet" name="findMax" token="6000009"><declaringType assemblyName="NatSet" name="NatSet" token="2000003" namespace="NatSet"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="NatSet" name="NatSet" token="2000003" namespace="NatSet"/>
</type>
</parameter>
<resultType spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Int32" token="20000f6" namespace="System"/>
</resultType>
</definition>
</method>
<log level="message" time="2015-03-18 19:00:55Z" category="progress" message="    0 runs"/>
<test name="findMax" state="success" duration="0,05"/>
<generatedTest id="ee7ac4ce-d59a-4adf-8997-444ad79fab07" index="1" run="1" status="normaltermination" generated="true" new="true" assemblyName="NatSet" name="findMax4303"><declaringType assemblyName="NatSet" name="NatSet" token="ffffffff" namespace="NatSet"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="NatSet" name="NatSet" token="ffffffff" namespace="NatSet"/>
</type>
</parameter>
<rcov name="Block" dcov="0" dtot="0" acov="0" atot="0"/>
<rcov name="asserts" dcov="1" dtot="1" acov="1" atot="1"/>
<value name="result">-1</value>
<code><![CDATA[int i;
i = this.findMax();
Assert.AreEqual<int>(-1, i);
]]></code>
<methodCode imports="Microsoft.VisualStudio.TestTools.UnitTesting;Microsoft.Pex.Framework.Generated"><![CDATA[[TestMethod]
[PexGeneratedBy(typeof(global::NatSet.NatSet))]
public void findMax4303()
{
    int i;
    i = this.findMax();
    Assert.AreEqual<int>(-1, i);
}
]]></methodCode>
<reference name="Microsoft.VisualStudio.QualityTools.UnitTestFramework"/>
<reference name="mscorlib" location="C:\Windows\Microsoft.NET\Framework\v4.0.30319\mscorlib.dll"/>
<reference name="Microsoft.Pex.Framework"/>
<reference name="NatSet" location="C:\Users\MehmetBerk\documents\visual studio 2010\Projects\NatSet\NatSet\bin\Debug\NatSet.dll"/>
</generatedTest>
<coverage domain="usercodeundertest" unit="block" covered="0" total="0" coveredRatio="0"/>
<sourceCoverage xml="cov\e338\cov.xml" html="cov\e338\cov.html"/>
<result name="findMax()" state="success" duration="0,23"/>
<duration start="2015-03-18 19:00:55Z" end="2015-03-18 19:00:55Z" seconds="0,25"/>
</exploration>
<exploration shortName="insert(Int32)" fullName="NatSet.NatSet.insert(Int32)"><method><definition assemblyName="NatSet" name="insert" token="6000004"><declaringType assemblyName="NatSet" name="NatSet" token="2000003" namespace="NatSet"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="NatSet" name="NatSet" token="2000003" namespace="NatSet"/>
</type>
</parameter>
<parameter name="k" position="1"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Int32" token="20000f6" namespace="System"/>
</type>
</parameter>
</definition>
</method>
<test name="insert" state="success" duration="0,08"/>
<generatedTest id="99abcdca-f9f8-4082-b03d-e5423c5c3dbd" index="1" run="1" status="normaltermination" generated="true" new="true" assemblyName="NatSet" name="insert191"><declaringType assemblyName="NatSet" name="NatSet" token="ffffffff" namespace="NatSet"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="NatSet" name="NatSet" token="ffffffff" namespace="NatSet"/>
</type>
</parameter>
<rcov name="Block" dcov="0" dtot="0" acov="0" atot="0"/>
<rcov name="asserts" dcov="9" dtot="9" acov="9" atot="9"/>
<value name="k">0</value>
<code><![CDATA[this.insert(0);
]]></code>
<methodCode imports="Microsoft.VisualStudio.TestTools.UnitTesting;Microsoft.Pex.Framework.Generated"><![CDATA[[TestMethod]
[PexGeneratedBy(typeof(global::NatSet.NatSet))]
public void insert191()
{
    this.insert(0);
}
]]></methodCode>
<reference name="Microsoft.VisualStudio.QualityTools.UnitTestFramework"/>
<reference name="mscorlib" location="C:\Windows\Microsoft.NET\Framework\v4.0.30319\mscorlib.dll"/>
<reference name="Microsoft.Pex.Framework"/>
<reference name="NatSet" location="C:\Users\MehmetBerk\documents\visual studio 2010\Projects\NatSet\NatSet\bin\Debug\NatSet.dll"/>
<pathCondition><![CDATA[return k == 0;
]]></pathCondition>
</generatedTest>
<test name="insert" state="success" duration="0,01"/>
<test name="insert" state="success" duration="0,01"/>
<generatedTest id="008f7994-005b-49bc-87f0-556adf2c2114" index="2" run="3" exceptionState="expected" status="expectedexception" generated="true" new="true" assemblyName="NatSet" name="insertThrowsContractException431"><declaringType assemblyName="NatSet" name="NatSet" token="ffffffff" namespace="NatSet"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="NatSet" name="NatSet" token="ffffffff" namespace="NatSet"/>
</type>
</parameter>
<rcov name="Block" dcov="0" dtot="0" acov="0" atot="0"/>
<rcov name="asserts" dcov="0" dtot="0" acov="9" atot="9"/>
<value name="k">int.MinValue</value>
<code><![CDATA[try
{
  this.insert(int.MinValue);
  throw 
    new AssertFailedException("expected an exception of type ContractException");
}
catch(Exception ex)
{
  if (!PexContract.IsContractException(ex))
    throw ex;
}
]]></code>
<methodCode imports="Microsoft.VisualStudio.TestTools.UnitTesting;System;Microsoft.Pex.Framework.Generated;Microsoft.Pex.Engine.Exceptions"><![CDATA[[TestMethod]
[PexGeneratedBy(typeof(global::NatSet.NatSet))]
[PexRaisedContractException(PexExceptionState.Expected)]
public void insertThrowsContractException431()
{
    try
    {
      this.insert(int.MinValue);
      throw 
        new AssertFailedException("expected an exception of type ContractException");
    }
    catch(Exception ex)
    {
      if (!PexContract.IsContractException(ex))
        throw ex;
    }
}
]]></methodCode>
<reference name="Microsoft.VisualStudio.QualityTools.UnitTestFramework"/>
<reference name="mscorlib" location="C:\Windows\Microsoft.NET\Framework\v4.0.30319\mscorlib.dll"/>
<reference name="Microsoft.Pex.Framework"/>
<reference name="NatSet" location="C:\Users\MehmetBerk\documents\visual studio 2010\Projects\NatSet\NatSet\bin\Debug\NatSet.dll"/>
<exceptionChain><exception typeDisplayName="ContractException" source="NatSet"><message><![CDATA[Önkoşul başarısız oldu: k >= 0]]></message>
<type spec="Class"><definition assemblyName="NatSet" name="ContractException" token="2000010"><declaringType assemblyName="NatSet" name="__ContractsRuntime" token="2000004" namespace="System.Diagnostics.Contracts"/>
</definition>
</type>
<stackTrace><frame value="  at NatSet.insert(Int32) in C:\Users\MehmetBerk\documents\visual studio 2010\Projects\NatSet\NatSet\NatSet.cs(53)" method="NatSet.insert(Int32)" offset="0" file="C:\Users\MehmetBerk\documents\visual studio 2010\Projects\NatSet\NatSet\NatSet.cs" line="53"><method assemblyName="NatSet" name="insert" token="6000004"><declaringType assemblyName="NatSet" name="NatSet" token="2000003" namespace="NatSet"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="NatSet" name="NatSet" token="2000003" namespace="NatSet"/>
</type>
</parameter>
<parameter name="k" position="1"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Int32" token="20000f6" namespace="System"/>
</type>
</parameter>
</method>
<beforeSource><![CDATA[        [PexAllowedContractRequiresFailure]
        public void insert(int k)
        {]]></beforeSource>
<source><![CDATA[            Contract.Requires(k >= 0);]]></source>
<afterSource><![CDATA[            Contract.Ensures(k<100 ? sm[k] : rest.Contains(k));
            Contract.Ensures(max == findMax());
]]></afterSource>
</frame>
</stackTrace>
</exception>
</exceptionChain>
<pathCondition><![CDATA[return k < 0;
]]></pathCondition>
</generatedTest>
<test name="insert" state="success" duration="0,09"/>
<generatedTest id="f218cecc-201f-407b-ad1d-b19e7c3f752f" index="3" run="4" status="normaltermination" generated="true" new="true" assemblyName="NatSet" name="insert265"><declaringType assemblyName="NatSet" name="NatSet" token="ffffffff" namespace="NatSet"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="NatSet" name="NatSet" token="ffffffff" namespace="NatSet"/>
</type>
</parameter>
<rcov name="Block" dcov="0" dtot="0" acov="0" atot="0"/>
<rcov name="asserts" dcov="0" dtot="0" acov="9" atot="9"/>
<value name="k">100</value>
<code><![CDATA[this.insert(100);
]]></code>
<methodCode imports="Microsoft.VisualStudio.TestTools.UnitTesting;Microsoft.Pex.Framework.Generated"><![CDATA[[TestMethod]
[PexGeneratedBy(typeof(global::NatSet.NatSet))]
public void insert265()
{
    this.insert(100);
}
]]></methodCode>
<reference name="Microsoft.VisualStudio.QualityTools.UnitTestFramework"/>
<reference name="mscorlib" location="C:\Windows\Microsoft.NET\Framework\v4.0.30319\mscorlib.dll"/>
<reference name="Microsoft.Pex.Framework"/>
<reference name="NatSet" location="C:\Users\MehmetBerk\documents\visual studio 2010\Projects\NatSet\NatSet\bin\Debug\NatSet.dll"/>
<pathCondition><![CDATA[return 99 < k;
]]></pathCondition>
</generatedTest>
<test name="insert" state="success" duration="0,00"/>
<generatedTest id="292bee36-4635-4fc6-a4e3-4c2ed1acc0a6" index="4" run="5" status="duplicatepath" generated="true" new="true" assemblyName="NatSet" name="insert919"><declaringType assemblyName="NatSet" name="NatSet" token="ffffffff" namespace="NatSet"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="NatSet" name="NatSet" token="ffffffff" namespace="NatSet"/>
</type>
</parameter>
<rcov name="Block" dcov="0" dtot="0" acov="0" atot="0"/>
<rcov name="asserts" dcov="0" dtot="0" acov="9" atot="9"/>
<value name="k">72</value>
<code><![CDATA[this.insert(72);
]]></code>
<methodCode imports="Microsoft.VisualStudio.TestTools.UnitTesting;Microsoft.Pex.Framework.Generated"><![CDATA[[TestMethod]
[PexGeneratedBy(typeof(global::NatSet.NatSet))]
[Ignore]
[PexDescription("the test state was: duplicate path")]
public void insert919()
{
    this.insert(72);
}
]]></methodCode>
<reference name="Microsoft.VisualStudio.QualityTools.UnitTestFramework"/>
<reference name="mscorlib" location="C:\Windows\Microsoft.NET\Framework\v4.0.30319\mscorlib.dll"/>
<reference name="Microsoft.Pex.Framework"/>
<reference name="NatSet" location="C:\Users\MehmetBerk\documents\visual studio 2010\Projects\NatSet\NatSet\bin\Debug\NatSet.dll"/>
<pathCondition><![CDATA[return -1 < k && k < 100 && (uint)k < 100u;
]]></pathCondition>
</generatedTest>
<test name="insert" state="success" duration="0,00"/>
<test name="insert" state="success" duration="0,00"/>
<test name="insert" state="success" duration="0,00"/>
<test name="insert" state="success" duration="0,00"/>
<test name="insert" state="success" duration="0,00"/>
<test name="insert" state="success" duration="0,00"/>
<test name="insert" state="success" duration="0,00"/>
<test name="insert" state="success" duration="0,00"/>
<test name="insert" state="success" duration="0,00"/>
<test name="insert" state="success" duration="0,00"/>
<test name="insert" state="success" duration="0,00"/>
<test name="insert" state="success" duration="0,00"/>
<test name="insert" state="success" duration="0,00"/>
<test name="insert" state="success" duration="0,00"/>
<test name="insert" state="success" duration="0,00"/>
<test name="insert" state="success" duration="0,00"/>
<test name="insert" state="success" duration="0,00"/>
<test name="insert" state="success" duration="0,00"/>
<test name="insert" state="success" duration="0,00"/>
<test name="insert" state="success" duration="0,00"/>
<test name="insert" state="success" duration="0,00"/>
<test name="insert" state="success" duration="0,00"/>
<test name="insert" state="success" duration="0,00"/>
<test name="insert" state="success" duration="0,00"/>
<test name="insert" state="success" duration="0,00"/>
<test name="insert" state="success" duration="0,00"/>
<test name="insert" state="success" duration="0,00"/>
<test name="insert" state="success" duration="0,00"/>
<test name="insert" state="success" duration="0,00"/>
<test name="insert" state="success" duration="0,00"/>
<test name="insert" state="success" duration="0,00"/>
<test name="insert" state="success" duration="0,00"/>
<test name="insert" state="success" duration="0,00"/>
<test name="insert" state="success" duration="0,00"/>
<test name="insert" state="success" duration="0,00"/>
<test name="insert" state="success" duration="0,00"/>
<test name="insert" state="success" duration="0,00"/>
<test name="insert" state="success" duration="0,00"/>
<test name="insert" state="success" duration="0,00"/>
<test name="insert" state="success" duration="0,00"/>
<test name="insert" state="success" duration="0,00"/>
<test name="insert" state="success" duration="0,00"/>
<test name="insert" state="success" duration="0,00"/>
<test name="insert" state="success" duration="0,00"/>
<test name="insert" state="success" duration="0,00"/>
<test name="insert" state="success" duration="0,00"/>
<test name="insert" state="success" duration="0,00"/>
<test name="insert" state="success" duration="0,00"/>
<test name="insert" state="success" duration="0,00"/>
<test name="insert" state="success" duration="0,00"/>
<test name="insert" state="success" duration="0,00"/>
<test name="insert" state="success" duration="0,00"/>
<test name="insert" state="success" duration="0,00"/>
<test name="insert" state="success" duration="0,00"/>
<test name="insert" state="success" duration="0,00"/>
<test name="insert" state="success" duration="0,00"/>
<test name="insert" state="success" duration="0,00"/>
<test name="insert" state="success" duration="0,00"/>
<test name="insert" state="success" duration="0,00"/>
<test name="insert" state="success" duration="0,00"/>
<test name="insert" state="success" duration="0,00"/>
<test name="insert" state="success" duration="0,00"/>
<test name="insert" state="success" duration="0,00"/>
<test name="insert" state="success" duration="0,00"/>
<test name="insert" state="success" duration="0,00"/>
<test name="insert" state="success" duration="0,00"/>
<test name="insert" state="success" duration="0,00"/>
<test name="insert" state="success" duration="0,00"/>
<test name="insert" state="success" duration="0,00"/>
<test name="insert" state="success" duration="0,00"/>
<test name="insert" state="success" duration="0,00"/>
<test name="insert" state="success" duration="0,00"/>
<test name="insert" state="success" duration="0,00"/>
<test name="insert" state="success" duration="0,00"/>
<test name="insert" state="success" duration="0,00"/>
<test name="insert" state="success" duration="0,00"/>
<test name="insert" state="success" duration="0,00"/>
<test name="insert" state="success" duration="0,01"/>
<test name="insert" state="success" duration="0,00"/>
<test name="insert" state="success" duration="0,00"/>
<test name="insert" state="success" duration="0,00"/>
<test name="insert" state="success" duration="0,00"/>
<test name="insert" state="success" duration="0,00"/>
<test name="insert" state="success" duration="0,00"/>
<test name="insert" state="success" duration="0,00"/>
<test name="insert" state="success" duration="0,00"/>
<test name="insert" state="success" duration="0,00"/>
<test name="insert" state="success" duration="0,00"/>
<test name="insert" state="success" duration="0,00"/>
<test name="insert" state="success" duration="0,00"/>
<test name="insert" state="success" duration="0,00"/>
<test name="insert" state="success" duration="0,00"/>
<test name="insert" state="success" duration="0,00"/>
<test name="insert" state="success" duration="0,00"/>
<test name="insert" state="success" duration="0,00"/>
<test name="insert" state="success" duration="0,00"/>
<test name="insert" state="success" duration="0,00"/>
<test name="insert" state="success" duration="0,00"/>
<coverage domain="usercodeundertest" unit="block" covered="0" total="0" coveredRatio="0"/>
<sourceCoverage xml="cov\e347\cov.xml" html="cov\e347\cov.html"/>
<result name="insert(Int32)" state="success" duration="1.98664932781774"/>
<duration start="2015-03-18 19:00:55Z" end="2015-03-18 19:00:57Z" seconds="1.9883247"/>
<trajectory><image src="fix\natsetnatsetinse635623092576309638.trajectories.png" width="800" height="1600"/>
</trajectory>
</exploration>
<exploration shortName="insertTest(Int32[])" fullName="NatSet.NatSet.insertTest(Int32[])"><method><definition assemblyName="NatSet" name="insertTest" token="600000a"><declaringType assemblyName="NatSet" name="NatSet" token="2000003" namespace="NatSet"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="NatSet" name="NatSet" token="2000003" namespace="NatSet"/>
</type>
</parameter>
<parameter name="values" position="1"><type spec="SzArray"><elementType spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Int32" token="20000f6" namespace="System"/>
</elementType>
</type>
</parameter>
</definition>
</method>
<test name="insertTest" state="success" duration="0,02"/>
<test name="insertTest" state="success" duration="0,00"/>
<test name="insertTest" state="success" duration="0,01"/>
<test name="insertTest" state="success" duration="0,00"/>
<test name="insertTest" state="success" duration="0,00"/>
<test name="insertTest" state="success" duration="0,00"/>
<test name="insertTest" state="success" duration="0,00"/>
<test name="insertTest" state="success" duration="0,03"/>
<test name="insertTest" state="success" duration="0,00"/>
<generatedTest id="5f9d2b37-df0d-4aa1-a571-5b61ca9098ad" index="1" run="9" exceptionState="expected" status="expectedexception" generated="true" new="true" assemblyName="NatSet" name="insertTestThrowsContractException335"><declaringType assemblyName="NatSet" name="NatSet" token="ffffffff" namespace="NatSet"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="NatSet" name="NatSet" token="ffffffff" namespace="NatSet"/>
</type>
</parameter>
<rcov name="Block" dcov="0" dtot="0" acov="0" atot="0"/>
<rcov name="asserts" dcov="0" dtot="0" acov="9" atot="10"/>
<value name="values">{-2147483551, 1073741829}</value>
<code><![CDATA[try
{
  int[] ints = new int[2];
  ints[0] = -2147483551;
  ints[1] = 1073741829;
  this.insertTest(ints);
  throw 
    new AssertFailedException("expected an exception of type ContractException");
}
catch(Exception ex)
{
  if (!PexContract.IsContractException(ex))
    throw ex;
}
]]></code>
<methodCode imports="Microsoft.VisualStudio.TestTools.UnitTesting;System;Microsoft.Pex.Framework.Generated;Microsoft.Pex.Engine.Exceptions"><![CDATA[[TestMethod]
[PexGeneratedBy(typeof(global::NatSet.NatSet))]
[PexRaisedContractException(PexExceptionState.Expected)]
public void insertTestThrowsContractException335()
{
    try
    {
      int[] ints = new int[2];
      ints[0] = -2147483551;
      ints[1] = 1073741829;
      this.insertTest(ints);
      throw 
        new AssertFailedException("expected an exception of type ContractException");
    }
    catch(Exception ex)
    {
      if (!PexContract.IsContractException(ex))
        throw ex;
    }
}
]]></methodCode>
<reference name="Microsoft.VisualStudio.QualityTools.UnitTestFramework"/>
<reference name="mscorlib" location="C:\Windows\Microsoft.NET\Framework\v4.0.30319\mscorlib.dll"/>
<reference name="Microsoft.Pex.Framework"/>
<reference name="NatSet" location="C:\Users\MehmetBerk\documents\visual studio 2010\Projects\NatSet\NatSet\bin\Debug\NatSet.dll"/>
<exceptionChain><exception typeDisplayName="ContractException" source="NatSet"><message><![CDATA[Önkoşul başarısız oldu: k >= 0]]></message>
<type spec="Class"><definition assemblyName="NatSet" name="ContractException" token="2000010"><declaringType assemblyName="NatSet" name="__ContractsRuntime" token="2000004" namespace="System.Diagnostics.Contracts"/>
</definition>
</type>
<stackTrace><frame value="  at NatSet.insert(Int32) in C:\Users\MehmetBerk\documents\visual studio 2010\Projects\NatSet\NatSet\NatSet.cs(53)" method="NatSet.insert(Int32)" offset="0" file="C:\Users\MehmetBerk\documents\visual studio 2010\Projects\NatSet\NatSet\NatSet.cs" line="53"><method assemblyName="NatSet" name="insert" token="6000004"><declaringType assemblyName="NatSet" name="NatSet" token="2000003" namespace="NatSet"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="NatSet" name="NatSet" token="2000003" namespace="NatSet"/>
</type>
</parameter>
<parameter name="k" position="1"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Int32" token="20000f6" namespace="System"/>
</type>
</parameter>
</method>
<beforeSource><![CDATA[        [PexAllowedContractRequiresFailure]
        public void insert(int k)
        {]]></beforeSource>
<source><![CDATA[            Contract.Requires(k >= 0);]]></source>
<afterSource><![CDATA[            Contract.Ensures(k<100 ? sm[k] : rest.Contains(k));
            Contract.Ensures(max == findMax());
]]></afterSource>
</frame>
<frame value="  at NatSet.insertTest(Int32[]) in C:\Users\MehmetBerk\documents\visual studio 2010\Projects\NatSet\NatSet\NatSet.cs(187)" method="NatSet.insertTest(Int32[])" offset="123" file="C:\Users\MehmetBerk\documents\visual studio 2010\Projects\NatSet\NatSet\NatSet.cs" line="187"><method assemblyName="NatSet" name="insertTest" token="600000a"><declaringType assemblyName="NatSet" name="NatSet" token="2000003" namespace="NatSet"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="NatSet" name="NatSet" token="2000003" namespace="NatSet"/>
</type>
</parameter>
<parameter name="values" position="1"><type spec="SzArray"><elementType spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Int32" token="20000f6" namespace="System"/>
</elementType>
</type>
</parameter>
</method>
<beforeSource><![CDATA[            PexAssume.TrueForAny(0, values.Length, i => (values[i] < 100));

            for (int i = 0; i < values.Length; i++)]]></beforeSource>
<source><![CDATA[                insert(values[i]);]]></source>
<afterSource><![CDATA[
        }
]]></afterSource>
</frame>
</stackTrace>
</exception>
</exceptionChain>
<pathCondition><![CDATA[return values != (int[])null && 100 < values[1] && values[0] < 0 && values.Length == 2;
]]></pathCondition>
</generatedTest>
<test name="insertTest" state="success" duration="0,01"/>
<test name="insertTest" state="success" duration="0,01"/>
<test name="insertTest" state="success" duration="0,01"/>
<test name="insertTest" state="success" duration="0,02"/>
<test name="insertTest" state="success" duration="0,01"/>
<test name="insertTest" state="success" duration="0,01"/>
<test name="insertTest" state="success" duration="0,01"/>
<test name="insertTest" state="success" duration="0,02"/>
<generatedTest id="c8b45bca-9a3f-4ec3-b413-550c0f8acc6c" index="2" run="17" status="normaltermination" generated="true" new="true" assemblyName="NatSet" name="insertTest954"><declaringType assemblyName="NatSet" name="NatSet" token="ffffffff" namespace="NatSet"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="NatSet" name="NatSet" token="ffffffff" namespace="NatSet"/>
</type>
</parameter>
<rcov name="Block" dcov="0" dtot="0" acov="0" atot="0"/>
<rcov name="asserts" dcov="1" dtot="0" acov="10" atot="10"/>
<value name="values">{0, 103}</value>
<code><![CDATA[int[] ints = new int[2];
ints[1] = 103;
this.insertTest(ints);
]]></code>
<methodCode imports="Microsoft.VisualStudio.TestTools.UnitTesting;Microsoft.Pex.Framework.Generated"><![CDATA[[TestMethod]
[PexGeneratedBy(typeof(global::NatSet.NatSet))]
public void insertTest954()
{
    int[] ints = new int[2];
    ints[1] = 103;
    this.insertTest(ints);
}
]]></methodCode>
<reference name="Microsoft.VisualStudio.QualityTools.UnitTestFramework"/>
<reference name="mscorlib" location="C:\Windows\Microsoft.NET\Framework\v4.0.30319\mscorlib.dll"/>
<reference name="Microsoft.Pex.Framework"/>
<reference name="NatSet" location="C:\Users\MehmetBerk\documents\visual studio 2010\Projects\NatSet\NatSet\bin\Debug\NatSet.dll"/>
<pathCondition><![CDATA[return values != (int[])null && -1 < values[0] && values[0] < 100 && (uint)(values[0]) < 100u && values.Length == 2 && values[1] == 103;
]]></pathCondition>
</generatedTest>
<test name="insertTest" state="success" duration="0,03"/>
<generatedTest id="b1dedb24-91bc-469e-80b3-1fe544a278df" index="3" run="18" status="normaltermination" generated="true" new="true" assemblyName="NatSet" name="insertTest458"><declaringType assemblyName="NatSet" name="NatSet" token="ffffffff" namespace="NatSet"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="NatSet" name="NatSet" token="ffffffff" namespace="NatSet"/>
</type>
</parameter>
<rcov name="Block" dcov="0" dtot="0" acov="0" atot="0"/>
<rcov name="asserts" dcov="0" dtot="0" acov="10" atot="10"/>
<value name="values">{0, 516}</value>
<code><![CDATA[int[] ints = new int[2];
ints[1] = 516;
this.insertTest(ints);
]]></code>
<methodCode imports="Microsoft.VisualStudio.TestTools.UnitTesting;Microsoft.Pex.Framework.Generated"><![CDATA[[TestMethod]
[PexGeneratedBy(typeof(global::NatSet.NatSet))]
public void insertTest458()
{
    int[] ints = new int[2];
    ints[1] = 516;
    this.insertTest(ints);
}
]]></methodCode>
<reference name="Microsoft.VisualStudio.QualityTools.UnitTestFramework"/>
<reference name="mscorlib" location="C:\Windows\Microsoft.NET\Framework\v4.0.30319\mscorlib.dll"/>
<reference name="Microsoft.Pex.Framework"/>
<reference name="NatSet" location="C:\Users\MehmetBerk\documents\visual studio 2010\Projects\NatSet\NatSet\bin\Debug\NatSet.dll"/>
<pathCondition><![CDATA[return values != (int[])null && -1 < values[0] && values[0] < 100 && (uint)(values[0]) < 100u && values.Length == 2 && values[1] == 516;
]]></pathCondition>
</generatedTest>
<test name="insertTest" state="success" duration="0,02"/>
<test name="insertTest" state="success" duration="0,02"/>
<test name="insertTest" state="success" duration="0,02"/>
<test name="insertTest" state="success" duration="0,02"/>
<test name="insertTest" state="success" duration="0,02"/>
<test name="insertTest" state="success" duration="0,03"/>
<test name="insertTest" state="success" duration="0,03"/>
<generatedTest id="c358d045-5512-4416-8b8c-09f37012c604" index="4" run="25" status="normaltermination" generated="true" new="true" assemblyName="NatSet" name="insertTest9511"><declaringType assemblyName="NatSet" name="NatSet" token="ffffffff" namespace="NatSet"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="NatSet" name="NatSet" token="ffffffff" namespace="NatSet"/>
</type>
</parameter>
<rcov name="Block" dcov="0" dtot="0" acov="0" atot="0"/>
<rcov name="asserts" dcov="0" dtot="0" acov="10" atot="10"/>
<value name="values">{0, 614}</value>
<code><![CDATA[int[] ints = new int[2];
ints[1] = 614;
this.insertTest(ints);
]]></code>
<methodCode imports="Microsoft.VisualStudio.TestTools.UnitTesting;Microsoft.Pex.Framework.Generated"><![CDATA[[TestMethod]
[PexGeneratedBy(typeof(global::NatSet.NatSet))]
public void insertTest9511()
{
    int[] ints = new int[2];
    ints[1] = 614;
    this.insertTest(ints);
}
]]></methodCode>
<reference name="Microsoft.VisualStudio.QualityTools.UnitTestFramework"/>
<reference name="mscorlib" location="C:\Windows\Microsoft.NET\Framework\v4.0.30319\mscorlib.dll"/>
<reference name="Microsoft.Pex.Framework"/>
<reference name="NatSet" location="C:\Users\MehmetBerk\documents\visual studio 2010\Projects\NatSet\NatSet\bin\Debug\NatSet.dll"/>
<pathCondition><![CDATA[return values != (int[])null && -1 < values[0] && values[0] < 100 && (uint)(values[0]) < 100u && values.Length == 2 && values[1] == 614;
]]></pathCondition>
</generatedTest>
<test name="insertTest" state="success" duration="0,03"/>
<test name="insertTest" state="success" duration="0,02"/>
<test name="insertTest" state="success" duration="0,03"/>
<test name="insertTest" state="success" duration="0,02"/>
<test name="insertTest" state="success" duration="0,02"/>
<test name="insertTest" state="success" duration="0,03"/>
<test name="insertTest" state="success" duration="0,03"/>
<test name="insertTest" state="success" duration="0,03"/>
<test name="insertTest" state="success" duration="0,03"/>
<test name="insertTest" state="success" duration="0,03"/>
<test name="insertTest" state="success" duration="0,03"/>
<test name="insertTest" state="success" duration="0,04"/>
<test name="insertTest" state="success" duration="0,04"/>
<test name="insertTest" state="success" duration="0,03"/>
<test name="insertTest" state="success" duration="0,02"/>
<test name="insertTest" state="success" duration="0,04"/>
<test name="insertTest" state="success" duration="0,04"/>
<test name="insertTest" state="success" duration="0,04"/>
<test name="insertTest" state="success" duration="0,04"/>
<test name="insertTest" state="success" duration="0,04"/>
<test name="insertTest" state="success" duration="0,04"/>
<test name="insertTest" state="success" duration="0,04"/>
<test name="insertTest" state="success" duration="0,04"/>
<test name="insertTest" state="success" duration="0,04"/>
<test name="insertTest" state="success" duration="0,04"/>
<test name="insertTest" state="success" duration="0,04"/>
<test name="insertTest" state="success" duration="0,04"/>
<test name="insertTest" state="success" duration="0,05"/>
<test name="insertTest" state="success" duration="0,04"/>
<test name="insertTest" state="success" duration="0,05"/>
<test name="insertTest" state="success" duration="0,05"/>
<test name="insertTest" state="success" duration="0,04"/>
<test name="insertTest" state="success" duration="0,06"/>
<test name="insertTest" state="success" duration="0,05"/>
<test name="insertTest" state="success" duration="0,05"/>
<test name="insertTest" state="success" duration="0,05"/>
<test name="insertTest" state="success" duration="0,05"/>
<test name="insertTest" state="success" duration="0,05"/>
<test name="insertTest" state="success" duration="0,05"/>
<test name="insertTest" state="success" duration="0,06"/>
<test name="insertTest" state="success" duration="0,06"/>
<test name="insertTest" state="success" duration="0,05"/>
<test name="insertTest" state="success" duration="0,06"/>
<test name="insertTest" state="success" duration="0,06"/>
<test name="insertTest" state="success" duration="0,05"/>
<test name="insertTest" state="success" duration="0,05"/>
<test name="insertTest" state="success" duration="0,05"/>
<test name="insertTest" state="success" duration="0,06"/>
<test name="insertTest" state="success" duration="0,05"/>
<test name="insertTest" state="success" duration="0,05"/>
<test name="insertTest" state="success" duration="0,05"/>
<test name="insertTest" state="success" duration="0,05"/>
<test name="insertTest" state="success" duration="0,06"/>
<test name="insertTest" state="success" duration="0,06"/>
<test name="insertTest" state="success" duration="0,06"/>
<test name="insertTest" state="success" duration="0,06"/>
<test name="insertTest" state="success" duration="0,07"/>
<test name="insertTest" state="success" duration="0,06"/>
<test name="insertTest" state="success" duration="0,06"/>
<test name="insertTest" state="success" duration="0,06"/>
<test name="insertTest" state="success" duration="0,08"/>
<test name="insertTest" state="success" duration="0,07"/>
<test name="insertTest" state="success" duration="0,07"/>
<test name="insertTest" state="success" duration="0,06"/>
<test name="insertTest" state="success" duration="0,07"/>
<test name="insertTest" state="success" duration="0,07"/>
<test name="insertTest" state="success" duration="0,03"/>
<test name="insertTest" state="success" duration="0,07"/>
<test name="insertTest" state="success" duration="0,10"/>
<test name="insertTest" state="success" duration="0,07"/>
<test name="insertTest" state="success" duration="0,06"/>
<test name="insertTest" state="success" duration="0,06"/>
<test name="insertTest" state="success" duration="0,07"/>
<test name="insertTest" state="success" duration="0,13"/>
<test name="insertTest" state="success" duration="0,07"/>
<test name="insertTest" state="success" duration="0,06"/>
<test name="insertTest" state="success" duration="0,07"/>
<test name="insertTest" state="success" duration="0,06"/>
<test name="insertTest" state="success" duration="0,07"/>
<test name="insertTest" state="success" duration="0,00"/>
<test name="insertTest" state="success" duration="0,07"/>
<test name="insertTest" state="success" duration="0,07"/>
<test name="insertTest" state="success" duration="0,08"/>
<test name="insertTest" state="success" duration="0,07"/>
<test name="insertTest" state="success" duration="0,07"/>
<test name="insertTest" state="success" duration="0,08"/>
<test name="insertTest" state="success" duration="0,07"/>
<test name="insertTest" state="success" duration="0,07"/>
<test name="insertTest" state="success" duration="0,08"/>
<test name="insertTest" state="success" duration="0,08"/>
<test name="insertTest" state="success" duration="0,12"/>
<test name="insertTest" state="success" duration="0,09"/>
<test name="insertTest" state="success" duration="0,08"/>
<test name="insertTest" state="success" duration="0,11"/>
<test name="insertTest" state="success" duration="0,08"/>
<test name="insertTest" state="success" duration="0,12"/>
<test name="insertTest" state="success" duration="0,07"/>
<test name="insertTest" state="success" duration="0,11"/>
<test name="insertTest" state="success" duration="0,09"/>
<test name="insertTest" state="success" duration="0,14"/>
<boundary kind="maxrunswithoutnewtests" value="100" message="maximum runs without new tests reached"><update kind="AddOrUpdateAttributeCodeUpdate" name="Set MaxRunsWithoutNewTests=200" update="true"><attributeCtor><definition assemblyName="Microsoft.Pex.Framework" name=".ctor" token="6000e51"><declaringType assemblyName="Microsoft.Pex.Framework" name="PexMethodAttribute" token="200027f" namespace="Microsoft.Pex.Framework"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="Microsoft.Pex.Framework" name="PexMethodAttribute" token="200027f" namespace="Microsoft.Pex.Framework"/>
</type>
</parameter>
</definition>
</attributeCtor>
<argument><value kind="I4Expression" value="200"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Int32" token="20000f6" namespace="System"/>
</type>
</value>
<property><definition assemblyName="Microsoft.Pex.Framework" name="MaxRunsWithoutNewTests" token="17000346"><declaringType assemblyName="Microsoft.Pex.Framework" name="PexSettingsAttributeBase" token="2000273" namespace="Microsoft.Pex.Framework.Settings"/>
<propertyType spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Int32" token="20000f6" namespace="System"/>
</propertyType>
</definition>
</property>
</argument>
<target><method><definition assemblyName="NatSet" name="insertTest" token="600000a"><declaringType assemblyName="NatSet" name="NatSet" token="2000003" namespace="NatSet"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="NatSet" name="NatSet" token="2000003" namespace="NatSet"/>
</type>
</parameter>
<parameter name="values" position="1"><type spec="SzArray"><elementType spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Int32" token="20000f6" namespace="System"/>
</elementType>
</type>
</parameter>
</definition>
</method>
</target>
</update>
</boundary>
<coverage domain="usercodeundertest" unit="block" covered="0" total="0" coveredRatio="0"/>
<log level="message" time="2015-03-18 19:01:05Z" category="symbols" message="could not merge source of NatSet.NatSet.insertTest in C:\Users\MehmetBerk\documents\visual studio 2010\Projects\NatSet\NatSet\NatSet.cs:[6195, 6258)"/>
<log level="message" time="2015-03-18 19:01:05Z" category="symbols" message="could not merge source of NatSet.NatSet.insertTest in C:\Users\MehmetBerk\documents\visual studio 2010\Projects\NatSet\NatSet\NatSet.cs:[6272, 6335)"/>
<sourceCoverage xml="cov\e395\cov.xml" html="cov\e395\cov.html"/>
<result name="insertTest(Int32[])" state="success" duration="7.80089302316596"/>
<duration start="2015-03-18 19:00:57Z" end="2015-03-18 19:01:05Z" seconds="7.8041996"/>
<trajectory><image src="fix\natsetnatsetinse635623092654401670.trajectories.png" width="800" height="1600"/>
</trajectory>
</exploration>
<exploration shortName="intersect(NatSet)" fullName="NatSet.NatSet.intersect(NatSet)"><method><definition assemblyName="NatSet" name="intersect" token="6000007"><declaringType assemblyName="NatSet" name="NatSet" token="2000003" namespace="NatSet"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="NatSet" name="NatSet" token="2000003" namespace="NatSet"/>
</type>
</parameter>
<parameter name="other" position="1"><type spec="Class"><definition assemblyName="NatSet" name="NatSet" token="2000003" namespace="NatSet"/>
</type>
</parameter>
</definition>
</method>
<test name="intersect" state="success" duration="0,03"/>
<generatedTest id="5de2a02d-5a79-4d7d-8b3f-06658578703e" index="1" run="1" exceptionState="expected" status="expectedexception" generated="true" new="true" assemblyName="NatSet" name="intersectThrowsContractException10"><declaringType assemblyName="NatSet" name="NatSet" token="ffffffff" namespace="NatSet"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="NatSet" name="NatSet" token="ffffffff" namespace="NatSet"/>
</type>
</parameter>
<rcov name="Block" dcov="0" dtot="0" acov="0" atot="0"/>
<rcov name="asserts" dcov="0" dtot="3" acov="0" atot="3"/>
<value name="other">null</value>
<code><![CDATA[try
{
  this.intersect((global::NatSet.NatSet)null);
  throw 
    new AssertFailedException("expected an exception of type ContractException");
}
catch(Exception ex)
{
  if (!PexContract.IsContractException(ex))
    throw ex;
}
]]></code>
<methodCode imports="Microsoft.VisualStudio.TestTools.UnitTesting;System;Microsoft.Pex.Framework.Generated;Microsoft.Pex.Engine.Exceptions"><![CDATA[[TestMethod]
[PexGeneratedBy(typeof(global::NatSet.NatSet))]
[PexRaisedContractException(PexExceptionState.Expected)]
public void intersectThrowsContractException10()
{
    try
    {
      this.intersect((global::NatSet.NatSet)null);
      throw 
        new AssertFailedException("expected an exception of type ContractException");
    }
    catch(Exception ex)
    {
      if (!PexContract.IsContractException(ex))
        throw ex;
    }
}
]]></methodCode>
<reference name="Microsoft.VisualStudio.QualityTools.UnitTestFramework"/>
<reference name="mscorlib" location="C:\Windows\Microsoft.NET\Framework\v4.0.30319\mscorlib.dll"/>
<reference name="Microsoft.Pex.Framework"/>
<reference name="NatSet" location="C:\Users\MehmetBerk\documents\visual studio 2010\Projects\NatSet\NatSet\bin\Debug\NatSet.dll"/>
<exceptionChain><exception typeDisplayName="ContractException" source="NatSet"><message><![CDATA[Önkoşul başarısız oldu: other != null]]></message>
<type spec="Class"><definition assemblyName="NatSet" name="ContractException" token="2000010"><declaringType assemblyName="NatSet" name="__ContractsRuntime" token="2000004" namespace="System.Diagnostics.Contracts"/>
</definition>
</type>
<stackTrace><frame value="  at NatSet.intersect(NatSet) in C:\Users\MehmetBerk\documents\visual studio 2010\Projects\NatSet\NatSet\NatSet.cs(127)" method="NatSet.intersect(NatSet)" offset="30" file="C:\Users\MehmetBerk\documents\visual studio 2010\Projects\NatSet\NatSet\NatSet.cs" line="127"><method assemblyName="NatSet" name="intersect" token="6000007"><declaringType assemblyName="NatSet" name="NatSet" token="2000003" namespace="NatSet"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="NatSet" name="NatSet" token="2000003" namespace="NatSet"/>
</type>
</parameter>
<parameter name="other" position="1"><type spec="Class"><definition assemblyName="NatSet" name="NatSet" token="2000003" namespace="NatSet"/>
</type>
</parameter>
</method>
<beforeSource><![CDATA[        [PexAllowedContractRequiresFailure]
        public void intersect(NatSet other)
        {]]></beforeSource>
<source><![CDATA[            Contract.Requires(other != null);]]></source>
<afterSource><![CDATA[            Contract.Requires(other != this);
            Contract.Ensures(Contract.OldValue(other) == other);
            Contract.Ensures(Contract.ForAll(0, this.sm.Length,]]></afterSource>
</frame>
</stackTrace>
</exception>
</exceptionChain>
<pathCondition><![CDATA[return other == (global::NatSet.NatSet)null;
]]></pathCondition>
</generatedTest>
<test name="intersect" state="success" duration="0,00"/>
<test name="intersect" state="success" duration="0,09"/>
<test name="intersect" state="success" duration="0,00"/>
<test name="intersect" state="success" duration="0,00"/>
<test name="intersect" state="success" duration="0,00"/>
<test name="intersect" state="success" duration="0,01"/>
<test name="intersect" state="success" duration="0,01"/>
<test name="intersect" state="success" duration="0,03"/>
<test name="intersect" state="success" duration="0,01"/>
<test name="intersect" state="success" duration="0,02"/>
<test name="intersect" state="success" duration="0,01"/>
<test name="intersect" state="success" duration="0,02"/>
<test name="intersect" state="success" duration="0,01"/>
<test name="intersect" state="success" duration="0,06"/>
<generatedTest id="5b87a625-8b5a-4ceb-b8fb-77a49f7bfa3f" index="2" run="15" status="normaltermination" generated="true" new="true" assemblyName="NatSet" name="intersect86201"><declaringType assemblyName="NatSet" name="NatSet" token="ffffffff" namespace="NatSet"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="NatSet" name="NatSet" token="ffffffff" namespace="NatSet"/>
</type>
</parameter>
<rcov name="Block" dcov="0" dtot="0" acov="0" atot="0"/>
<rcov name="asserts" dcov="3" dtot="0" acov="10" atot="10"/>
<value name="other">new NatSet{sm={Length=100; false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true},rest={},max=99}</value>
<code><![CDATA[List<int> list;
global::NatSet.NatSet natSet;
int[] ints = new int[0];
list = new List<int>((IEnumerable<int>)ints);
bool[] bs = new bool[100];
bs[99] = true;
natSet = NatSetFactory.Create(bs, list, 99);
this.intersect(natSet);
]]></code>
<methodCode imports="System.Collections.Generic;Microsoft.VisualStudio.TestTools.UnitTesting;Microsoft.Pex.Framework.Generated"><![CDATA[[TestMethod]
[PexGeneratedBy(typeof(global::NatSet.NatSet))]
public void intersect86201()
{
    List<int> list;
    global::NatSet.NatSet natSet;
    int[] ints = new int[0];
    list = new List<int>((IEnumerable<int>)ints);
    bool[] bs = new bool[100];
    bs[99] = true;
    natSet = NatSetFactory.Create(bs, list, 99);
    this.intersect(natSet);
}
]]></methodCode>
<reference name="Microsoft.VisualStudio.QualityTools.UnitTestFramework"/>
<reference name="mscorlib" location="C:\Windows\Microsoft.NET\Framework\v4.0.30319\mscorlib.dll"/>
<reference name="Microsoft.Pex.Framework"/>
<reference name="NatSet" location="C:\Users\MehmetBerk\documents\visual studio 2010\Projects\NatSet\NatSet\bin\Debug\NatSet.dll"/>
<pathAssumption><![CDATA[List<int> s0 = new;
return rest_list == s0 && rest_list != (List<int>)null && sm_bs.Length == 100 && sm_bs != (bool[])null && other != (global::NatSet.NatSet)null && other == (global::NatSet.NatSet)s0;
]]></pathAssumption>
<pathCondition><![CDATA[return c != (int[])null && sm_bs[99] != (sbyte)0 && 
                           c.Length == 0 && max_i == 99 && sm_bs[0] == (sbyte)0 && sm_bs[1] == (sbyte)0 && sm_bs[2] == (sbyte)0 && sm_bs[3] == (sbyte)0 && sm_bs[4] == (sbyte)0 && sm_bs[5] == (sbyte)0 && 
                                                                                                                                                                                   sm_bs[6] == (sbyte)0 && sm_bs[7] == (sbyte)0 && sm_bs[8] == (sbyte)0 && sm_bs[9] == (sbyte)0 && sm_bs[10] == (sbyte)0 && sm_bs[11] == (sbyte)0 && sm_bs[12] == (sbyte)0 && sm_bs[13] == (sbyte)0 && 
                                                                                                                                                                                                                                                                                                                                                              sm_bs[14] == (sbyte)0 && sm_bs[15] == (sbyte)0 && sm_bs[16] == (sbyte)0 && sm_bs[17] == (sbyte)0 && sm_bs[18] == (sbyte)0 && sm_bs[19] == (sbyte)0 && sm_bs[20] == (sbyte)0 && 
sm_bs[21] == (sbyte)0 && sm_bs[22] == (sbyte)0 && sm_bs[23] == (sbyte)0 && sm_bs[24] == (sbyte)0 && sm_bs[25] == (sbyte)0 && sm_bs[26] == (sbyte)0 && sm_bs[27] == (sbyte)0 && 
sm_bs[28] == (sbyte)0 && sm_bs[29] == (sbyte)0 && sm_bs[30] == (sbyte)0 && sm_bs[31] == (sbyte)0 && sm_bs[32] == (sbyte)0 && sm_bs[33] == (sbyte)0 && sm_bs[34] == (sbyte)0 && 
sm_bs[35] == (sbyte)0 && sm_bs[36] == (sbyte)0 && sm_bs[37] == (sbyte)0 && sm_bs[38] == (sbyte)0 && sm_bs[39] == (sbyte)0 && sm_bs[40] == (sbyte)0 && sm_bs[41] == (sbyte)0 && 
sm_bs[42] == (sbyte)0 && sm_bs[43] == (sbyte)0 && sm_bs[44] == (sbyte)0 && sm_bs[45] == (sbyte)0 && sm_bs[46] == (sbyte)0 && sm_bs[47] == (sbyte)0 && sm_bs[48] == (sbyte)0 && 
sm_bs[49] == (sbyte)0 && sm_bs[50] == (sbyte)0 && sm_bs[51] == (sbyte)0 && sm_bs[52] == (sbyte)0 && sm_bs[53] == (sbyte)0 && sm_bs[54] == (sbyte)0 && sm_bs[55] == (sbyte)0 && 
sm_bs[56] == (sbyte)0 && sm_bs[57] == (sbyte)0 && sm_bs[58] == (sbyte)0 && sm_bs[59] == (sbyte)0 && sm_bs[60] == (sbyte)0 && sm_bs[61] == (sbyte)0 && sm_bs[62] == (sbyte)0 && 
sm_bs[63] == (sbyte)0 && sm_bs[64] == (sbyte)0 && sm_bs[65] == (sbyte)0 && sm_bs[66] == (sbyte)0 && sm_bs[67] == (sbyte)0 && sm_bs[68] == (sbyte)0 && sm_bs[69] == (sbyte)0 && 
sm_bs[70] == (sbyte)0 && sm_bs[71] == (sbyte)0 && sm_bs[72] == (sbyte)0 && sm_bs[73] == (sbyte)0 && sm_bs[74] == (sbyte)0 && sm_bs[75] == (sbyte)0 && sm_bs[76] == (sbyte)0 && 
sm_bs[77] == (sbyte)0 && sm_bs[78] == (sbyte)0 && sm_bs[79] == (sbyte)0 && sm_bs[80] == (sbyte)0 && sm_bs[81] == (sbyte)0 && sm_bs[82] == (sbyte)0 && sm_bs[83] == (sbyte)0 && 
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          sm_bs[84] == (sbyte)0 && sm_bs[85] == (sbyte)0 && sm_bs[86] == (sbyte)0 && sm_bs[87] == (sbyte)0 && sm_bs[88] == (sbyte)0 && sm_bs[89] == (sbyte)0 && sm_bs[90] == (sbyte)0 && 
sm_bs[91] == (sbyte)0 && sm_bs[92] == (sbyte)0 && sm_bs[93] == (sbyte)0 && sm_bs[94] == (sbyte)0 && sm_bs[95] == (sbyte)0 && sm_bs[96] == (sbyte)0 && sm_bs[97] == (sbyte)0 && sm_bs[98] == (sbyte)0;
]]></pathCondition>
</generatedTest>
<test name="intersect" state="success" duration="0,09"/>
<generatedTest id="f1e92c0e-b29f-4da9-a321-767255290ccd" index="3" run="16" status="normaltermination" generated="true" new="true" assemblyName="NatSet" name="intersect43701"><declaringType assemblyName="NatSet" name="NatSet" token="ffffffff" namespace="NatSet"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="NatSet" name="NatSet" token="ffffffff" namespace="NatSet"/>
</type>
</parameter>
<rcov name="Block" dcov="0" dtot="0" acov="0" atot="0"/>
<rcov name="asserts" dcov="0" dtot="0" acov="10" atot="10"/>
<value name="other">new NatSet{sm={Length=100; true, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true},rest={},max=99}</value>
<code><![CDATA[List<int> list;
global::NatSet.NatSet natSet;
int[] ints = new int[0];
list = new List<int>((IEnumerable<int>)ints);
bool[] bs = new bool[100];
bs[0] = true;
bs[99] = true;
natSet = NatSetFactory.Create(bs, list, 99);
this.intersect(natSet);
]]></code>
<methodCode imports="System.Collections.Generic;Microsoft.VisualStudio.TestTools.UnitTesting;Microsoft.Pex.Framework.Generated"><![CDATA[[TestMethod]
[PexGeneratedBy(typeof(global::NatSet.NatSet))]
public void intersect43701()
{
    List<int> list;
    global::NatSet.NatSet natSet;
    int[] ints = new int[0];
    list = new List<int>((IEnumerable<int>)ints);
    bool[] bs = new bool[100];
    bs[0] = true;
    bs[99] = true;
    natSet = NatSetFactory.Create(bs, list, 99);
    this.intersect(natSet);
}
]]></methodCode>
<reference name="Microsoft.VisualStudio.QualityTools.UnitTestFramework"/>
<reference name="mscorlib" location="C:\Windows\Microsoft.NET\Framework\v4.0.30319\mscorlib.dll"/>
<reference name="Microsoft.Pex.Framework"/>
<reference name="NatSet" location="C:\Users\MehmetBerk\documents\visual studio 2010\Projects\NatSet\NatSet\bin\Debug\NatSet.dll"/>
<pathAssumption><![CDATA[List<int> s0 = new;
return rest_list == s0 && rest_list != (List<int>)null && sm_bs.Length == 100 && sm_bs != (bool[])null && other != (global::NatSet.NatSet)null && other == (global::NatSet.NatSet)s0;
]]></pathAssumption>
<pathCondition><![CDATA[return c != (int[])null && sm_bs[0] != (sbyte)0 && 
                           sm_bs[99] != (sbyte)0 && c.Length == 0 && max_i == 99 && sm_bs[1] == (sbyte)0 && sm_bs[2] == (sbyte)0 && sm_bs[3] == (sbyte)0 && sm_bs[4] == (sbyte)0 && sm_bs[5] == (sbyte)0 && 
                                                                                                                                                                                    sm_bs[6] == (sbyte)0 && sm_bs[7] == (sbyte)0 && sm_bs[8] == (sbyte)0 && sm_bs[9] == (sbyte)0 && sm_bs[10] == (sbyte)0 && sm_bs[11] == (sbyte)0 && sm_bs[12] == (sbyte)0 && sm_bs[13] == (sbyte)0 && 
                                                                                                                                                                                                                                                                                                                                                               sm_bs[14] == (sbyte)0 && sm_bs[15] == (sbyte)0 && sm_bs[16] == (sbyte)0 && sm_bs[17] == (sbyte)0 && sm_bs[18] == (sbyte)0 && sm_bs[19] == (sbyte)0 && sm_bs[20] == (sbyte)0 && 
sm_bs[21] == (sbyte)0 && sm_bs[22] == (sbyte)0 && sm_bs[23] == (sbyte)0 && sm_bs[24] == (sbyte)0 && sm_bs[25] == (sbyte)0 && sm_bs[26] == (sbyte)0 && sm_bs[27] == (sbyte)0 && 
sm_bs[28] == (sbyte)0 && sm_bs[29] == (sbyte)0 && sm_bs[30] == (sbyte)0 && sm_bs[31] == (sbyte)0 && sm_bs[32] == (sbyte)0 && sm_bs[33] == (sbyte)0 && sm_bs[34] == (sbyte)0 && 
sm_bs[35] == (sbyte)0 && sm_bs[36] == (sbyte)0 && sm_bs[37] == (sbyte)0 && sm_bs[38] == (sbyte)0 && sm_bs[39] == (sbyte)0 && sm_bs[40] == (sbyte)0 && sm_bs[41] == (sbyte)0 && 
sm_bs[42] == (sbyte)0 && sm_bs[43] == (sbyte)0 && sm_bs[44] == (sbyte)0 && sm_bs[45] == (sbyte)0 && sm_bs[46] == (sbyte)0 && sm_bs[47] == (sbyte)0 && sm_bs[48] == (sbyte)0 && 
sm_bs[49] == (sbyte)0 && sm_bs[50] == (sbyte)0 && sm_bs[51] == (sbyte)0 && sm_bs[52] == (sbyte)0 && sm_bs[53] == (sbyte)0 && sm_bs[54] == (sbyte)0 && sm_bs[55] == (sbyte)0 && 
sm_bs[56] == (sbyte)0 && sm_bs[57] == (sbyte)0 && sm_bs[58] == (sbyte)0 && sm_bs[59] == (sbyte)0 && sm_bs[60] == (sbyte)0 && sm_bs[61] == (sbyte)0 && sm_bs[62] == (sbyte)0 && 
sm_bs[63] == (sbyte)0 && sm_bs[64] == (sbyte)0 && sm_bs[65] == (sbyte)0 && sm_bs[66] == (sbyte)0 && sm_bs[67] == (sbyte)0 && sm_bs[68] == (sbyte)0 && sm_bs[69] == (sbyte)0 && 
sm_bs[70] == (sbyte)0 && sm_bs[71] == (sbyte)0 && sm_bs[72] == (sbyte)0 && sm_bs[73] == (sbyte)0 && sm_bs[74] == (sbyte)0 && sm_bs[75] == (sbyte)0 && sm_bs[76] == (sbyte)0 && 
sm_bs[77] == (sbyte)0 && sm_bs[78] == (sbyte)0 && sm_bs[79] == (sbyte)0 && sm_bs[80] == (sbyte)0 && sm_bs[81] == (sbyte)0 && sm_bs[82] == (sbyte)0 && sm_bs[83] == (sbyte)0 && 
sm_bs[84] == (sbyte)0 && sm_bs[85] == (sbyte)0 && sm_bs[86] == (sbyte)0 && sm_bs[87] == (sbyte)0 && sm_bs[88] == (sbyte)0 && sm_bs[89] == (sbyte)0 && sm_bs[90] == (sbyte)0 && 
sm_bs[91] == (sbyte)0 && sm_bs[92] == (sbyte)0 && sm_bs[93] == (sbyte)0 && sm_bs[94] == (sbyte)0 && sm_bs[95] == (sbyte)0 && sm_bs[96] == (sbyte)0 && sm_bs[97] == (sbyte)0 && sm_bs[98] == (sbyte)0;
]]></pathCondition>
</generatedTest>
<test name="intersect" state="success" duration="0,01"/>
<test name="intersect" state="success" duration="0,06"/>
<test name="intersect" state="success" duration="0,03"/>
<test name="intersect" state="success" duration="0,01"/>
<test name="intersect" state="success" duration="0,06"/>
<test name="intersect" state="success" duration="0,01"/>
<test name="intersect" state="success" duration="0,09"/>
<test name="intersect" state="success" duration="0,03"/>
<test name="intersect" state="success" duration="0,02"/>
<test name="intersect" state="success" duration="0,01"/>
<test name="intersect" state="success" duration="0,01"/>
<test name="intersect" state="success" duration="0,06"/>
<test name="intersect" state="success" duration="0,01"/>
<test name="intersect" state="success" duration="0,06"/>
<test name="intersect" state="success" duration="0,01"/>
<test name="intersect" state="success" duration="0,00"/>
<test name="intersect" state="success" duration="0,01"/>
<test name="intersect" state="success" duration="0,01"/>
<test name="intersect" state="success" duration="0,01"/>
<test name="intersect" state="success" duration="0,01"/>
<test name="intersect" state="success" duration="0,06"/>
<generatedTest id="71b8f3ed-7058-45fd-b5d6-cefc99bd65a0" index="4" run="37" status="normaltermination" generated="true" new="true" assemblyName="NatSet" name="intersect38701"><declaringType assemblyName="NatSet" name="NatSet" token="ffffffff" namespace="NatSet"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="NatSet" name="NatSet" token="ffffffff" namespace="NatSet"/>
</type>
</parameter>
<rcov name="Block" dcov="0" dtot="0" acov="0" atot="0"/>
<rcov name="asserts" dcov="0" dtot="0" acov="10" atot="10"/>
<value name="other">new NatSet{sm={Length=100; false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false},rest={1022, 1023},max=1023}</value>
<code><![CDATA[List<int> list;
global::NatSet.NatSet natSet;
int[] ints = new int[2];
ints[0] = 1022;
ints[1] = 1023;
list = new List<int>((IEnumerable<int>)ints);
bool[] bs = new bool[100];
natSet = NatSetFactory.Create(bs, list, 1023);
this.intersect(natSet);
]]></code>
<methodCode imports="System.Collections.Generic;Microsoft.VisualStudio.TestTools.UnitTesting;Microsoft.Pex.Framework.Generated"><![CDATA[[TestMethod]
[PexGeneratedBy(typeof(global::NatSet.NatSet))]
public void intersect38701()
{
    List<int> list;
    global::NatSet.NatSet natSet;
    int[] ints = new int[2];
    ints[0] = 1022;
    ints[1] = 1023;
    list = new List<int>((IEnumerable<int>)ints);
    bool[] bs = new bool[100];
    natSet = NatSetFactory.Create(bs, list, 1023);
    this.intersect(natSet);
}
]]></methodCode>
<reference name="Microsoft.VisualStudio.QualityTools.UnitTestFramework"/>
<reference name="mscorlib" location="C:\Windows\Microsoft.NET\Framework\v4.0.30319\mscorlib.dll"/>
<reference name="Microsoft.Pex.Framework"/>
<reference name="NatSet" location="C:\Users\MehmetBerk\documents\visual studio 2010\Projects\NatSet\NatSet\bin\Debug\NatSet.dll"/>
<pathAssumption><![CDATA[List<int> s0 = new;
return rest_list == s0 && rest_list != (List<int>)null && sm_bs.Length == 100 && sm_bs != (bool[])null && other != (global::NatSet.NatSet)null && other == (global::NatSet.NatSet)s0;
]]></pathAssumption>
<pathCondition><![CDATA[return c != (int[])null && 99 < c[0] && 99 < c[1] && c[0] < c[1] && max_i == c[1] && c.Length == 2 && 
                                                                                     c[1] >= c[0] && sm_bs[0] == (sbyte)0 && sm_bs[1] == (sbyte)0 && sm_bs[2] == (sbyte)0 && sm_bs[3] == (sbyte)0 && sm_bs[4] == (sbyte)0 && sm_bs[5] == (sbyte)0 && sm_bs[6] == (sbyte)0 && 
                                                                                                                                                                                                                                                     sm_bs[7] == (sbyte)0 && sm_bs[8] == (sbyte)0 && sm_bs[9] == (sbyte)0 && sm_bs[10] == (sbyte)0 && sm_bs[11] == (sbyte)0 && sm_bs[12] == (sbyte)0 && sm_bs[13] == (sbyte)0 && sm_bs[14] == (sbyte)0 && 
                                                                                                                                                                                                                                                                                                                                                                                                                                 sm_bs[15] == (sbyte)0 && sm_bs[16] == (sbyte)0 && sm_bs[17] == (sbyte)0 && sm_bs[18] == (sbyte)0 && sm_bs[19] == (sbyte)0 && sm_bs[20] == (sbyte)0 && sm_bs[21] == (sbyte)0 && 
sm_bs[22] == (sbyte)0 && sm_bs[23] == (sbyte)0 && sm_bs[24] == (sbyte)0 && sm_bs[25] == (sbyte)0 && sm_bs[26] == (sbyte)0 && sm_bs[27] == (sbyte)0 && sm_bs[28] == (sbyte)0 && 
sm_bs[29] == (sbyte)0 && sm_bs[30] == (sbyte)0 && sm_bs[31] == (sbyte)0 && sm_bs[32] == (sbyte)0 && sm_bs[33] == (sbyte)0 && sm_bs[34] == (sbyte)0 && sm_bs[35] == (sbyte)0 && 
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   sm_bs[36] == (sbyte)0 && sm_bs[37] == (sbyte)0 && sm_bs[38] == (sbyte)0 && sm_bs[39] == (sbyte)0 && sm_bs[40] == (sbyte)0 && sm_bs[41] == (sbyte)0 && sm_bs[42] == (sbyte)0 && 
sm_bs[43] == (sbyte)0 && sm_bs[44] == (sbyte)0 && sm_bs[45] == (sbyte)0 && sm_bs[46] == (sbyte)0 && sm_bs[47] == (sbyte)0 && sm_bs[48] == (sbyte)0 && sm_bs[49] == (sbyte)0 && 
sm_bs[50] == (sbyte)0 && sm_bs[51] == (sbyte)0 && sm_bs[52] == (sbyte)0 && sm_bs[53] == (sbyte)0 && sm_bs[54] == (sbyte)0 && sm_bs[55] == (sbyte)0 && sm_bs[56] == (sbyte)0 && 
sm_bs[57] == (sbyte)0 && sm_bs[58] == (sbyte)0 && sm_bs[59] == (sbyte)0 && sm_bs[60] == (sbyte)0 && sm_bs[61] == (sbyte)0 && sm_bs[62] == (sbyte)0 && sm_bs[63] == (sbyte)0 && 
sm_bs[64] == (sbyte)0 && sm_bs[65] == (sbyte)0 && sm_bs[66] == (sbyte)0 && sm_bs[67] == (sbyte)0 && sm_bs[68] == (sbyte)0 && sm_bs[69] == (sbyte)0 && sm_bs[70] == (sbyte)0 && 
sm_bs[71] == (sbyte)0 && sm_bs[72] == (sbyte)0 && sm_bs[73] == (sbyte)0 && sm_bs[74] == (sbyte)0 && sm_bs[75] == (sbyte)0 && sm_bs[76] == (sbyte)0 && sm_bs[77] == (sbyte)0 && 
sm_bs[78] == (sbyte)0 && sm_bs[79] == (sbyte)0 && sm_bs[80] == (sbyte)0 && sm_bs[81] == (sbyte)0 && sm_bs[82] == (sbyte)0 && sm_bs[83] == (sbyte)0 && sm_bs[84] == (sbyte)0 && 
sm_bs[85] == (sbyte)0 && sm_bs[86] == (sbyte)0 && sm_bs[87] == (sbyte)0 && sm_bs[88] == (sbyte)0 && sm_bs[89] == (sbyte)0 && sm_bs[90] == (sbyte)0 && sm_bs[91] == (sbyte)0 && 
sm_bs[92] == (sbyte)0 && sm_bs[93] == (sbyte)0 && sm_bs[94] == (sbyte)0 && sm_bs[95] == (sbyte)0 && sm_bs[96] == (sbyte)0 && sm_bs[97] == (sbyte)0 && sm_bs[98] == (sbyte)0 && sm_bs[99] == (sbyte)0;
]]></pathCondition>
</generatedTest>
<test name="intersect" state="success" duration="0,01"/>
<test name="intersect" state="success" duration="0,09"/>
<test name="intersect" state="success" duration="0,01"/>
<test name="intersect" state="success" duration="0,01"/>
<test name="intersect" state="success" duration="0,07"/>
<test name="intersect" state="success" duration="0,02"/>
<test name="intersect" state="success" duration="0,08"/>
<generatedTest id="40883a0c-16a5-44c5-99f3-c5f1a1765261" index="5" run="44" status="normaltermination" generated="true" new="true" assemblyName="NatSet" name="intersect20901"><declaringType assemblyName="NatSet" name="NatSet" token="ffffffff" namespace="NatSet"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="NatSet" name="NatSet" token="ffffffff" namespace="NatSet"/>
</type>
</parameter>
<rcov name="Block" dcov="0" dtot="0" acov="0" atot="0"/>
<rcov name="asserts" dcov="0" dtot="0" acov="10" atot="10"/>
<value name="other">new NatSet{sm={Length=100; false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false},rest={},max=-1}</value>
<code><![CDATA[List<int> list;
global::NatSet.NatSet natSet;
int[] ints = new int[0];
list = new List<int>((IEnumerable<int>)ints);
bool[] bs = new bool[100];
natSet = NatSetFactory.Create(bs, list, -1);
this.intersect(natSet);
]]></code>
<methodCode imports="System.Collections.Generic;Microsoft.VisualStudio.TestTools.UnitTesting;Microsoft.Pex.Framework.Generated"><![CDATA[[TestMethod]
[PexGeneratedBy(typeof(global::NatSet.NatSet))]
public void intersect20901()
{
    List<int> list;
    global::NatSet.NatSet natSet;
    int[] ints = new int[0];
    list = new List<int>((IEnumerable<int>)ints);
    bool[] bs = new bool[100];
    natSet = NatSetFactory.Create(bs, list, -1);
    this.intersect(natSet);
}
]]></methodCode>
<reference name="Microsoft.VisualStudio.QualityTools.UnitTestFramework"/>
<reference name="mscorlib" location="C:\Windows\Microsoft.NET\Framework\v4.0.30319\mscorlib.dll"/>
<reference name="Microsoft.Pex.Framework"/>
<reference name="NatSet" location="C:\Users\MehmetBerk\documents\visual studio 2010\Projects\NatSet\NatSet\bin\Debug\NatSet.dll"/>
<pathAssumption><![CDATA[List<int> s0 = new;
return rest_list == s0 && rest_list != (List<int>)null && sm_bs.Length == 100 && sm_bs != (bool[])null && other != (global::NatSet.NatSet)null && other == (global::NatSet.NatSet)s0;
]]></pathAssumption>
<pathCondition><![CDATA[return c != (int[])null && c.Length == 0 && 
                           max_i == -1 && sm_bs[0] == (sbyte)0 && sm_bs[1] == (sbyte)0 && sm_bs[2] == (sbyte)0 && sm_bs[3] == (sbyte)0 && sm_bs[4] == (sbyte)0 && sm_bs[5] == (sbyte)0 && sm_bs[6] == (sbyte)0 && 
                                                                                                                                                                                          sm_bs[7] == (sbyte)0 && sm_bs[8] == (sbyte)0 && sm_bs[9] == (sbyte)0 && sm_bs[10] == (sbyte)0 && sm_bs[11] == (sbyte)0 && sm_bs[12] == (sbyte)0 && sm_bs[13] == (sbyte)0 && sm_bs[14] == (sbyte)0 && 
                                                                                                                                                                                                                                                                                                                                                                      sm_bs[15] == (sbyte)0 && sm_bs[16] == (sbyte)0 && sm_bs[17] == (sbyte)0 && sm_bs[18] == (sbyte)0 && sm_bs[19] == (sbyte)0 && sm_bs[20] == (sbyte)0 && sm_bs[21] == (sbyte)0 && 
sm_bs[22] == (sbyte)0 && sm_bs[23] == (sbyte)0 && sm_bs[24] == (sbyte)0 && sm_bs[25] == (sbyte)0 && sm_bs[26] == (sbyte)0 && sm_bs[27] == (sbyte)0 && sm_bs[28] == (sbyte)0 && 
sm_bs[29] == (sbyte)0 && sm_bs[30] == (sbyte)0 && sm_bs[31] == (sbyte)0 && sm_bs[32] == (sbyte)0 && sm_bs[33] == (sbyte)0 && sm_bs[34] == (sbyte)0 && sm_bs[35] == (sbyte)0 && 
sm_bs[36] == (sbyte)0 && sm_bs[37] == (sbyte)0 && sm_bs[38] == (sbyte)0 && sm_bs[39] == (sbyte)0 && sm_bs[40] == (sbyte)0 && sm_bs[41] == (sbyte)0 && sm_bs[42] == (sbyte)0 && 
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              sm_bs[43] == (sbyte)0 && sm_bs[44] == (sbyte)0 && sm_bs[45] == (sbyte)0 && sm_bs[46] == (sbyte)0 && sm_bs[47] == (sbyte)0 && sm_bs[48] == (sbyte)0 && sm_bs[49] == (sbyte)0 && 
sm_bs[50] == (sbyte)0 && sm_bs[51] == (sbyte)0 && sm_bs[52] == (sbyte)0 && sm_bs[53] == (sbyte)0 && sm_bs[54] == (sbyte)0 && sm_bs[55] == (sbyte)0 && sm_bs[56] == (sbyte)0 && 
sm_bs[57] == (sbyte)0 && sm_bs[58] == (sbyte)0 && sm_bs[59] == (sbyte)0 && sm_bs[60] == (sbyte)0 && sm_bs[61] == (sbyte)0 && sm_bs[62] == (sbyte)0 && sm_bs[63] == (sbyte)0 && 
sm_bs[64] == (sbyte)0 && sm_bs[65] == (sbyte)0 && sm_bs[66] == (sbyte)0 && sm_bs[67] == (sbyte)0 && sm_bs[68] == (sbyte)0 && sm_bs[69] == (sbyte)0 && sm_bs[70] == (sbyte)0 && 
sm_bs[71] == (sbyte)0 && sm_bs[72] == (sbyte)0 && sm_bs[73] == (sbyte)0 && sm_bs[74] == (sbyte)0 && sm_bs[75] == (sbyte)0 && sm_bs[76] == (sbyte)0 && sm_bs[77] == (sbyte)0 && 
sm_bs[78] == (sbyte)0 && sm_bs[79] == (sbyte)0 && sm_bs[80] == (sbyte)0 && sm_bs[81] == (sbyte)0 && sm_bs[82] == (sbyte)0 && sm_bs[83] == (sbyte)0 && sm_bs[84] == (sbyte)0 && 
sm_bs[85] == (sbyte)0 && sm_bs[86] == (sbyte)0 && sm_bs[87] == (sbyte)0 && sm_bs[88] == (sbyte)0 && sm_bs[89] == (sbyte)0 && sm_bs[90] == (sbyte)0 && sm_bs[91] == (sbyte)0 && 
sm_bs[92] == (sbyte)0 && sm_bs[93] == (sbyte)0 && sm_bs[94] == (sbyte)0 && sm_bs[95] == (sbyte)0 && sm_bs[96] == (sbyte)0 && sm_bs[97] == (sbyte)0 && sm_bs[98] == (sbyte)0 && sm_bs[99] == (sbyte)0;
]]></pathCondition>
</generatedTest>
<test name="intersect" state="success" duration="0,01"/>
<test name="intersect" state="success" duration="0,01"/>
<test name="intersect" state="success" duration="0,01"/>
<test name="intersect" state="success" duration="0,01"/>
<test name="intersect" state="success" duration="0,07"/>
<test name="intersect" state="success" duration="0,01"/>
<test name="intersect" state="success" duration="0,03"/>
<test name="intersect" state="success" duration="0,02"/>
<test name="intersect" state="success" duration="0,03"/>
<test name="intersect" state="success" duration="0,00"/>
<test name="intersect" state="success" duration="0,01"/>
<test name="intersect" state="success" duration="0,05"/>
<generatedTest id="778c2992-70e8-4418-ac48-b86a333f3d8f" index="6" run="56" status="normaltermination" generated="true" new="true" assemblyName="NatSet" name="intersect18901"><declaringType assemblyName="NatSet" name="NatSet" token="ffffffff" namespace="NatSet"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="NatSet" name="NatSet" token="ffffffff" namespace="NatSet"/>
</type>
</parameter>
<rcov name="Block" dcov="0" dtot="0" acov="0" atot="0"/>
<rcov name="asserts" dcov="0" dtot="0" acov="10" atot="10"/>
<value name="other">new NatSet{sm={Length=100; false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, false},rest={},max=98}</value>
<code><![CDATA[List<int> list;
global::NatSet.NatSet natSet;
int[] ints = new int[0];
list = new List<int>((IEnumerable<int>)ints);
bool[] bs = new bool[100];
bs[98] = true;
natSet = NatSetFactory.Create(bs, list, 98);
this.intersect(natSet);
]]></code>
<methodCode imports="System.Collections.Generic;Microsoft.VisualStudio.TestTools.UnitTesting;Microsoft.Pex.Framework.Generated"><![CDATA[[TestMethod]
[PexGeneratedBy(typeof(global::NatSet.NatSet))]
public void intersect18901()
{
    List<int> list;
    global::NatSet.NatSet natSet;
    int[] ints = new int[0];
    list = new List<int>((IEnumerable<int>)ints);
    bool[] bs = new bool[100];
    bs[98] = true;
    natSet = NatSetFactory.Create(bs, list, 98);
    this.intersect(natSet);
}
]]></methodCode>
<reference name="Microsoft.VisualStudio.QualityTools.UnitTestFramework"/>
<reference name="mscorlib" location="C:\Windows\Microsoft.NET\Framework\v4.0.30319\mscorlib.dll"/>
<reference name="Microsoft.Pex.Framework"/>
<reference name="NatSet" location="C:\Users\MehmetBerk\documents\visual studio 2010\Projects\NatSet\NatSet\bin\Debug\NatSet.dll"/>
<pathAssumption><![CDATA[List<int> s0 = new;
return rest_list == s0 && rest_list != (List<int>)null && sm_bs.Length == 100 && sm_bs != (bool[])null && other != (global::NatSet.NatSet)null && other == (global::NatSet.NatSet)s0;
]]></pathAssumption>
<pathCondition><![CDATA[return c != (int[])null && sm_bs[98] != (sbyte)0 && 
                           c.Length == 0 && max_i == 98 && sm_bs[0] == (sbyte)0 && sm_bs[1] == (sbyte)0 && sm_bs[2] == (sbyte)0 && sm_bs[3] == (sbyte)0 && sm_bs[4] == (sbyte)0 && sm_bs[5] == (sbyte)0 && 
                                                                                                                                                                                   sm_bs[6] == (sbyte)0 && sm_bs[7] == (sbyte)0 && sm_bs[8] == (sbyte)0 && sm_bs[9] == (sbyte)0 && sm_bs[10] == (sbyte)0 && sm_bs[11] == (sbyte)0 && sm_bs[12] == (sbyte)0 && sm_bs[13] == (sbyte)0 && 
                                                                                                                                                                                                                                                                                                                                                              sm_bs[14] == (sbyte)0 && sm_bs[15] == (sbyte)0 && sm_bs[16] == (sbyte)0 && sm_bs[17] == (sbyte)0 && sm_bs[18] == (sbyte)0 && sm_bs[19] == (sbyte)0 && sm_bs[20] == (sbyte)0 && 
sm_bs[21] == (sbyte)0 && sm_bs[22] == (sbyte)0 && sm_bs[23] == (sbyte)0 && sm_bs[24] == (sbyte)0 && sm_bs[25] == (sbyte)0 && sm_bs[26] == (sbyte)0 && sm_bs[27] == (sbyte)0 && 
sm_bs[28] == (sbyte)0 && sm_bs[29] == (sbyte)0 && sm_bs[30] == (sbyte)0 && sm_bs[31] == (sbyte)0 && sm_bs[32] == (sbyte)0 && sm_bs[33] == (sbyte)0 && sm_bs[34] == (sbyte)0 && 
sm_bs[35] == (sbyte)0 && sm_bs[36] == (sbyte)0 && sm_bs[37] == (sbyte)0 && sm_bs[38] == (sbyte)0 && sm_bs[39] == (sbyte)0 && sm_bs[40] == (sbyte)0 && sm_bs[41] == (sbyte)0 && 
sm_bs[42] == (sbyte)0 && sm_bs[43] == (sbyte)0 && sm_bs[44] == (sbyte)0 && sm_bs[45] == (sbyte)0 && sm_bs[46] == (sbyte)0 && sm_bs[47] == (sbyte)0 && sm_bs[48] == (sbyte)0 && 
sm_bs[49] == (sbyte)0 && sm_bs[50] == (sbyte)0 && sm_bs[51] == (sbyte)0 && sm_bs[52] == (sbyte)0 && sm_bs[53] == (sbyte)0 && sm_bs[54] == (sbyte)0 && sm_bs[55] == (sbyte)0 && 
sm_bs[56] == (sbyte)0 && sm_bs[57] == (sbyte)0 && sm_bs[58] == (sbyte)0 && sm_bs[59] == (sbyte)0 && sm_bs[60] == (sbyte)0 && sm_bs[61] == (sbyte)0 && sm_bs[62] == (sbyte)0 && 
sm_bs[63] == (sbyte)0 && sm_bs[64] == (sbyte)0 && sm_bs[65] == (sbyte)0 && sm_bs[66] == (sbyte)0 && sm_bs[67] == (sbyte)0 && sm_bs[68] == (sbyte)0 && sm_bs[69] == (sbyte)0 && 
sm_bs[70] == (sbyte)0 && sm_bs[71] == (sbyte)0 && sm_bs[72] == (sbyte)0 && sm_bs[73] == (sbyte)0 && sm_bs[74] == (sbyte)0 && sm_bs[75] == (sbyte)0 && sm_bs[76] == (sbyte)0 && 
sm_bs[77] == (sbyte)0 && sm_bs[78] == (sbyte)0 && sm_bs[79] == (sbyte)0 && sm_bs[80] == (sbyte)0 && sm_bs[81] == (sbyte)0 && sm_bs[82] == (sbyte)0 && sm_bs[83] == (sbyte)0 && 
sm_bs[84] == (sbyte)0 && sm_bs[85] == (sbyte)0 && sm_bs[86] == (sbyte)0 && sm_bs[87] == (sbyte)0 && sm_bs[88] == (sbyte)0 && sm_bs[89] == (sbyte)0 && sm_bs[90] == (sbyte)0 && 
sm_bs[91] == (sbyte)0 && sm_bs[92] == (sbyte)0 && sm_bs[93] == (sbyte)0 && sm_bs[94] == (sbyte)0 && sm_bs[95] == (sbyte)0 && sm_bs[96] == (sbyte)0 && sm_bs[97] == (sbyte)0 && sm_bs[99] == (sbyte)0;
]]></pathCondition>
</generatedTest>
<test name="intersect" state="success" duration="0,01"/>
<test name="intersect" state="success" duration="0,00"/>
<test name="intersect" state="success" duration="0,06"/>
<test name="intersect" state="success" duration="0,01"/>
<test name="intersect" state="success" duration="0,06"/>
<test name="intersect" state="success" duration="0,01"/>
<test name="intersect" state="success" duration="0,05"/>
<test name="intersect" state="success" duration="0,02"/>
<test name="intersect" state="success" duration="0,01"/>
<test name="intersect" state="success" duration="0,05"/>
<test name="intersect" state="success" duration="0,01"/>
<test name="intersect" state="success" duration="0,01"/>
<test name="intersect" state="success" duration="0,01"/>
<test name="intersect" state="success" duration="0,00"/>
<test name="intersect" state="success" duration="0,01"/>
<test name="intersect" state="success" duration="0,02"/>
<test name="intersect" state="success" duration="0,01"/>
<test name="intersect" state="success" duration="0,01"/>
<test name="intersect" state="success" duration="0,01"/>
<test name="intersect" state="success" duration="0,01"/>
<test name="intersect" state="success" duration="0,01"/>
<test name="intersect" state="success" duration="0,02"/>
<test name="intersect" state="success" duration="0,01"/>
<test name="intersect" state="success" duration="0,01"/>
<test name="intersect" state="success" duration="0,05"/>
<test name="intersect" state="success" duration="0,01"/>
<test name="intersect" state="success" duration="0,00"/>
<test name="intersect" state="success" duration="0,02"/>
<test name="intersect" state="success" duration="0,00"/>
<test name="intersect" state="success" duration="0,01"/>
<test name="intersect" state="success" duration="0,01"/>
<test name="intersect" state="success" duration="0,01"/>
<test name="intersect" state="success" duration="0,01"/>
<test name="intersect" state="success" duration="0,01"/>
<test name="intersect" state="success" duration="0,05"/>
<test name="intersect" state="success" duration="0,01"/>
<test name="intersect" state="success" duration="0,01"/>
<test name="intersect" state="success" duration="0,01"/>
<test name="intersect" state="success" duration="0,06"/>
<test name="intersect" state="success" duration="0,01"/>
<test name="intersect" state="success" duration="0,05"/>
<test name="intersect" state="success" duration="0,01"/>
<test name="intersect" state="success" duration="0,00"/>
<test name="intersect" state="success" duration="0,01"/>
<test name="intersect" state="success" duration="0,01"/>
<test name="intersect" state="success" duration="0,01"/>
<test name="intersect" state="success" duration="0,01"/>
<test name="intersect" state="success" duration="0,02"/>
<test name="intersect" state="success" duration="0,01"/>
<test name="intersect" state="success" duration="0,02"/>
<test name="intersect" state="success" duration="0,00"/>
<test name="intersect" state="success" duration="0,01"/>
<test name="intersect" state="success" duration="0,01"/>
<test name="intersect" state="success" duration="0,05"/>
<test name="intersect" state="success" duration="0,01"/>
<test name="intersect" state="success" duration="0,01"/>
<test name="intersect" state="success" duration="0,05"/>
<test name="intersect" state="success" duration="0,01"/>
<test name="intersect" state="success" duration="0,01"/>
<test name="intersect" state="success" duration="0,01"/>
<test name="intersect" state="success" duration="0,01"/>
<test name="intersect" state="success" duration="0,01"/>
<test name="intersect" state="success" duration="0,01"/>
<test name="intersect" state="success" duration="0,05"/>
<test name="intersect" state="success" duration="0,01"/>
<test name="intersect" state="success" duration="0,01"/>
<test name="intersect" state="success" duration="0,01"/>
<test name="intersect" state="success" duration="0,01"/>
<test name="intersect" state="success" duration="0,01"/>
<test name="intersect" state="success" duration="0,06"/>
<test name="intersect" state="success" duration="0,01"/>
<test name="intersect" state="success" duration="0,01"/>
<test name="intersect" state="success" duration="0,06"/>
<test name="intersect" state="success" duration="0,01"/>
<test name="intersect" state="success" duration="0,01"/>
<test name="intersect" state="success" duration="0,01"/>
<log level="message" time="2015-03-18 19:01:12Z" category="progress" message="  250 constraint systems (%52,80 solved, %47,20 proven unsatisfiable)"/>
<test name="intersect" state="success" duration="0,01"/>
<test name="intersect" state="success" duration="0,05"/>
<test name="intersect" state="success" duration="0,01"/>
<test name="intersect" state="success" duration="0,01"/>
<test name="intersect" state="success" duration="0,01"/>
<test name="intersect" state="success" duration="0,01"/>
<test name="intersect" state="success" duration="0,01"/>
<test name="intersect" state="success" duration="0,01"/>
<test name="intersect" state="success" duration="0,06"/>
<test name="intersect" state="success" duration="0,01"/>
<test name="intersect" state="success" duration="0,01"/>
<test name="intersect" state="success" duration="0,01"/>
<test name="intersect" state="success" duration="0,01"/>
<test name="intersect" state="success" duration="0,01"/>
<test name="intersect" state="success" duration="0,02"/>
<test name="intersect" state="success" duration="0,01"/>
<test name="intersect" state="success" duration="0,01"/>
<test name="intersect" state="success" duration="0,01"/>
<test name="intersect" state="success" duration="0,06"/>
<test name="intersect" state="success" duration="0,01"/>
<test name="intersect" state="success" duration="0,02"/>
<test name="intersect" state="success" duration="0,01"/>
<test name="intersect" state="success" duration="0,01"/>
<test name="intersect" state="success" duration="0,01"/>
<boundary kind="maxrunswithoutnewtests" value="100" message="maximum runs without new tests reached"><update kind="AddOrUpdateAttributeCodeUpdate" name="Set MaxRunsWithoutNewTests=200" update="true"><attributeCtor><definition assemblyName="Microsoft.Pex.Framework" name=".ctor" token="6000e51"><declaringType assemblyName="Microsoft.Pex.Framework" name="PexMethodAttribute" token="200027f" namespace="Microsoft.Pex.Framework"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="Microsoft.Pex.Framework" name="PexMethodAttribute" token="200027f" namespace="Microsoft.Pex.Framework"/>
</type>
</parameter>
</definition>
</attributeCtor>
<argument><value kind="I4Expression" value="200"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Int32" token="20000f6" namespace="System"/>
</type>
</value>
<property><definition assemblyName="Microsoft.Pex.Framework" name="MaxRunsWithoutNewTests" token="17000346"><declaringType assemblyName="Microsoft.Pex.Framework" name="PexSettingsAttributeBase" token="2000273" namespace="Microsoft.Pex.Framework.Settings"/>
<propertyType spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Int32" token="20000f6" namespace="System"/>
</propertyType>
</definition>
</property>
</argument>
<target><method><definition assemblyName="NatSet" name="intersect" token="6000007"><declaringType assemblyName="NatSet" name="NatSet" token="2000003" namespace="NatSet"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="NatSet" name="NatSet" token="2000003" namespace="NatSet"/>
</type>
</parameter>
<parameter name="other" position="1"><type spec="Class"><definition assemblyName="NatSet" name="NatSet" token="2000003" namespace="NatSet"/>
</type>
</parameter>
</definition>
</method>
</target>
</update>
</boundary>
<coverage domain="usercodeundertest" unit="block" covered="0" total="0" coveredRatio="0"/>
<sourceCoverage xml="cov\e414\cov.xml" html="cov\e414\cov.html"/>
<result name="intersect(NatSet)" state="success" duration="8.43347061934465"/>
<duration start="2015-03-18 19:01:05Z" end="2015-03-18 19:01:13Z" seconds="8.4351435"/>
<trajectory><image src="fix\natsetnatsetinte635623092738773112.trajectories.png" width="800" height="1600"/>
</trajectory>
</exploration>
<exploration shortName="intersectFixedTest()" fullName="NatSet.NatSet.intersectFixedTest()"><method><definition assemblyName="NatSet" name="intersectFixedTest" token="600000d"><declaringType assemblyName="NatSet" name="NatSet" token="2000003" namespace="NatSet"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="NatSet" name="NatSet" token="2000003" namespace="NatSet"/>
</type>
</parameter>
</definition>
</method>
<test name="intersectFixedTest" state="success" duration="0,11"/>
<generatedTest id="9cd5450d-761a-4987-9b44-c31fca485837" index="1" run="1" status="normaltermination" generated="true" new="true" assemblyName="NatSet" name="intersectFixedTest02"><declaringType assemblyName="NatSet" name="NatSet" token="ffffffff" namespace="NatSet"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="NatSet" name="NatSet" token="ffffffff" namespace="NatSet"/>
</type>
</parameter>
<rcov name="Block" dcov="0" dtot="0" acov="0" atot="0"/>
<rcov name="asserts" dcov="14" dtot="14" acov="14" atot="14"/>
<code><![CDATA[this.intersectFixedTest();
]]></code>
<methodCode imports="Microsoft.VisualStudio.TestTools.UnitTesting;Microsoft.Pex.Framework.Generated"><![CDATA[[TestMethod]
[PexGeneratedBy(typeof(global::NatSet.NatSet))]
public void intersectFixedTest02()
{
    this.intersectFixedTest();
}
]]></methodCode>
<reference name="Microsoft.VisualStudio.QualityTools.UnitTestFramework"/>
<reference name="mscorlib" location="C:\Windows\Microsoft.NET\Framework\v4.0.30319\mscorlib.dll"/>
<reference name="Microsoft.Pex.Framework"/>
<reference name="NatSet" location="C:\Users\MehmetBerk\documents\visual studio 2010\Projects\NatSet\NatSet\bin\Debug\NatSet.dll"/>
</generatedTest>
<coverage domain="usercodeundertest" unit="block" covered="0" total="0" coveredRatio="0"/>
<sourceCoverage xml="cov\e457\cov.xml" html="cov\e457\cov.html"/>
<result name="intersectFixedTest()" state="success" duration="0,18"/>
<duration start="2015-03-18 19:01:13Z" end="2015-03-18 19:01:14Z" seconds="0,19"/>
</exploration>
<exploration shortName="remove(Int32)" fullName="NatSet.NatSet.remove(Int32)"><method><definition assemblyName="NatSet" name="remove" token="6000005"><declaringType assemblyName="NatSet" name="NatSet" token="2000003" namespace="NatSet"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="NatSet" name="NatSet" token="2000003" namespace="NatSet"/>
</type>
</parameter>
<parameter name="k" position="1"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Int32" token="20000f6" namespace="System"/>
</type>
</parameter>
</definition>
</method>
<test name="remove" state="success" duration="0,00"/>
<generatedTest id="08ace863-3648-40cc-a7cf-fe2d1b2d8a6e" index="1" run="1" exceptionState="expected" status="expectedexception" generated="true" new="true" assemblyName="NatSet" name="removeThrowsElementNotFoundException40"><declaringType assemblyName="NatSet" name="NatSet" token="ffffffff" namespace="NatSet"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="NatSet" name="NatSet" token="ffffffff" namespace="NatSet"/>
</type>
</parameter>
<rcov name="Block" dcov="0" dtot="0" acov="0" atot="0"/>
<rcov name="asserts" dcov="0" dtot="2" acov="0" atot="2"/>
<value name="k">0</value>
<code><![CDATA[this.remove(0);
]]></code>
<methodCode imports="Microsoft.VisualStudio.TestTools.UnitTesting;Microsoft.Pex.Framework.Generated"><![CDATA[[TestMethod]
[PexGeneratedBy(typeof(global::NatSet.NatSet))]
[ExpectedException(typeof(global::NatSet.NatSet.ElementNotFoundException))]
public void removeThrowsElementNotFoundException40()
{
    this.remove(0);
}
]]></methodCode>
<reference name="Microsoft.VisualStudio.QualityTools.UnitTestFramework"/>
<reference name="mscorlib" location="C:\Windows\Microsoft.NET\Framework\v4.0.30319\mscorlib.dll"/>
<reference name="Microsoft.Pex.Framework"/>
<reference name="NatSet" location="C:\Users\MehmetBerk\documents\visual studio 2010\Projects\NatSet\NatSet\bin\Debug\NatSet.dll"/>
<exceptionChain><exception typeDisplayName="ElementNotFoundException" source="NatSet"><message><![CDATA[Uygulamada hata.]]></message>
<type spec="Class"><definition assemblyName="NatSet" name="ElementNotFoundException" token="2000007"><declaringType assemblyName="NatSet" name="NatSet" token="2000003" namespace="NatSet"/>
</definition>
</type>
<stackTrace><frame value="  at NatSet.remove(Int32) in C:\Users\MehmetBerk\documents\visual studio 2010\Projects\NatSet\NatSet\NatSet.cs(84)" method="NatSet.remove(Int32)" offset="128" file="C:\Users\MehmetBerk\documents\visual studio 2010\Projects\NatSet\NatSet\NatSet.cs" line="84"><method assemblyName="NatSet" name="remove" token="6000005"><declaringType assemblyName="NatSet" name="NatSet" token="2000003" namespace="NatSet"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="NatSet" name="NatSet" token="2000003" namespace="NatSet"/>
</type>
</parameter>
<parameter name="k" position="1"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Int32" token="20000f6" namespace="System"/>
</type>
</parameter>
</method>
<beforeSource><![CDATA[
            if (k < 100)
            {]]></beforeSource>
<source><![CDATA[                if (!sm[k]) throw new ElementNotFoundException();]]></source>
<afterSource><![CDATA[
                sm[k] = false;
            }]]></afterSource>
</frame>
</stackTrace>
</exception>
</exceptionChain>
<pathCondition><![CDATA[return -1 < k && k < 100 && (uint)k < 100u;
]]></pathCondition>
</generatedTest>
<test name="remove" state="success" duration="0,00"/>
<generatedTest id="bffe857d-92eb-4f00-adc8-e362fa9a34af" index="2" run="2" exceptionState="expected" status="expectedexception" generated="true" new="true" assemblyName="NatSet" name="removeThrowsContractException792"><declaringType assemblyName="NatSet" name="NatSet" token="ffffffff" namespace="NatSet"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="NatSet" name="NatSet" token="ffffffff" namespace="NatSet"/>
</type>
</parameter>
<rcov name="Block" dcov="0" dtot="0" acov="0" atot="0"/>
<rcov name="asserts" dcov="0" dtot="0" acov="0" atot="2"/>
<value name="k">int.MinValue</value>
<code><![CDATA[try
{
  this.remove(int.MinValue);
  throw 
    new AssertFailedException("expected an exception of type ContractException");
}
catch(Exception ex)
{
  if (!PexContract.IsContractException(ex))
    throw ex;
}
]]></code>
<methodCode imports="Microsoft.VisualStudio.TestTools.UnitTesting;System;Microsoft.Pex.Framework.Generated;Microsoft.Pex.Engine.Exceptions"><![CDATA[[TestMethod]
[PexGeneratedBy(typeof(global::NatSet.NatSet))]
[PexRaisedContractException(PexExceptionState.Expected)]
public void removeThrowsContractException792()
{
    try
    {
      this.remove(int.MinValue);
      throw 
        new AssertFailedException("expected an exception of type ContractException");
    }
    catch(Exception ex)
    {
      if (!PexContract.IsContractException(ex))
        throw ex;
    }
}
]]></methodCode>
<reference name="Microsoft.VisualStudio.QualityTools.UnitTestFramework"/>
<reference name="mscorlib" location="C:\Windows\Microsoft.NET\Framework\v4.0.30319\mscorlib.dll"/>
<reference name="Microsoft.Pex.Framework"/>
<reference name="NatSet" location="C:\Users\MehmetBerk\documents\visual studio 2010\Projects\NatSet\NatSet\bin\Debug\NatSet.dll"/>
<exceptionChain><exception typeDisplayName="ContractException" source="NatSet"><message><![CDATA[Önkoşul başarısız oldu: k >= 0]]></message>
<type spec="Class"><definition assemblyName="NatSet" name="ContractException" token="2000010"><declaringType assemblyName="NatSet" name="__ContractsRuntime" token="2000004" namespace="System.Diagnostics.Contracts"/>
</definition>
</type>
<stackTrace><frame value="  at NatSet.remove(Int32) in C:\Users\MehmetBerk\documents\visual studio 2010\Projects\NatSet\NatSet\NatSet.cs(78)" method="NatSet.remove(Int32)" offset="0" file="C:\Users\MehmetBerk\documents\visual studio 2010\Projects\NatSet\NatSet\NatSet.cs" line="78"><method assemblyName="NatSet" name="remove" token="6000005"><declaringType assemblyName="NatSet" name="NatSet" token="2000003" namespace="NatSet"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="NatSet" name="NatSet" token="2000003" namespace="NatSet"/>
</type>
</parameter>
<parameter name="k" position="1"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Int32" token="20000f6" namespace="System"/>
</type>
</parameter>
</method>
<beforeSource><![CDATA[        [PexAllowedContractRequiresFailure]
        public void remove(int k)
        {]]></beforeSource>
<source><![CDATA[            Contract.Requires(k >= 0);]]></source>
<afterSource><![CDATA[            Contract.Ensures(k < 100 ? !sm[k] : !rest.Contains(k));
            Contract.Ensures(max == findMax());
]]></afterSource>
</frame>
</stackTrace>
</exception>
</exceptionChain>
<pathCondition><![CDATA[return k < 0;
]]></pathCondition>
</generatedTest>
<test name="remove" state="success" duration="0,00"/>
<generatedTest id="a16c8835-73cd-4c82-9e8b-83b6121c946d" index="3" run="3" exceptionState="expected" status="expectedexception" generated="true" new="true" assemblyName="NatSet" name="removeThrowsElementNotFoundException83"><declaringType assemblyName="NatSet" name="NatSet" token="ffffffff" namespace="NatSet"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="NatSet" name="NatSet" token="ffffffff" namespace="NatSet"/>
</type>
</parameter>
<rcov name="Block" dcov="0" dtot="0" acov="0" atot="0"/>
<rcov name="asserts" dcov="0" dtot="0" acov="0" atot="2"/>
<value name="k">100</value>
<code><![CDATA[this.remove(100);
]]></code>
<methodCode imports="Microsoft.VisualStudio.TestTools.UnitTesting;Microsoft.Pex.Framework.Generated"><![CDATA[[TestMethod]
[PexGeneratedBy(typeof(global::NatSet.NatSet))]
[ExpectedException(typeof(global::NatSet.NatSet.ElementNotFoundException))]
public void removeThrowsElementNotFoundException83()
{
    this.remove(100);
}
]]></methodCode>
<reference name="Microsoft.VisualStudio.QualityTools.UnitTestFramework"/>
<reference name="mscorlib" location="C:\Windows\Microsoft.NET\Framework\v4.0.30319\mscorlib.dll"/>
<reference name="Microsoft.Pex.Framework"/>
<reference name="NatSet" location="C:\Users\MehmetBerk\documents\visual studio 2010\Projects\NatSet\NatSet\bin\Debug\NatSet.dll"/>
<exceptionChain><exception typeDisplayName="ElementNotFoundException" source="NatSet"><message><![CDATA[Uygulamada hata.]]></message>
<type spec="Class"><definition assemblyName="NatSet" name="ElementNotFoundException" token="2000007"><declaringType assemblyName="NatSet" name="NatSet" token="2000003" namespace="NatSet"/>
</definition>
</type>
<stackTrace><frame value="  at NatSet.remove(Int32) in C:\Users\MehmetBerk\documents\visual studio 2010\Projects\NatSet\NatSet\NatSet.cs(90)" method="NatSet.remove(Int32)" offset="169" file="C:\Users\MehmetBerk\documents\visual studio 2010\Projects\NatSet\NatSet\NatSet.cs" line="90"><method assemblyName="NatSet" name="remove" token="6000005"><declaringType assemblyName="NatSet" name="NatSet" token="2000003" namespace="NatSet"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="NatSet" name="NatSet" token="2000003" namespace="NatSet"/>
</type>
</parameter>
<parameter name="k" position="1"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Int32" token="20000f6" namespace="System"/>
</type>
</parameter>
</method>
<beforeSource><![CDATA[            }
            else
            {]]></beforeSource>
<source><![CDATA[                if (!rest.Contains(k)) throw new ElementNotFoundException();]]></source>
<afterSource><![CDATA[
                rest.Remove(k);
            }]]></afterSource>
</frame>
</stackTrace>
</exception>
</exceptionChain>
<pathCondition><![CDATA[return 99 < k;
]]></pathCondition>
</generatedTest>
<coverage domain="usercodeundertest" unit="block" covered="0" total="0" coveredRatio="0"/>
<sourceCoverage xml="cov\e460\cov.xml" html="cov\e460\cov.html"/>
<result name="remove(Int32)" state="success" duration="0,09"/>
<duration start="2015-03-18 19:01:14Z" end="2015-03-18 19:01:14Z" seconds="0,09"/>
</exploration>
<exploration shortName="removeTest(Int32[])" fullName="NatSet.NatSet.removeTest(Int32[])"><method><definition assemblyName="NatSet" name="removeTest" token="600000b"><declaringType assemblyName="NatSet" name="NatSet" token="2000003" namespace="NatSet"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="NatSet" name="NatSet" token="2000003" namespace="NatSet"/>
</type>
</parameter>
<parameter name="values" position="1"><type spec="SzArray"><elementType spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Int32" token="20000f6" namespace="System"/>
</elementType>
</type>
</parameter>
</definition>
</method>
<test name="removeTest" state="success" duration="0,01"/>
<test name="removeTest" state="success" duration="0,00"/>
<test name="removeTest" state="success" duration="0,00"/>
<test name="removeTest" state="success" duration="0,00"/>
<test name="removeTest" state="success" duration="0,00"/>
<test name="removeTest" state="success" duration="0,00"/>
<test name="removeTest" state="success" duration="0,00"/>
<test name="removeTest" state="success" duration="0,02"/>
<test name="removeTest" state="success" duration="0,00"/>
<generatedTest id="2afedd7e-9ac6-41d1-95aa-8b1b995297a7" index="1" run="9" exceptionState="expected" status="expectedexception" generated="true" new="true" assemblyName="NatSet" name="removeTestThrowsContractException937"><declaringType assemblyName="NatSet" name="NatSet" token="ffffffff" namespace="NatSet"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="NatSet" name="NatSet" token="ffffffff" namespace="NatSet"/>
</type>
</parameter>
<rcov name="Block" dcov="0" dtot="0" acov="0" atot="0"/>
<rcov name="asserts" dcov="0" dtot="0" acov="9" atot="10"/>
<value name="values">{-2147483551, 1073741829}</value>
<code><![CDATA[try
{
  int[] ints = new int[2];
  ints[0] = -2147483551;
  ints[1] = 1073741829;
  this.removeTest(ints);
  throw 
    new AssertFailedException("expected an exception of type ContractException");
}
catch(Exception ex)
{
  if (!PexContract.IsContractException(ex))
    throw ex;
}
]]></code>
<methodCode imports="Microsoft.VisualStudio.TestTools.UnitTesting;System;Microsoft.Pex.Framework.Generated;Microsoft.Pex.Engine.Exceptions"><![CDATA[[TestMethod]
[PexGeneratedBy(typeof(global::NatSet.NatSet))]
[PexRaisedContractException(PexExceptionState.Expected)]
public void removeTestThrowsContractException937()
{
    try
    {
      int[] ints = new int[2];
      ints[0] = -2147483551;
      ints[1] = 1073741829;
      this.removeTest(ints);
      throw 
        new AssertFailedException("expected an exception of type ContractException");
    }
    catch(Exception ex)
    {
      if (!PexContract.IsContractException(ex))
        throw ex;
    }
}
]]></methodCode>
<reference name="Microsoft.VisualStudio.QualityTools.UnitTestFramework"/>
<reference name="mscorlib" location="C:\Windows\Microsoft.NET\Framework\v4.0.30319\mscorlib.dll"/>
<reference name="Microsoft.Pex.Framework"/>
<reference name="NatSet" location="C:\Users\MehmetBerk\documents\visual studio 2010\Projects\NatSet\NatSet\bin\Debug\NatSet.dll"/>
<exceptionChain><exception typeDisplayName="ContractException" source="NatSet"><message><![CDATA[Önkoşul başarısız oldu: k >= 0]]></message>
<type spec="Class"><definition assemblyName="NatSet" name="ContractException" token="2000010"><declaringType assemblyName="NatSet" name="__ContractsRuntime" token="2000004" namespace="System.Diagnostics.Contracts"/>
</definition>
</type>
<stackTrace><frame value="  at NatSet.insert(Int32) in C:\Users\MehmetBerk\documents\visual studio 2010\Projects\NatSet\NatSet\NatSet.cs(53)" method="NatSet.insert(Int32)" offset="0" file="C:\Users\MehmetBerk\documents\visual studio 2010\Projects\NatSet\NatSet\NatSet.cs" line="53"><method assemblyName="NatSet" name="insert" token="6000004"><declaringType assemblyName="NatSet" name="NatSet" token="2000003" namespace="NatSet"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="NatSet" name="NatSet" token="2000003" namespace="NatSet"/>
</type>
</parameter>
<parameter name="k" position="1"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Int32" token="20000f6" namespace="System"/>
</type>
</parameter>
</method>
<beforeSource><![CDATA[        [PexAllowedContractRequiresFailure]
        public void insert(int k)
        {]]></beforeSource>
<source><![CDATA[            Contract.Requires(k >= 0);]]></source>
<afterSource><![CDATA[            Contract.Ensures(k<100 ? sm[k] : rest.Contains(k));
            Contract.Ensures(max == findMax());
]]></afterSource>
</frame>
<frame value="  at NatSet.removeTest(Int32[]) in C:\Users\MehmetBerk\documents\visual studio 2010\Projects\NatSet\NatSet\NatSet.cs(202)" method="NatSet.removeTest(Int32[])" offset="123" file="C:\Users\MehmetBerk\documents\visual studio 2010\Projects\NatSet\NatSet\NatSet.cs" line="202"><method assemblyName="NatSet" name="removeTest" token="600000b"><declaringType assemblyName="NatSet" name="NatSet" token="2000003" namespace="NatSet"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="NatSet" name="NatSet" token="2000003" namespace="NatSet"/>
</type>
</parameter>
<parameter name="values" position="1"><type spec="SzArray"><elementType spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Int32" token="20000f6" namespace="System"/>
</elementType>
</type>
</parameter>
</method>
<beforeSource><![CDATA[            PexAssume.TrueForAny(0, values.Length, i => (values[i] < 100));

            for (int i = 0; i < values.Length; i++)]]></beforeSource>
<source><![CDATA[                insert(values[i]);]]></source>
<afterSource><![CDATA[
            for (int i = 0; i < values.Length; i++)
                remove(values[i]);]]></afterSource>
</frame>
</stackTrace>
</exception>
</exceptionChain>
<pathCondition><![CDATA[return values != (int[])null && 100 < values[1] && values[0] < 0 && values.Length == 2;
]]></pathCondition>
</generatedTest>
<test name="removeTest" state="success" duration="0,00"/>
<test name="removeTest" state="success" duration="0,01"/>
<test name="removeTest" state="success" duration="0,01"/>
<test name="removeTest" state="success" duration="0,01"/>
<test name="removeTest" state="success" duration="0,01"/>
<test name="removeTest" state="success" duration="0,01"/>
<test name="removeTest" state="success" duration="0,01"/>
<test name="removeTest" state="success" duration="0,03"/>
<generatedTest id="009687cb-aaa5-427f-b94c-12d9179ef04a" index="2" run="17" status="normaltermination" generated="true" new="true" assemblyName="NatSet" name="removeTest954"><declaringType assemblyName="NatSet" name="NatSet" token="ffffffff" namespace="NatSet"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="NatSet" name="NatSet" token="ffffffff" namespace="NatSet"/>
</type>
</parameter>
<rcov name="Block" dcov="0" dtot="0" acov="0" atot="0"/>
<rcov name="asserts" dcov="3" dtot="2" acov="12" atot="12"/>
<value name="values">{0, 103}</value>
<code><![CDATA[int[] ints = new int[2];
ints[1] = 103;
this.removeTest(ints);
]]></code>
<methodCode imports="Microsoft.VisualStudio.TestTools.UnitTesting;Microsoft.Pex.Framework.Generated"><![CDATA[[TestMethod]
[PexGeneratedBy(typeof(global::NatSet.NatSet))]
public void removeTest954()
{
    int[] ints = new int[2];
    ints[1] = 103;
    this.removeTest(ints);
}
]]></methodCode>
<reference name="Microsoft.VisualStudio.QualityTools.UnitTestFramework"/>
<reference name="mscorlib" location="C:\Windows\Microsoft.NET\Framework\v4.0.30319\mscorlib.dll"/>
<reference name="Microsoft.Pex.Framework"/>
<reference name="NatSet" location="C:\Users\MehmetBerk\documents\visual studio 2010\Projects\NatSet\NatSet\bin\Debug\NatSet.dll"/>
<pathCondition><![CDATA[return values != (int[])null && -1 < values[0] && values[0] < 100 && (uint)(values[0]) < 100u && values.Length == 2 && values[1] == 103;
]]></pathCondition>
</generatedTest>
<test name="removeTest" state="success" duration="0,03"/>
<test name="removeTest" state="success" duration="0,03"/>
<test name="removeTest" state="success" duration="0,03"/>
<test name="removeTest" state="success" duration="0,02"/>
<test name="removeTest" state="success" duration="0,03"/>
<test name="removeTest" state="success" duration="0,02"/>
<test name="removeTest" state="success" duration="0,03"/>
<test name="removeTest" state="success" duration="0,03"/>
<test name="removeTest" state="success" duration="0,03"/>
<test name="removeTest" state="success" duration="0,02"/>
<test name="removeTest" state="success" duration="0,03"/>
<test name="removeTest" state="success" duration="0,03"/>
<test name="removeTest" state="success" duration="0,03"/>
<test name="removeTest" state="success" duration="0,03"/>
<test name="removeTest" state="success" duration="0,03"/>
<test name="removeTest" state="success" duration="0,03"/>
<test name="removeTest" state="success" duration="0,03"/>
<test name="removeTest" state="success" duration="0,03"/>
<test name="removeTest" state="success" duration="0,03"/>
<test name="removeTest" state="success" duration="0,03"/>
<test name="removeTest" state="success" duration="0,03"/>
<test name="removeTest" state="success" duration="0,02"/>
<test name="removeTest" state="success" duration="0,03"/>
<test name="removeTest" state="success" duration="0,02"/>
<test name="removeTest" state="success" duration="0,02"/>
<generatedTest id="5339ea27-ff38-46fb-8369-45d3847ffbb2" index="3" run="42" status="normaltermination" generated="true" new="true" assemblyName="NatSet" name="removeTest436"><declaringType assemblyName="NatSet" name="NatSet" token="ffffffff" namespace="NatSet"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="NatSet" name="NatSet" token="ffffffff" namespace="NatSet"/>
</type>
</parameter>
<rcov name="Block" dcov="0" dtot="0" acov="0" atot="0"/>
<rcov name="asserts" dcov="0" dtot="0" acov="12" atot="12"/>
<value name="values">{38, 101}</value>
<code><![CDATA[int[] ints = new int[2];
ints[0] = 38;
ints[1] = 101;
this.removeTest(ints);
]]></code>
<methodCode imports="Microsoft.VisualStudio.TestTools.UnitTesting;Microsoft.Pex.Framework.Generated"><![CDATA[[TestMethod]
[PexGeneratedBy(typeof(global::NatSet.NatSet))]
public void removeTest436()
{
    int[] ints = new int[2];
    ints[0] = 38;
    ints[1] = 101;
    this.removeTest(ints);
}
]]></methodCode>
<reference name="Microsoft.VisualStudio.QualityTools.UnitTestFramework"/>
<reference name="mscorlib" location="C:\Windows\Microsoft.NET\Framework\v4.0.30319\mscorlib.dll"/>
<reference name="Microsoft.Pex.Framework"/>
<reference name="NatSet" location="C:\Users\MehmetBerk\documents\visual studio 2010\Projects\NatSet\NatSet\bin\Debug\NatSet.dll"/>
<pathCondition><![CDATA[return values != (int[])null && -1 < values[0] && values[0] < 100 && (uint)(values[0]) < 100u && values.Length == 2 && values[1] == 101;
]]></pathCondition>
</generatedTest>
<test name="removeTest" state="success" duration="0,02"/>
<generatedTest id="d8a8af2e-3090-48f6-984f-eb98b28b87d7" index="4" run="43" status="normaltermination" generated="true" new="true" assemblyName="NatSet" name="removeTest52"><declaringType assemblyName="NatSet" name="NatSet" token="ffffffff" namespace="NatSet"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="NatSet" name="NatSet" token="ffffffff" namespace="NatSet"/>
</type>
</parameter>
<rcov name="Block" dcov="0" dtot="0" acov="0" atot="0"/>
<rcov name="asserts" dcov="0" dtot="0" acov="12" atot="12"/>
<value name="values">{38, 102}</value>
<code><![CDATA[int[] ints = new int[2];
ints[0] = 38;
ints[1] = 102;
this.removeTest(ints);
]]></code>
<methodCode imports="Microsoft.VisualStudio.TestTools.UnitTesting;Microsoft.Pex.Framework.Generated"><![CDATA[[TestMethod]
[PexGeneratedBy(typeof(global::NatSet.NatSet))]
public void removeTest52()
{
    int[] ints = new int[2];
    ints[0] = 38;
    ints[1] = 102;
    this.removeTest(ints);
}
]]></methodCode>
<reference name="Microsoft.VisualStudio.QualityTools.UnitTestFramework"/>
<reference name="mscorlib" location="C:\Windows\Microsoft.NET\Framework\v4.0.30319\mscorlib.dll"/>
<reference name="Microsoft.Pex.Framework"/>
<reference name="NatSet" location="C:\Users\MehmetBerk\documents\visual studio 2010\Projects\NatSet\NatSet\bin\Debug\NatSet.dll"/>
<pathCondition><![CDATA[return values != (int[])null && -1 < values[0] && values[0] < 100 && (uint)(values[0]) < 100u && values.Length == 2 && values[1] == 102;
]]></pathCondition>
</generatedTest>
<test name="removeTest" state="success" duration="0,02"/>
<generatedTest id="118b95ca-0a41-4bef-a202-cfc36777987f" index="5" run="44" status="normaltermination" generated="true" new="true" assemblyName="NatSet" name="removeTest985"><declaringType assemblyName="NatSet" name="NatSet" token="ffffffff" namespace="NatSet"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="NatSet" name="NatSet" token="ffffffff" namespace="NatSet"/>
</type>
</parameter>
<rcov name="Block" dcov="0" dtot="0" acov="0" atot="0"/>
<rcov name="asserts" dcov="0" dtot="0" acov="12" atot="12"/>
<value name="values">{0, 160}</value>
<code><![CDATA[int[] ints = new int[2];
ints[1] = 160;
this.removeTest(ints);
]]></code>
<methodCode imports="Microsoft.VisualStudio.TestTools.UnitTesting;Microsoft.Pex.Framework.Generated"><![CDATA[[TestMethod]
[PexGeneratedBy(typeof(global::NatSet.NatSet))]
public void removeTest985()
{
    int[] ints = new int[2];
    ints[1] = 160;
    this.removeTest(ints);
}
]]></methodCode>
<reference name="Microsoft.VisualStudio.QualityTools.UnitTestFramework"/>
<reference name="mscorlib" location="C:\Windows\Microsoft.NET\Framework\v4.0.30319\mscorlib.dll"/>
<reference name="Microsoft.Pex.Framework"/>
<reference name="NatSet" location="C:\Users\MehmetBerk\documents\visual studio 2010\Projects\NatSet\NatSet\bin\Debug\NatSet.dll"/>
<pathCondition><![CDATA[return values != (int[])null && -1 < values[0] && values[0] < 100 && (uint)(values[0]) < 100u && values.Length == 2 && values[1] == 160;
]]></pathCondition>
</generatedTest>
<log level="message" time="2015-03-18 19:01:15Z" category="progress" message="   44 runs (%97,73 unique paths)"/>
<test name="removeTest" state="success" duration="0,01"/>
<test name="removeTest" state="success" duration="0,02"/>
<test name="removeTest" state="success" duration="0,02"/>
<test name="removeTest" state="success" duration="0,02"/>
<test name="removeTest" state="success" duration="0,02"/>
<test name="removeTest" state="success" duration="0,02"/>
<test name="removeTest" state="success" duration="0,02"/>
<test name="removeTest" state="success" duration="0,02"/>
<test name="removeTest" state="success" duration="0,02"/>
<test name="removeTest" state="success" duration="0,02"/>
<test name="removeTest" state="success" duration="0,02"/>
<test name="removeTest" state="success" duration="0,02"/>
<test name="removeTest" state="success" duration="0,02"/>
<test name="removeTest" state="success" duration="0,02"/>
<test name="removeTest" state="success" duration="0,02"/>
<test name="removeTest" state="success" duration="0,02"/>
<test name="removeTest" state="success" duration="0,02"/>
<test name="removeTest" state="success" duration="0,02"/>
<test name="removeTest" state="success" duration="0,02"/>
<test name="removeTest" state="success" duration="0,02"/>
<test name="removeTest" state="success" duration="0,02"/>
<test name="removeTest" state="success" duration="0,02"/>
<test name="removeTest" state="success" duration="0,02"/>
<test name="removeTest" state="success" duration="0,02"/>
<test name="removeTest" state="success" duration="0,02"/>
<test name="removeTest" state="success" duration="0,02"/>
<test name="removeTest" state="success" duration="0,02"/>
<test name="removeTest" state="success" duration="0,02"/>
<test name="removeTest" state="success" duration="0,02"/>
<test name="removeTest" state="success" duration="0,02"/>
<test name="removeTest" state="success" duration="0,02"/>
<test name="removeTest" state="success" duration="0,02"/>
<test name="removeTest" state="success" duration="0,02"/>
<test name="removeTest" state="success" duration="0,02"/>
<test name="removeTest" state="success" duration="0,02"/>
<test name="removeTest" state="success" duration="0,02"/>
<test name="removeTest" state="success" duration="0,02"/>
<test name="removeTest" state="success" duration="0,02"/>
<test name="removeTest" state="success" duration="0,02"/>
<test name="removeTest" state="success" duration="0,02"/>
<test name="removeTest" state="success" duration="0,02"/>
<test name="removeTest" state="success" duration="0,02"/>
<test name="removeTest" state="success" duration="0,02"/>
<test name="removeTest" state="success" duration="0,02"/>
<test name="removeTest" state="success" duration="0,02"/>
<test name="removeTest" state="success" duration="0,02"/>
<test name="removeTest" state="success" duration="0,02"/>
<test name="removeTest" state="success" duration="0,02"/>
<test name="removeTest" state="success" duration="0,02"/>
<test name="removeTest" state="success" duration="0,02"/>
<test name="removeTest" state="success" duration="0,02"/>
<test name="removeTest" state="success" duration="0,02"/>
<test name="removeTest" state="success" duration="0,02"/>
<test name="removeTest" state="success" duration="0,02"/>
<test name="removeTest" state="success" duration="0,02"/>
<test name="removeTest" state="success" duration="0,02"/>
<test name="removeTest" state="success" duration="0,02"/>
<test name="removeTest" state="success" duration="0,02"/>
<test name="removeTest" state="success" duration="0,02"/>
<test name="removeTest" state="success" duration="0,02"/>
<test name="removeTest" state="success" duration="0,02"/>
<test name="removeTest" state="success" duration="0,02"/>
<test name="removeTest" state="success" duration="0,02"/>
<test name="removeTest" state="success" duration="0,03"/>
<test name="removeTest" state="success" duration="0,02"/>
<test name="removeTest" state="success" duration="0,02"/>
<test name="removeTest" state="success" duration="0,02"/>
<test name="removeTest" state="success" duration="0,02"/>
<test name="removeTest" state="success" duration="0,02"/>
<test name="removeTest" state="success" duration="0,02"/>
<test name="removeTest" state="success" duration="0,02"/>
<test name="removeTest" state="success" duration="0,02"/>
<test name="removeTest" state="success" duration="0,02"/>
<test name="removeTest" state="success" duration="0,02"/>
<test name="removeTest" state="success" duration="0,02"/>
<test name="removeTest" state="success" duration="0,02"/>
<test name="removeTest" state="success" duration="0,02"/>
<test name="removeTest" state="success" duration="0,02"/>
<test name="removeTest" state="success" duration="0,02"/>
<test name="removeTest" state="success" duration="0,02"/>
<test name="removeTest" state="success" duration="0,02"/>
<test name="removeTest" state="success" duration="0,02"/>
<test name="removeTest" state="success" duration="0,02"/>
<test name="removeTest" state="success" duration="0,02"/>
<test name="removeTest" state="success" duration="0,02"/>
<test name="removeTest" state="success" duration="0,02"/>
<test name="removeTest" state="success" duration="0,02"/>
<test name="removeTest" state="success" duration="0,02"/>
<test name="removeTest" state="success" duration="0,02"/>
<test name="removeTest" state="success" duration="0,02"/>
<test name="removeTest" state="success" duration="0,02"/>
<test name="removeTest" state="success" duration="0,02"/>
<test name="removeTest" state="success" duration="0,02"/>
<test name="removeTest" state="success" duration="0,02"/>
<test name="removeTest" state="success" duration="0,02"/>
<test name="removeTest" state="success" duration="0,02"/>
<test name="removeTest" state="success" duration="0,02"/>
<test name="removeTest" state="success" duration="0,02"/>
<test name="removeTest" state="success" duration="0,02"/>
<test name="removeTest" state="success" duration="0,02"/>
<boundary kind="maxrunswithoutnewtests" value="100" message="maximum runs without new tests reached"><update kind="AddOrUpdateAttributeCodeUpdate" name="Set MaxRunsWithoutNewTests=200" update="true"><attributeCtor><definition assemblyName="Microsoft.Pex.Framework" name=".ctor" token="6000e51"><declaringType assemblyName="Microsoft.Pex.Framework" name="PexMethodAttribute" token="200027f" namespace="Microsoft.Pex.Framework"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="Microsoft.Pex.Framework" name="PexMethodAttribute" token="200027f" namespace="Microsoft.Pex.Framework"/>
</type>
</parameter>
</definition>
</attributeCtor>
<argument><value kind="I4Expression" value="200"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Int32" token="20000f6" namespace="System"/>
</type>
</value>
<property><definition assemblyName="Microsoft.Pex.Framework" name="MaxRunsWithoutNewTests" token="17000346"><declaringType assemblyName="Microsoft.Pex.Framework" name="PexSettingsAttributeBase" token="2000273" namespace="Microsoft.Pex.Framework.Settings"/>
<propertyType spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Int32" token="20000f6" namespace="System"/>
</propertyType>
</definition>
</property>
</argument>
<target><method><definition assemblyName="NatSet" name="removeTest" token="600000b"><declaringType assemblyName="NatSet" name="NatSet" token="2000003" namespace="NatSet"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="NatSet" name="NatSet" token="2000003" namespace="NatSet"/>
</type>
</parameter>
<parameter name="values" position="1"><type spec="SzArray"><elementType spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Int32" token="20000f6" namespace="System"/>
</elementType>
</type>
</parameter>
</definition>
</method>
</target>
</update>
</boundary>
<coverage domain="usercodeundertest" unit="block" covered="0" total="0" coveredRatio="0"/>
<log level="message" time="2015-03-18 19:01:18Z" category="symbols" message="could not merge source of NatSet.NatSet.removeTest in C:\Users\MehmetBerk\documents\visual studio 2010\Projects\NatSet\NatSet\NatSet.cs:[6836, 6899)"/>
<log level="message" time="2015-03-18 19:01:18Z" category="symbols" message="could not merge source of NatSet.NatSet.removeTest in C:\Users\MehmetBerk\documents\visual studio 2010\Projects\NatSet\NatSet\NatSet.cs:[6913, 6976)"/>
<sourceCoverage xml="cov\e469\cov.xml" html="cov\e469\cov.html"/>
<result name="removeTest(Int32[])" state="success" duration="4.63076281275734"/>
<duration start="2015-03-18 19:01:14Z" end="2015-03-18 19:01:18Z" seconds="4.6316056"/>
<trajectory><image src="fix\natsetnatsetremo635623092787851008.trajectories.png" width="800" height="1600"/>
</trajectory>
</exploration>
<exploration shortName="union(NatSet)" fullName="NatSet.NatSet.union(NatSet)"><method><definition assemblyName="NatSet" name="union" token="6000006"><declaringType assemblyName="NatSet" name="NatSet" token="2000003" namespace="NatSet"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="NatSet" name="NatSet" token="2000003" namespace="NatSet"/>
</type>
</parameter>
<parameter name="other" position="1"><type spec="Class"><definition assemblyName="NatSet" name="NatSet" token="2000003" namespace="NatSet"/>
</type>
</parameter>
</definition>
</method>
<test name="union" state="success" duration="0,02"/>
<generatedTest id="28c61a61-cc57-4e8d-87c7-a98f5156e887" index="1" run="1" exceptionState="expected" status="expectedexception" generated="true" new="true" assemblyName="NatSet" name="unionThrowsContractException987"><declaringType assemblyName="NatSet" name="NatSet" token="ffffffff" namespace="NatSet"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="NatSet" name="NatSet" token="ffffffff" namespace="NatSet"/>
</type>
</parameter>
<rcov name="Block" dcov="0" dtot="0" acov="0" atot="0"/>
<rcov name="asserts" dcov="0" dtot="3" acov="0" atot="3"/>
<value name="other">null</value>
<code><![CDATA[try
{
  this.union((global::NatSet.NatSet)null);
  throw 
    new AssertFailedException("expected an exception of type ContractException");
}
catch(Exception ex)
{
  if (!PexContract.IsContractException(ex))
    throw ex;
}
]]></code>
<methodCode imports="Microsoft.VisualStudio.TestTools.UnitTesting;System;Microsoft.Pex.Framework.Generated;Microsoft.Pex.Engine.Exceptions"><![CDATA[[TestMethod]
[PexGeneratedBy(typeof(global::NatSet.NatSet))]
[PexRaisedContractException(PexExceptionState.Expected)]
public void unionThrowsContractException987()
{
    try
    {
      this.union((global::NatSet.NatSet)null);
      throw 
        new AssertFailedException("expected an exception of type ContractException");
    }
    catch(Exception ex)
    {
      if (!PexContract.IsContractException(ex))
        throw ex;
    }
}
]]></methodCode>
<reference name="Microsoft.VisualStudio.QualityTools.UnitTestFramework"/>
<reference name="mscorlib" location="C:\Windows\Microsoft.NET\Framework\v4.0.30319\mscorlib.dll"/>
<reference name="Microsoft.Pex.Framework"/>
<reference name="NatSet" location="C:\Users\MehmetBerk\documents\visual studio 2010\Projects\NatSet\NatSet\bin\Debug\NatSet.dll"/>
<exceptionChain><exception typeDisplayName="ContractException" source="NatSet"><message><![CDATA[Önkoşul başarısız oldu: other != null]]></message>
<type spec="Class"><definition assemblyName="NatSet" name="ContractException" token="2000010"><declaringType assemblyName="NatSet" name="__ContractsRuntime" token="2000004" namespace="System.Diagnostics.Contracts"/>
</definition>
</type>
<stackTrace><frame value="  at NatSet.union(NatSet) in C:\Users\MehmetBerk\documents\visual studio 2010\Projects\NatSet\NatSet\NatSet.cs(102)" method="NatSet.union(NatSet)" offset="30" file="C:\Users\MehmetBerk\documents\visual studio 2010\Projects\NatSet\NatSet\NatSet.cs" line="102"><method assemblyName="NatSet" name="union" token="6000006"><declaringType assemblyName="NatSet" name="NatSet" token="2000003" namespace="NatSet"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="NatSet" name="NatSet" token="2000003" namespace="NatSet"/>
</type>
</parameter>
<parameter name="other" position="1"><type spec="Class"><definition assemblyName="NatSet" name="NatSet" token="2000003" namespace="NatSet"/>
</type>
</parameter>
</method>
<beforeSource><![CDATA[        [PexAllowedContractRequiresFailure]
        public void union(NatSet other)
        {]]></beforeSource>
<source><![CDATA[            Contract.Requires(other != null);]]></source>
<afterSource><![CDATA[            Contract.Requires(other != this);
            Contract.Ensures(Contract.OldValue(other) == other);
            Contract.Ensures(Contract.ForAll(0, this.sm.Length, ]]></afterSource>
</frame>
</stackTrace>
</exception>
</exceptionChain>
<pathCondition><![CDATA[return other == (global::NatSet.NatSet)null;
]]></pathCondition>
</generatedTest>
<test name="union" state="success" duration="0,00"/>
<test name="union" state="success" duration="0,00"/>
<test name="union" state="success" duration="0,00"/>
<test name="union" state="success" duration="0,00"/>
<test name="union" state="success" duration="0,00"/>
<test name="union" state="success" duration="0,00"/>
<test name="union" state="success" duration="0,00"/>
<test name="union" state="success" duration="0,04"/>
<test name="union" state="success" duration="0,00"/>
<test name="union" state="success" duration="0,00"/>
<test name="union" state="success" duration="0,01"/>
<test name="union" state="success" duration="0,01"/>
<test name="union" state="success" duration="0,01"/>
<test name="union" state="success" duration="0,00"/>
<test name="union" state="success" duration="0,01"/>
<test name="union" state="success" duration="0,05"/>
<generatedTest id="4d151c7a-fb6d-4f92-86b2-03ecfa93a384" index="2" run="17" status="normaltermination" generated="true" new="true" assemblyName="NatSet" name="union86201"><declaringType assemblyName="NatSet" name="NatSet" token="ffffffff" namespace="NatSet"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="NatSet" name="NatSet" token="ffffffff" namespace="NatSet"/>
</type>
</parameter>
<rcov name="Block" dcov="0" dtot="0" acov="0" atot="0"/>
<rcov name="asserts" dcov="3" dtot="0" acov="12" atot="12"/>
<value name="other">new NatSet{sm={Length=100; false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true},rest={},max=99}</value>
<code><![CDATA[List<int> list;
global::NatSet.NatSet natSet;
int[] ints = new int[0];
list = new List<int>((IEnumerable<int>)ints);
bool[] bs = new bool[100];
bs[99] = true;
natSet = NatSetFactory.Create(bs, list, 99);
this.union(natSet);
]]></code>
<methodCode imports="System.Collections.Generic;Microsoft.VisualStudio.TestTools.UnitTesting;Microsoft.Pex.Framework.Generated"><![CDATA[[TestMethod]
[PexGeneratedBy(typeof(global::NatSet.NatSet))]
public void union86201()
{
    List<int> list;
    global::NatSet.NatSet natSet;
    int[] ints = new int[0];
    list = new List<int>((IEnumerable<int>)ints);
    bool[] bs = new bool[100];
    bs[99] = true;
    natSet = NatSetFactory.Create(bs, list, 99);
    this.union(natSet);
}
]]></methodCode>
<reference name="Microsoft.VisualStudio.QualityTools.UnitTestFramework"/>
<reference name="mscorlib" location="C:\Windows\Microsoft.NET\Framework\v4.0.30319\mscorlib.dll"/>
<reference name="Microsoft.Pex.Framework"/>
<reference name="NatSet" location="C:\Users\MehmetBerk\documents\visual studio 2010\Projects\NatSet\NatSet\bin\Debug\NatSet.dll"/>
<pathAssumption><![CDATA[List<int> s0 = new;
return rest_list == s0 && rest_list != (List<int>)null && sm_bs.Length == 100 && sm_bs != (bool[])null && other != (global::NatSet.NatSet)null && other == (global::NatSet.NatSet)s0;
]]></pathAssumption>
<pathCondition><![CDATA[return c != (int[])null && sm_bs[99] != (sbyte)0 && 
                           c.Length == 0 && max_i == 99 && sm_bs[0] == (sbyte)0 && sm_bs[1] == (sbyte)0 && sm_bs[2] == (sbyte)0 && sm_bs[3] == (sbyte)0 && sm_bs[4] == (sbyte)0 && sm_bs[5] == (sbyte)0 && 
                                                                                                                                                                                   sm_bs[6] == (sbyte)0 && sm_bs[7] == (sbyte)0 && sm_bs[8] == (sbyte)0 && sm_bs[9] == (sbyte)0 && sm_bs[10] == (sbyte)0 && sm_bs[11] == (sbyte)0 && sm_bs[12] == (sbyte)0 && sm_bs[13] == (sbyte)0 && 
                                                                                                                                                                                                                                                                                                                                                              sm_bs[14] == (sbyte)0 && sm_bs[15] == (sbyte)0 && sm_bs[16] == (sbyte)0 && sm_bs[17] == (sbyte)0 && sm_bs[18] == (sbyte)0 && sm_bs[19] == (sbyte)0 && sm_bs[20] == (sbyte)0 && 
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    sm_bs[21] == (sbyte)0 && sm_bs[22] == (sbyte)0 && sm_bs[23] == (sbyte)0 && sm_bs[24] == (sbyte)0 && sm_bs[25] == (sbyte)0 && sm_bs[26] == (sbyte)0 && sm_bs[27] == (sbyte)0 && 
sm_bs[28] == (sbyte)0 && sm_bs[29] == (sbyte)0 && sm_bs[30] == (sbyte)0 && sm_bs[31] == (sbyte)0 && sm_bs[32] == (sbyte)0 && sm_bs[33] == (sbyte)0 && sm_bs[34] == (sbyte)0 && 
sm_bs[35] == (sbyte)0 && sm_bs[36] == (sbyte)0 && sm_bs[37] == (sbyte)0 && sm_bs[38] == (sbyte)0 && sm_bs[39] == (sbyte)0 && sm_bs[40] == (sbyte)0 && sm_bs[41] == (sbyte)0 && 
sm_bs[42] == (sbyte)0 && sm_bs[43] == (sbyte)0 && sm_bs[44] == (sbyte)0 && sm_bs[45] == (sbyte)0 && sm_bs[46] == (sbyte)0 && sm_bs[47] == (sbyte)0 && sm_bs[48] == (sbyte)0 && 
sm_bs[49] == (sbyte)0 && sm_bs[50] == (sbyte)0 && sm_bs[51] == (sbyte)0 && sm_bs[52] == (sbyte)0 && sm_bs[53] == (sbyte)0 && sm_bs[54] == (sbyte)0 && sm_bs[55] == (sbyte)0 && 
sm_bs[56] == (sbyte)0 && sm_bs[57] == (sbyte)0 && sm_bs[58] == (sbyte)0 && sm_bs[59] == (sbyte)0 && sm_bs[60] == (sbyte)0 && sm_bs[61] == (sbyte)0 && sm_bs[62] == (sbyte)0 && 
sm_bs[63] == (sbyte)0 && sm_bs[64] == (sbyte)0 && sm_bs[65] == (sbyte)0 && sm_bs[66] == (sbyte)0 && sm_bs[67] == (sbyte)0 && sm_bs[68] == (sbyte)0 && sm_bs[69] == (sbyte)0 && 
sm_bs[70] == (sbyte)0 && sm_bs[71] == (sbyte)0 && sm_bs[72] == (sbyte)0 && sm_bs[73] == (sbyte)0 && sm_bs[74] == (sbyte)0 && sm_bs[75] == (sbyte)0 && sm_bs[76] == (sbyte)0 && 
sm_bs[77] == (sbyte)0 && sm_bs[78] == (sbyte)0 && sm_bs[79] == (sbyte)0 && sm_bs[80] == (sbyte)0 && sm_bs[81] == (sbyte)0 && sm_bs[82] == (sbyte)0 && sm_bs[83] == (sbyte)0 && 
sm_bs[84] == (sbyte)0 && sm_bs[85] == (sbyte)0 && sm_bs[86] == (sbyte)0 && sm_bs[87] == (sbyte)0 && sm_bs[88] == (sbyte)0 && sm_bs[89] == (sbyte)0 && sm_bs[90] == (sbyte)0 && 
sm_bs[91] == (sbyte)0 && sm_bs[92] == (sbyte)0 && sm_bs[93] == (sbyte)0 && sm_bs[94] == (sbyte)0 && sm_bs[95] == (sbyte)0 && sm_bs[96] == (sbyte)0 && sm_bs[97] == (sbyte)0 && sm_bs[98] == (sbyte)0;
]]></pathCondition>
</generatedTest>
<test name="union" state="success" duration="0,01"/>
<test name="union" state="success" duration="0,05"/>
<generatedTest id="f0f5cce5-3a5a-4069-8710-dd97dfd33271" index="3" run="19" status="normaltermination" generated="true" new="true" assemblyName="NatSet" name="union43701"><declaringType assemblyName="NatSet" name="NatSet" token="ffffffff" namespace="NatSet"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="NatSet" name="NatSet" token="ffffffff" namespace="NatSet"/>
</type>
</parameter>
<rcov name="Block" dcov="0" dtot="0" acov="0" atot="0"/>
<rcov name="asserts" dcov="0" dtot="0" acov="12" atot="12"/>
<value name="other">new NatSet{sm={Length=100; true, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true},rest={},max=99}</value>
<code><![CDATA[List<int> list;
global::NatSet.NatSet natSet;
int[] ints = new int[0];
list = new List<int>((IEnumerable<int>)ints);
bool[] bs = new bool[100];
bs[0] = true;
bs[99] = true;
natSet = NatSetFactory.Create(bs, list, 99);
this.union(natSet);
]]></code>
<methodCode imports="System.Collections.Generic;Microsoft.VisualStudio.TestTools.UnitTesting;Microsoft.Pex.Framework.Generated"><![CDATA[[TestMethod]
[PexGeneratedBy(typeof(global::NatSet.NatSet))]
public void union43701()
{
    List<int> list;
    global::NatSet.NatSet natSet;
    int[] ints = new int[0];
    list = new List<int>((IEnumerable<int>)ints);
    bool[] bs = new bool[100];
    bs[0] = true;
    bs[99] = true;
    natSet = NatSetFactory.Create(bs, list, 99);
    this.union(natSet);
}
]]></methodCode>
<reference name="Microsoft.VisualStudio.QualityTools.UnitTestFramework"/>
<reference name="mscorlib" location="C:\Windows\Microsoft.NET\Framework\v4.0.30319\mscorlib.dll"/>
<reference name="Microsoft.Pex.Framework"/>
<reference name="NatSet" location="C:\Users\MehmetBerk\documents\visual studio 2010\Projects\NatSet\NatSet\bin\Debug\NatSet.dll"/>
<pathAssumption><![CDATA[List<int> s0 = new;
return rest_list == s0 && rest_list != (List<int>)null && sm_bs.Length == 100 && sm_bs != (bool[])null && other != (global::NatSet.NatSet)null && other == (global::NatSet.NatSet)s0;
]]></pathAssumption>
<pathCondition><![CDATA[return c != (int[])null && sm_bs[0] != (sbyte)0 && 
                           sm_bs[99] != (sbyte)0 && c.Length == 0 && max_i == 99 && sm_bs[1] == (sbyte)0 && sm_bs[2] == (sbyte)0 && sm_bs[3] == (sbyte)0 && sm_bs[4] == (sbyte)0 && sm_bs[5] == (sbyte)0 && 
                                                                                                                                                                                    sm_bs[6] == (sbyte)0 && sm_bs[7] == (sbyte)0 && sm_bs[8] == (sbyte)0 && sm_bs[9] == (sbyte)0 && sm_bs[10] == (sbyte)0 && sm_bs[11] == (sbyte)0 && sm_bs[12] == (sbyte)0 && sm_bs[13] == (sbyte)0 && 
                                                                                                                                                                                                                                                                                                                                                               sm_bs[14] == (sbyte)0 && sm_bs[15] == (sbyte)0 && sm_bs[16] == (sbyte)0 && sm_bs[17] == (sbyte)0 && sm_bs[18] == (sbyte)0 && sm_bs[19] == (sbyte)0 && sm_bs[20] == (sbyte)0 && 
sm_bs[21] == (sbyte)0 && sm_bs[22] == (sbyte)0 && sm_bs[23] == (sbyte)0 && sm_bs[24] == (sbyte)0 && sm_bs[25] == (sbyte)0 && sm_bs[26] == (sbyte)0 && sm_bs[27] == (sbyte)0 && 
sm_bs[28] == (sbyte)0 && sm_bs[29] == (sbyte)0 && sm_bs[30] == (sbyte)0 && sm_bs[31] == (sbyte)0 && sm_bs[32] == (sbyte)0 && sm_bs[33] == (sbyte)0 && sm_bs[34] == (sbyte)0 && 
sm_bs[35] == (sbyte)0 && sm_bs[36] == (sbyte)0 && sm_bs[37] == (sbyte)0 && sm_bs[38] == (sbyte)0 && sm_bs[39] == (sbyte)0 && sm_bs[40] == (sbyte)0 && sm_bs[41] == (sbyte)0 && 
sm_bs[42] == (sbyte)0 && sm_bs[43] == (sbyte)0 && sm_bs[44] == (sbyte)0 && sm_bs[45] == (sbyte)0 && sm_bs[46] == (sbyte)0 && sm_bs[47] == (sbyte)0 && sm_bs[48] == (sbyte)0 && 
sm_bs[49] == (sbyte)0 && sm_bs[50] == (sbyte)0 && sm_bs[51] == (sbyte)0 && sm_bs[52] == (sbyte)0 && sm_bs[53] == (sbyte)0 && sm_bs[54] == (sbyte)0 && sm_bs[55] == (sbyte)0 && 
sm_bs[56] == (sbyte)0 && sm_bs[57] == (sbyte)0 && sm_bs[58] == (sbyte)0 && sm_bs[59] == (sbyte)0 && sm_bs[60] == (sbyte)0 && sm_bs[61] == (sbyte)0 && sm_bs[62] == (sbyte)0 && 
sm_bs[63] == (sbyte)0 && sm_bs[64] == (sbyte)0 && sm_bs[65] == (sbyte)0 && sm_bs[66] == (sbyte)0 && sm_bs[67] == (sbyte)0 && sm_bs[68] == (sbyte)0 && sm_bs[69] == (sbyte)0 && 
sm_bs[70] == (sbyte)0 && sm_bs[71] == (sbyte)0 && sm_bs[72] == (sbyte)0 && sm_bs[73] == (sbyte)0 && sm_bs[74] == (sbyte)0 && sm_bs[75] == (sbyte)0 && sm_bs[76] == (sbyte)0 && 
sm_bs[77] == (sbyte)0 && sm_bs[78] == (sbyte)0 && sm_bs[79] == (sbyte)0 && sm_bs[80] == (sbyte)0 && sm_bs[81] == (sbyte)0 && sm_bs[82] == (sbyte)0 && sm_bs[83] == (sbyte)0 && 
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           sm_bs[84] == (sbyte)0 && sm_bs[85] == (sbyte)0 && sm_bs[86] == (sbyte)0 && sm_bs[87] == (sbyte)0 && sm_bs[88] == (sbyte)0 && sm_bs[89] == (sbyte)0 && sm_bs[90] == (sbyte)0 && 
sm_bs[91] == (sbyte)0 && sm_bs[92] == (sbyte)0 && sm_bs[93] == (sbyte)0 && sm_bs[94] == (sbyte)0 && sm_bs[95] == (sbyte)0 && sm_bs[96] == (sbyte)0 && sm_bs[97] == (sbyte)0 && sm_bs[98] == (sbyte)0;
]]></pathCondition>
</generatedTest>
<test name="union" state="success" duration="0,01"/>
<test name="union" state="success" duration="0,01"/>
<test name="union" state="success" duration="0,05"/>
<test name="union" state="success" duration="0,01"/>
<test name="union" state="success" duration="0,05"/>
<test name="union" state="success" duration="0,01"/>
<test name="union" state="success" duration="0,01"/>
<test name="union" state="success" duration="0,05"/>
<test name="union" state="success" duration="0,01"/>
<test name="union" state="success" duration="0,05"/>
<test name="union" state="success" duration="0,01"/>
<test name="union" state="success" duration="0,05"/>
<test name="union" state="success" duration="0,01"/>
<test name="union" state="success" duration="0,05"/>
<test name="union" state="success" duration="0,01"/>
<test name="union" state="success" duration="0,01"/>
<test name="union" state="success" duration="0,05"/>
<generatedTest id="73d21a86-79ae-40fd-8f12-4ece0f920ec9" index="4" run="36" status="normaltermination" generated="true" new="true" assemblyName="NatSet" name="union43901"><declaringType assemblyName="NatSet" name="NatSet" token="ffffffff" namespace="NatSet"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="NatSet" name="NatSet" token="ffffffff" namespace="NatSet"/>
</type>
</parameter>
<rcov name="Block" dcov="0" dtot="0" acov="0" atot="0"/>
<rcov name="asserts" dcov="0" dtot="0" acov="12" atot="12"/>
<value name="other">new NatSet{sm={Length=100; false, false, true, true, true, true, true, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true},rest={},max=99}</value>
<code><![CDATA[List<int> list;
global::NatSet.NatSet natSet;
int[] ints = new int[0];
list = new List<int>((IEnumerable<int>)ints);
bool[] bs = new bool[100];
bs[2] = true;
bs[3] = true;
bs[4] = true;
bs[5] = true;
bs[6] = true;
bs[99] = true;
natSet = NatSetFactory.Create(bs, list, 99);
this.union(natSet);
]]></code>
<methodCode imports="System.Collections.Generic;Microsoft.VisualStudio.TestTools.UnitTesting;Microsoft.Pex.Framework.Generated"><![CDATA[[TestMethod]
[PexGeneratedBy(typeof(global::NatSet.NatSet))]
public void union43901()
{
    List<int> list;
    global::NatSet.NatSet natSet;
    int[] ints = new int[0];
    list = new List<int>((IEnumerable<int>)ints);
    bool[] bs = new bool[100];
    bs[2] = true;
    bs[3] = true;
    bs[4] = true;
    bs[5] = true;
    bs[6] = true;
    bs[99] = true;
    natSet = NatSetFactory.Create(bs, list, 99);
    this.union(natSet);
}
]]></methodCode>
<reference name="Microsoft.VisualStudio.QualityTools.UnitTestFramework"/>
<reference name="mscorlib" location="C:\Windows\Microsoft.NET\Framework\v4.0.30319\mscorlib.dll"/>
<reference name="Microsoft.Pex.Framework"/>
<reference name="NatSet" location="C:\Users\MehmetBerk\documents\visual studio 2010\Projects\NatSet\NatSet\bin\Debug\NatSet.dll"/>
<pathAssumption><![CDATA[List<int> s0 = new;
return rest_list == s0 && rest_list != (List<int>)null && sm_bs.Length == 100 && sm_bs != (bool[])null && other != (global::NatSet.NatSet)null && other == (global::NatSet.NatSet)s0;
]]></pathAssumption>
<pathCondition><![CDATA[return c != (int[])null && sm_bs[2] != (sbyte)0 && 
                           sm_bs[3] != (sbyte)0 && sm_bs[4] != (sbyte)0 && sm_bs[5] != (sbyte)0 && sm_bs[6] != (sbyte)0 && sm_bs[99] != (sbyte)0 && c.Length == 0 && max_i == 99 && sm_bs[0] == (sbyte)0 && 
                                                                                                                                                                                    sm_bs[1] == (sbyte)0 && sm_bs[7] == (sbyte)0 && sm_bs[8] == (sbyte)0 && sm_bs[9] == (sbyte)0 && sm_bs[10] == (sbyte)0 && sm_bs[11] == (sbyte)0 && sm_bs[12] == (sbyte)0 && sm_bs[13] == (sbyte)0 && 
                                                                                                                                                                                                                                                                                                                                                               sm_bs[14] == (sbyte)0 && sm_bs[15] == (sbyte)0 && sm_bs[16] == (sbyte)0 && sm_bs[17] == (sbyte)0 && sm_bs[18] == (sbyte)0 && sm_bs[19] == (sbyte)0 && sm_bs[20] == (sbyte)0 && 
sm_bs[21] == (sbyte)0 && sm_bs[22] == (sbyte)0 && sm_bs[23] == (sbyte)0 && sm_bs[24] == (sbyte)0 && sm_bs[25] == (sbyte)0 && sm_bs[26] == (sbyte)0 && sm_bs[27] == (sbyte)0 && 
sm_bs[28] == (sbyte)0 && sm_bs[29] == (sbyte)0 && sm_bs[30] == (sbyte)0 && sm_bs[31] == (sbyte)0 && sm_bs[32] == (sbyte)0 && sm_bs[33] == (sbyte)0 && sm_bs[34] == (sbyte)0 && 
sm_bs[35] == (sbyte)0 && sm_bs[36] == (sbyte)0 && sm_bs[37] == (sbyte)0 && sm_bs[38] == (sbyte)0 && sm_bs[39] == (sbyte)0 && sm_bs[40] == (sbyte)0 && sm_bs[41] == (sbyte)0 && 
sm_bs[42] == (sbyte)0 && sm_bs[43] == (sbyte)0 && sm_bs[44] == (sbyte)0 && sm_bs[45] == (sbyte)0 && sm_bs[46] == (sbyte)0 && sm_bs[47] == (sbyte)0 && sm_bs[48] == (sbyte)0 && 
sm_bs[49] == (sbyte)0 && sm_bs[50] == (sbyte)0 && sm_bs[51] == (sbyte)0 && sm_bs[52] == (sbyte)0 && sm_bs[53] == (sbyte)0 && sm_bs[54] == (sbyte)0 && sm_bs[55] == (sbyte)0 && 
sm_bs[56] == (sbyte)0 && sm_bs[57] == (sbyte)0 && sm_bs[58] == (sbyte)0 && sm_bs[59] == (sbyte)0 && sm_bs[60] == (sbyte)0 && sm_bs[61] == (sbyte)0 && sm_bs[62] == (sbyte)0 && 
sm_bs[63] == (sbyte)0 && sm_bs[64] == (sbyte)0 && sm_bs[65] == (sbyte)0 && sm_bs[66] == (sbyte)0 && sm_bs[67] == (sbyte)0 && sm_bs[68] == (sbyte)0 && sm_bs[69] == (sbyte)0 && 
sm_bs[70] == (sbyte)0 && sm_bs[71] == (sbyte)0 && sm_bs[72] == (sbyte)0 && sm_bs[73] == (sbyte)0 && sm_bs[74] == (sbyte)0 && sm_bs[75] == (sbyte)0 && sm_bs[76] == (sbyte)0 && 
sm_bs[77] == (sbyte)0 && sm_bs[78] == (sbyte)0 && sm_bs[79] == (sbyte)0 && sm_bs[80] == (sbyte)0 && sm_bs[81] == (sbyte)0 && sm_bs[82] == (sbyte)0 && sm_bs[83] == (sbyte)0 && 
sm_bs[84] == (sbyte)0 && sm_bs[85] == (sbyte)0 && sm_bs[86] == (sbyte)0 && sm_bs[87] == (sbyte)0 && sm_bs[88] == (sbyte)0 && sm_bs[89] == (sbyte)0 && sm_bs[90] == (sbyte)0 && 
sm_bs[91] == (sbyte)0 && sm_bs[92] == (sbyte)0 && sm_bs[93] == (sbyte)0 && sm_bs[94] == (sbyte)0 && sm_bs[95] == (sbyte)0 && sm_bs[96] == (sbyte)0 && sm_bs[97] == (sbyte)0 && sm_bs[98] == (sbyte)0;
]]></pathCondition>
</generatedTest>
<test name="union" state="success" duration="0,01"/>
<test name="union" state="success" duration="0,05"/>
<test name="union" state="success" duration="0,01"/>
<test name="union" state="success" duration="0,05"/>
<test name="union" state="success" duration="0,01"/>
<test name="union" state="success" duration="0,06"/>
<generatedTest id="f75c3d7c-116f-48f3-99c1-ad37a2fdce31" index="5" run="42" status="normaltermination" generated="true" new="true" assemblyName="NatSet" name="union95003"><declaringType assemblyName="NatSet" name="NatSet" token="ffffffff" namespace="NatSet"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="NatSet" name="NatSet" token="ffffffff" namespace="NatSet"/>
</type>
</parameter>
<rcov name="Block" dcov="0" dtot="0" acov="0" atot="0"/>
<rcov name="asserts" dcov="0" dtot="0" acov="12" atot="12"/>
<value name="other">new NatSet{sm={Length=100; false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false},rest={100},max=100}</value>
<code><![CDATA[List<int> list;
global::NatSet.NatSet natSet;
int[] ints = new int[1];
ints[0] = 100;
list = new List<int>((IEnumerable<int>)ints);
bool[] bs = new bool[100];
natSet = NatSetFactory.Create(bs, list, 100);
this.union(natSet);
]]></code>
<methodCode imports="System.Collections.Generic;Microsoft.VisualStudio.TestTools.UnitTesting;Microsoft.Pex.Framework.Generated"><![CDATA[[TestMethod]
[PexGeneratedBy(typeof(global::NatSet.NatSet))]
public void union95003()
{
    List<int> list;
    global::NatSet.NatSet natSet;
    int[] ints = new int[1];
    ints[0] = 100;
    list = new List<int>((IEnumerable<int>)ints);
    bool[] bs = new bool[100];
    natSet = NatSetFactory.Create(bs, list, 100);
    this.union(natSet);
}
]]></methodCode>
<reference name="Microsoft.VisualStudio.QualityTools.UnitTestFramework"/>
<reference name="mscorlib" location="C:\Windows\Microsoft.NET\Framework\v4.0.30319\mscorlib.dll"/>
<reference name="Microsoft.Pex.Framework"/>
<reference name="NatSet" location="C:\Users\MehmetBerk\documents\visual studio 2010\Projects\NatSet\NatSet\bin\Debug\NatSet.dll"/>
<pathAssumption><![CDATA[List<int> s0 = new;
return rest_list == s0 && rest_list != (List<int>)null && sm_bs.Length == 100 && sm_bs != (bool[])null && other != (global::NatSet.NatSet)null && other == (global::NatSet.NatSet)s0;
]]></pathAssumption>
<pathCondition><![CDATA[return c != (int[])null && max_i == c[0] && 
                           99 < c[0] && c.Length == 1 && sm_bs[0] == (sbyte)0 && sm_bs[1] == (sbyte)0 && sm_bs[2] == (sbyte)0 && sm_bs[3] == (sbyte)0 && sm_bs[4] == (sbyte)0 && sm_bs[5] == (sbyte)0 && sm_bs[6] == (sbyte)0 && 
                                                                                                                                                                                                         sm_bs[7] == (sbyte)0 && sm_bs[8] == (sbyte)0 && sm_bs[9] == (sbyte)0 && sm_bs[10] == (sbyte)0 && sm_bs[11] == (sbyte)0 && sm_bs[12] == (sbyte)0 && sm_bs[13] == (sbyte)0 && sm_bs[14] == (sbyte)0 && 
                                                                                                                                                                                                                                                                                                                                                                                     sm_bs[15] == (sbyte)0 && sm_bs[16] == (sbyte)0 && sm_bs[17] == (sbyte)0 && sm_bs[18] == (sbyte)0 && sm_bs[19] == (sbyte)0 && sm_bs[20] == (sbyte)0 && sm_bs[21] == (sbyte)0 && 
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           sm_bs[22] == (sbyte)0 && sm_bs[23] == (sbyte)0 && sm_bs[24] == (sbyte)0 && sm_bs[25] == (sbyte)0 && sm_bs[26] == (sbyte)0 && sm_bs[27] == (sbyte)0 && sm_bs[28] == (sbyte)0 && 
sm_bs[29] == (sbyte)0 && sm_bs[30] == (sbyte)0 && sm_bs[31] == (sbyte)0 && sm_bs[32] == (sbyte)0 && sm_bs[33] == (sbyte)0 && sm_bs[34] == (sbyte)0 && sm_bs[35] == (sbyte)0 && 
sm_bs[36] == (sbyte)0 && sm_bs[37] == (sbyte)0 && sm_bs[38] == (sbyte)0 && sm_bs[39] == (sbyte)0 && sm_bs[40] == (sbyte)0 && sm_bs[41] == (sbyte)0 && sm_bs[42] == (sbyte)0 && 
sm_bs[43] == (sbyte)0 && sm_bs[44] == (sbyte)0 && sm_bs[45] == (sbyte)0 && sm_bs[46] == (sbyte)0 && sm_bs[47] == (sbyte)0 && sm_bs[48] == (sbyte)0 && sm_bs[49] == (sbyte)0 && 
sm_bs[50] == (sbyte)0 && sm_bs[51] == (sbyte)0 && sm_bs[52] == (sbyte)0 && sm_bs[53] == (sbyte)0 && sm_bs[54] == (sbyte)0 && sm_bs[55] == (sbyte)0 && sm_bs[56] == (sbyte)0 && 
sm_bs[57] == (sbyte)0 && sm_bs[58] == (sbyte)0 && sm_bs[59] == (sbyte)0 && sm_bs[60] == (sbyte)0 && sm_bs[61] == (sbyte)0 && sm_bs[62] == (sbyte)0 && sm_bs[63] == (sbyte)0 && 
sm_bs[64] == (sbyte)0 && sm_bs[65] == (sbyte)0 && sm_bs[66] == (sbyte)0 && sm_bs[67] == (sbyte)0 && sm_bs[68] == (sbyte)0 && sm_bs[69] == (sbyte)0 && sm_bs[70] == (sbyte)0 && 
sm_bs[71] == (sbyte)0 && sm_bs[72] == (sbyte)0 && sm_bs[73] == (sbyte)0 && sm_bs[74] == (sbyte)0 && sm_bs[75] == (sbyte)0 && sm_bs[76] == (sbyte)0 && sm_bs[77] == (sbyte)0 && 
sm_bs[78] == (sbyte)0 && sm_bs[79] == (sbyte)0 && sm_bs[80] == (sbyte)0 && sm_bs[81] == (sbyte)0 && sm_bs[82] == (sbyte)0 && sm_bs[83] == (sbyte)0 && sm_bs[84] == (sbyte)0 && 
sm_bs[85] == (sbyte)0 && sm_bs[86] == (sbyte)0 && sm_bs[87] == (sbyte)0 && sm_bs[88] == (sbyte)0 && sm_bs[89] == (sbyte)0 && sm_bs[90] == (sbyte)0 && sm_bs[91] == (sbyte)0 && 
sm_bs[92] == (sbyte)0 && sm_bs[93] == (sbyte)0 && sm_bs[94] == (sbyte)0 && sm_bs[95] == (sbyte)0 && sm_bs[96] == (sbyte)0 && sm_bs[97] == (sbyte)0 && sm_bs[98] == (sbyte)0 && sm_bs[99] == (sbyte)0;
]]></pathCondition>
</generatedTest>
<test name="union" state="success" duration="0,01"/>
<test name="union" state="success" duration="0,06"/>
<generatedTest id="d3cd8b8c-ebe4-456f-97fa-90c1e606c940" index="6" run="44" status="normaltermination" generated="true" new="true" assemblyName="NatSet" name="union41601"><declaringType assemblyName="NatSet" name="NatSet" token="ffffffff" namespace="NatSet"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="NatSet" name="NatSet" token="ffffffff" namespace="NatSet"/>
</type>
</parameter>
<rcov name="Block" dcov="0" dtot="0" acov="0" atot="0"/>
<rcov name="asserts" dcov="0" dtot="0" acov="12" atot="12"/>
<value name="other">new NatSet{sm={Length=100; true, false, false, true, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true},rest={},max=99}</value>
<code><![CDATA[List<int> list;
global::NatSet.NatSet natSet;
int[] ints = new int[0];
list = new List<int>((IEnumerable<int>)ints);
bool[] bs = new bool[100];
bs[0] = true;
bs[3] = true;
bs[99] = true;
natSet = NatSetFactory.Create(bs, list, 99);
this.union(natSet);
]]></code>
<methodCode imports="System.Collections.Generic;Microsoft.VisualStudio.TestTools.UnitTesting;Microsoft.Pex.Framework.Generated"><![CDATA[[TestMethod]
[PexGeneratedBy(typeof(global::NatSet.NatSet))]
public void union41601()
{
    List<int> list;
    global::NatSet.NatSet natSet;
    int[] ints = new int[0];
    list = new List<int>((IEnumerable<int>)ints);
    bool[] bs = new bool[100];
    bs[0] = true;
    bs[3] = true;
    bs[99] = true;
    natSet = NatSetFactory.Create(bs, list, 99);
    this.union(natSet);
}
]]></methodCode>
<reference name="Microsoft.VisualStudio.QualityTools.UnitTestFramework"/>
<reference name="mscorlib" location="C:\Windows\Microsoft.NET\Framework\v4.0.30319\mscorlib.dll"/>
<reference name="Microsoft.Pex.Framework"/>
<reference name="NatSet" location="C:\Users\MehmetBerk\documents\visual studio 2010\Projects\NatSet\NatSet\bin\Debug\NatSet.dll"/>
<pathAssumption><![CDATA[List<int> s0 = new;
return rest_list == s0 && rest_list != (List<int>)null && sm_bs.Length == 100 && sm_bs != (bool[])null && other != (global::NatSet.NatSet)null && other == (global::NatSet.NatSet)s0;
]]></pathAssumption>
<pathCondition><![CDATA[return c != (int[])null && sm_bs[0] != (sbyte)0 && 
                           sm_bs[3] != (sbyte)0 && sm_bs[99] != (sbyte)0 && c.Length == 0 && max_i == 99 && sm_bs[1] == (sbyte)0 && sm_bs[2] == (sbyte)0 && sm_bs[4] == (sbyte)0 && sm_bs[5] == (sbyte)0 && 
                                                                                                                                                                                    sm_bs[6] == (sbyte)0 && sm_bs[7] == (sbyte)0 && sm_bs[8] == (sbyte)0 && sm_bs[9] == (sbyte)0 && sm_bs[10] == (sbyte)0 && sm_bs[11] == (sbyte)0 && sm_bs[12] == (sbyte)0 && sm_bs[13] == (sbyte)0 && 
                                                                                                                                                                                                                                                                                                                                                               sm_bs[14] == (sbyte)0 && sm_bs[15] == (sbyte)0 && sm_bs[16] == (sbyte)0 && sm_bs[17] == (sbyte)0 && sm_bs[18] == (sbyte)0 && sm_bs[19] == (sbyte)0 && sm_bs[20] == (sbyte)0 && 
sm_bs[21] == (sbyte)0 && sm_bs[22] == (sbyte)0 && sm_bs[23] == (sbyte)0 && sm_bs[24] == (sbyte)0 && sm_bs[25] == (sbyte)0 && sm_bs[26] == (sbyte)0 && sm_bs[27] == (sbyte)0 && 
sm_bs[28] == (sbyte)0 && sm_bs[29] == (sbyte)0 && sm_bs[30] == (sbyte)0 && sm_bs[31] == (sbyte)0 && sm_bs[32] == (sbyte)0 && sm_bs[33] == (sbyte)0 && sm_bs[34] == (sbyte)0 && 
sm_bs[35] == (sbyte)0 && sm_bs[36] == (sbyte)0 && sm_bs[37] == (sbyte)0 && sm_bs[38] == (sbyte)0 && sm_bs[39] == (sbyte)0 && sm_bs[40] == (sbyte)0 && sm_bs[41] == (sbyte)0 && 
sm_bs[42] == (sbyte)0 && sm_bs[43] == (sbyte)0 && sm_bs[44] == (sbyte)0 && sm_bs[45] == (sbyte)0 && sm_bs[46] == (sbyte)0 && sm_bs[47] == (sbyte)0 && sm_bs[48] == (sbyte)0 && 
sm_bs[49] == (sbyte)0 && sm_bs[50] == (sbyte)0 && sm_bs[51] == (sbyte)0 && sm_bs[52] == (sbyte)0 && sm_bs[53] == (sbyte)0 && sm_bs[54] == (sbyte)0 && sm_bs[55] == (sbyte)0 && 
sm_bs[56] == (sbyte)0 && sm_bs[57] == (sbyte)0 && sm_bs[58] == (sbyte)0 && sm_bs[59] == (sbyte)0 && sm_bs[60] == (sbyte)0 && sm_bs[61] == (sbyte)0 && sm_bs[62] == (sbyte)0 && 
sm_bs[63] == (sbyte)0 && sm_bs[64] == (sbyte)0 && sm_bs[65] == (sbyte)0 && sm_bs[66] == (sbyte)0 && sm_bs[67] == (sbyte)0 && sm_bs[68] == (sbyte)0 && sm_bs[69] == (sbyte)0 && 
sm_bs[70] == (sbyte)0 && sm_bs[71] == (sbyte)0 && sm_bs[72] == (sbyte)0 && sm_bs[73] == (sbyte)0 && sm_bs[74] == (sbyte)0 && sm_bs[75] == (sbyte)0 && sm_bs[76] == (sbyte)0 && 
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     sm_bs[77] == (sbyte)0 && sm_bs[78] == (sbyte)0 && sm_bs[79] == (sbyte)0 && sm_bs[80] == (sbyte)0 && sm_bs[81] == (sbyte)0 && sm_bs[82] == (sbyte)0 && sm_bs[83] == (sbyte)0 && 
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           sm_bs[84] == (sbyte)0 && sm_bs[85] == (sbyte)0 && sm_bs[86] == (sbyte)0 && sm_bs[87] == (sbyte)0 && sm_bs[88] == (sbyte)0 && sm_bs[89] == (sbyte)0 && sm_bs[90] == (sbyte)0 && 
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 sm_bs[91] == (sbyte)0 && sm_bs[92] == (sbyte)0 && sm_bs[93] == (sbyte)0 && sm_bs[94] == (sbyte)0 && sm_bs[95] == (sbyte)0 && sm_bs[96] == (sbyte)0 && sm_bs[97] == (sbyte)0 && sm_bs[98] == (sbyte)0;
]]></pathCondition>
</generatedTest>
<test name="union" state="success" duration="0,00"/>
<test name="union" state="success" duration="0,01"/>
<test name="union" state="success" duration="0,06"/>
<test name="union" state="success" duration="0,01"/>
<test name="union" state="success" duration="0,06"/>
<test name="union" state="success" duration="0,01"/>
<test name="union" state="success" duration="0,06"/>
<test name="union" state="success" duration="0,01"/>
<test name="union" state="success" duration="0,06"/>
<test name="union" state="success" duration="0,02"/>
<test name="union" state="success" duration="0,06"/>
<generatedTest id="2f5fac7b-123f-4d71-b134-ef1d05bdb15b" index="7" run="55" status="normaltermination" generated="true" new="true" assemblyName="NatSet" name="union29401"><declaringType assemblyName="NatSet" name="NatSet" token="ffffffff" namespace="NatSet"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="NatSet" name="NatSet" token="ffffffff" namespace="NatSet"/>
</type>
</parameter>
<rcov name="Block" dcov="0" dtot="0" acov="0" atot="0"/>
<rcov name="asserts" dcov="0" dtot="0" acov="12" atot="12"/>
<value name="other">new NatSet{sm={Length=100; true, true, true, true, true, true, true, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false},rest={100},max=100}</value>
<code><![CDATA[List<int> list;
global::NatSet.NatSet natSet;
int[] ints = new int[1];
ints[0] = 100;
list = new List<int>((IEnumerable<int>)ints);
bool[] bs = new bool[100];
bs[0] = true;
bs[1] = true;
bs[2] = true;
bs[3] = true;
bs[4] = true;
bs[5] = true;
bs[6] = true;
natSet = NatSetFactory.Create(bs, list, 100);
this.union(natSet);
]]></code>
<methodCode imports="System.Collections.Generic;Microsoft.VisualStudio.TestTools.UnitTesting;Microsoft.Pex.Framework.Generated"><![CDATA[[TestMethod]
[PexGeneratedBy(typeof(global::NatSet.NatSet))]
public void union29401()
{
    List<int> list;
    global::NatSet.NatSet natSet;
    int[] ints = new int[1];
    ints[0] = 100;
    list = new List<int>((IEnumerable<int>)ints);
    bool[] bs = new bool[100];
    bs[0] = true;
    bs[1] = true;
    bs[2] = true;
    bs[3] = true;
    bs[4] = true;
    bs[5] = true;
    bs[6] = true;
    natSet = NatSetFactory.Create(bs, list, 100);
    this.union(natSet);
}
]]></methodCode>
<reference name="Microsoft.VisualStudio.QualityTools.UnitTestFramework"/>
<reference name="mscorlib" location="C:\Windows\Microsoft.NET\Framework\v4.0.30319\mscorlib.dll"/>
<reference name="Microsoft.Pex.Framework"/>
<reference name="NatSet" location="C:\Users\MehmetBerk\documents\visual studio 2010\Projects\NatSet\NatSet\bin\Debug\NatSet.dll"/>
<pathAssumption><![CDATA[List<int> s0 = new;
return rest_list == s0 && rest_list != (List<int>)null && sm_bs.Length == 100 && sm_bs != (bool[])null && other != (global::NatSet.NatSet)null && other == (global::NatSet.NatSet)s0;
]]></pathAssumption>
<pathCondition><![CDATA[return c != (int[])null && sm_bs[0] != (sbyte)0 && sm_bs[1] != (sbyte)0 && 
                                                   sm_bs[2] != (sbyte)0 && sm_bs[3] != (sbyte)0 && sm_bs[4] != (sbyte)0 && sm_bs[5] != (sbyte)0 && sm_bs[6] != (sbyte)0 && c.Length == 1 && max_i == 100 && sm_bs[7] == (sbyte)0 && 
                                                                                                                                                                                                            sm_bs[8] == (sbyte)0 && sm_bs[9] == (sbyte)0 && sm_bs[10] == (sbyte)0 && sm_bs[11] == (sbyte)0 && sm_bs[12] == (sbyte)0 && sm_bs[13] == (sbyte)0 && sm_bs[14] == (sbyte)0 && sm_bs[15] == (sbyte)0 && 
                                                                                                                                                                                                                                                                                                                                                                                         sm_bs[16] == (sbyte)0 && sm_bs[17] == (sbyte)0 && sm_bs[18] == (sbyte)0 && sm_bs[19] == (sbyte)0 && sm_bs[20] == (sbyte)0 && sm_bs[21] == (sbyte)0 && sm_bs[22] == (sbyte)0 && 
sm_bs[23] == (sbyte)0 && sm_bs[24] == (sbyte)0 && sm_bs[25] == (sbyte)0 && sm_bs[26] == (sbyte)0 && sm_bs[27] == (sbyte)0 && sm_bs[28] == (sbyte)0 && sm_bs[29] == (sbyte)0 && 
sm_bs[30] == (sbyte)0 && sm_bs[31] == (sbyte)0 && sm_bs[32] == (sbyte)0 && sm_bs[33] == (sbyte)0 && sm_bs[34] == (sbyte)0 && sm_bs[35] == (sbyte)0 && sm_bs[36] == (sbyte)0 && 
sm_bs[37] == (sbyte)0 && sm_bs[38] == (sbyte)0 && sm_bs[39] == (sbyte)0 && sm_bs[40] == (sbyte)0 && sm_bs[41] == (sbyte)0 && sm_bs[42] == (sbyte)0 && sm_bs[43] == (sbyte)0 && 
sm_bs[44] == (sbyte)0 && sm_bs[45] == (sbyte)0 && sm_bs[46] == (sbyte)0 && sm_bs[47] == (sbyte)0 && sm_bs[48] == (sbyte)0 && sm_bs[49] == (sbyte)0 && sm_bs[50] == (sbyte)0 && 
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       sm_bs[51] == (sbyte)0 && sm_bs[52] == (sbyte)0 && sm_bs[53] == (sbyte)0 && sm_bs[54] == (sbyte)0 && sm_bs[55] == (sbyte)0 && sm_bs[56] == (sbyte)0 && sm_bs[57] == (sbyte)0 && 
sm_bs[58] == (sbyte)0 && sm_bs[59] == (sbyte)0 && sm_bs[60] == (sbyte)0 && sm_bs[61] == (sbyte)0 && sm_bs[62] == (sbyte)0 && sm_bs[63] == (sbyte)0 && sm_bs[64] == (sbyte)0 && 
sm_bs[65] == (sbyte)0 && sm_bs[66] == (sbyte)0 && sm_bs[67] == (sbyte)0 && sm_bs[68] == (sbyte)0 && sm_bs[69] == (sbyte)0 && sm_bs[70] == (sbyte)0 && sm_bs[71] == (sbyte)0 && 
sm_bs[72] == (sbyte)0 && sm_bs[73] == (sbyte)0 && sm_bs[74] == (sbyte)0 && sm_bs[75] == (sbyte)0 && sm_bs[76] == (sbyte)0 && sm_bs[77] == (sbyte)0 && sm_bs[78] == (sbyte)0 && 
sm_bs[79] == (sbyte)0 && sm_bs[80] == (sbyte)0 && sm_bs[81] == (sbyte)0 && sm_bs[82] == (sbyte)0 && sm_bs[83] == (sbyte)0 && sm_bs[84] == (sbyte)0 && sm_bs[85] == (sbyte)0 && 
sm_bs[86] == (sbyte)0 && sm_bs[87] == (sbyte)0 && sm_bs[88] == (sbyte)0 && sm_bs[89] == (sbyte)0 && sm_bs[90] == (sbyte)0 && sm_bs[91] == (sbyte)0 && sm_bs[92] == (sbyte)0 && 
sm_bs[93] == (sbyte)0 && sm_bs[94] == (sbyte)0 && sm_bs[95] == (sbyte)0 && sm_bs[96] == (sbyte)0 && sm_bs[97] == (sbyte)0 && sm_bs[98] == (sbyte)0 && sm_bs[99] == (sbyte)0 && c[0] == 100;
]]></pathCondition>
</generatedTest>
<test name="union" state="success" duration="0,04"/>
<generatedTest id="4350b853-9499-4591-9b87-121a67defd53" index="8" run="56" status="normaltermination" generated="true" new="true" assemblyName="NatSet" name="union96701"><declaringType assemblyName="NatSet" name="NatSet" token="ffffffff" namespace="NatSet"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="NatSet" name="NatSet" token="ffffffff" namespace="NatSet"/>
</type>
</parameter>
<rcov name="Block" dcov="0" dtot="0" acov="0" atot="0"/>
<rcov name="asserts" dcov="0" dtot="0" acov="12" atot="12"/>
<value name="other">new NatSet{sm={Length=100; true, true, true, true, true, true, true, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false},rest={101},max=101}</value>
<code><![CDATA[List<int> list;
global::NatSet.NatSet natSet;
int[] ints = new int[1];
ints[0] = 101;
list = new List<int>((IEnumerable<int>)ints);
bool[] bs = new bool[100];
bs[0] = true;
bs[1] = true;
bs[2] = true;
bs[3] = true;
bs[4] = true;
bs[5] = true;
bs[6] = true;
natSet = NatSetFactory.Create(bs, list, 101);
this.union(natSet);
]]></code>
<methodCode imports="System.Collections.Generic;Microsoft.VisualStudio.TestTools.UnitTesting;Microsoft.Pex.Framework.Generated"><![CDATA[[TestMethod]
[PexGeneratedBy(typeof(global::NatSet.NatSet))]
public void union96701()
{
    List<int> list;
    global::NatSet.NatSet natSet;
    int[] ints = new int[1];
    ints[0] = 101;
    list = new List<int>((IEnumerable<int>)ints);
    bool[] bs = new bool[100];
    bs[0] = true;
    bs[1] = true;
    bs[2] = true;
    bs[3] = true;
    bs[4] = true;
    bs[5] = true;
    bs[6] = true;
    natSet = NatSetFactory.Create(bs, list, 101);
    this.union(natSet);
}
]]></methodCode>
<reference name="Microsoft.VisualStudio.QualityTools.UnitTestFramework"/>
<reference name="mscorlib" location="C:\Windows\Microsoft.NET\Framework\v4.0.30319\mscorlib.dll"/>
<reference name="Microsoft.Pex.Framework"/>
<reference name="NatSet" location="C:\Users\MehmetBerk\documents\visual studio 2010\Projects\NatSet\NatSet\bin\Debug\NatSet.dll"/>
<pathAssumption><![CDATA[List<int> s0 = new;
return rest_list == s0 && rest_list != (List<int>)null && sm_bs.Length == 100 && sm_bs != (bool[])null && other != (global::NatSet.NatSet)null && other == (global::NatSet.NatSet)s0;
]]></pathAssumption>
<pathCondition><![CDATA[return c != (int[])null && max_i == c[0] && sm_bs[0] != (sbyte)0 && 
                                            sm_bs[1] != (sbyte)0 && sm_bs[2] != (sbyte)0 && sm_bs[3] != (sbyte)0 && sm_bs[4] != (sbyte)0 && sm_bs[5] != (sbyte)0 && sm_bs[6] != (sbyte)0 && 100 < c[0] && c[0] != 100 && c.Length == 1 && 
                                                                                                                                                                                                                         sm_bs[7] == (sbyte)0 && sm_bs[8] == (sbyte)0 && sm_bs[9] == (sbyte)0 && sm_bs[10] == (sbyte)0 && sm_bs[11] == (sbyte)0 && sm_bs[12] == (sbyte)0 && sm_bs[13] == (sbyte)0 && sm_bs[14] == (sbyte)0 && 
                                                                                                                                                                                                                                                                                                                                                                                                     sm_bs[15] == (sbyte)0 && sm_bs[16] == (sbyte)0 && sm_bs[17] == (sbyte)0 && sm_bs[18] == (sbyte)0 && sm_bs[19] == (sbyte)0 && sm_bs[20] == (sbyte)0 && sm_bs[21] == (sbyte)0 && 
sm_bs[22] == (sbyte)0 && sm_bs[23] == (sbyte)0 && sm_bs[24] == (sbyte)0 && sm_bs[25] == (sbyte)0 && sm_bs[26] == (sbyte)0 && sm_bs[27] == (sbyte)0 && sm_bs[28] == (sbyte)0 && 
sm_bs[29] == (sbyte)0 && sm_bs[30] == (sbyte)0 && sm_bs[31] == (sbyte)0 && sm_bs[32] == (sbyte)0 && sm_bs[33] == (sbyte)0 && sm_bs[34] == (sbyte)0 && sm_bs[35] == (sbyte)0 && 
sm_bs[36] == (sbyte)0 && sm_bs[37] == (sbyte)0 && sm_bs[38] == (sbyte)0 && sm_bs[39] == (sbyte)0 && sm_bs[40] == (sbyte)0 && sm_bs[41] == (sbyte)0 && sm_bs[42] == (sbyte)0 && 
sm_bs[43] == (sbyte)0 && sm_bs[44] == (sbyte)0 && sm_bs[45] == (sbyte)0 && sm_bs[46] == (sbyte)0 && sm_bs[47] == (sbyte)0 && sm_bs[48] == (sbyte)0 && sm_bs[49] == (sbyte)0 && 
sm_bs[50] == (sbyte)0 && sm_bs[51] == (sbyte)0 && sm_bs[52] == (sbyte)0 && sm_bs[53] == (sbyte)0 && sm_bs[54] == (sbyte)0 && sm_bs[55] == (sbyte)0 && sm_bs[56] == (sbyte)0 && 
sm_bs[57] == (sbyte)0 && sm_bs[58] == (sbyte)0 && sm_bs[59] == (sbyte)0 && sm_bs[60] == (sbyte)0 && sm_bs[61] == (sbyte)0 && sm_bs[62] == (sbyte)0 && sm_bs[63] == (sbyte)0 && 
sm_bs[64] == (sbyte)0 && sm_bs[65] == (sbyte)0 && sm_bs[66] == (sbyte)0 && sm_bs[67] == (sbyte)0 && sm_bs[68] == (sbyte)0 && sm_bs[69] == (sbyte)0 && sm_bs[70] == (sbyte)0 && 
sm_bs[71] == (sbyte)0 && sm_bs[72] == (sbyte)0 && sm_bs[73] == (sbyte)0 && sm_bs[74] == (sbyte)0 && sm_bs[75] == (sbyte)0 && sm_bs[76] == (sbyte)0 && sm_bs[77] == (sbyte)0 && 
sm_bs[78] == (sbyte)0 && sm_bs[79] == (sbyte)0 && sm_bs[80] == (sbyte)0 && sm_bs[81] == (sbyte)0 && sm_bs[82] == (sbyte)0 && sm_bs[83] == (sbyte)0 && sm_bs[84] == (sbyte)0 && 
sm_bs[85] == (sbyte)0 && sm_bs[86] == (sbyte)0 && sm_bs[87] == (sbyte)0 && sm_bs[88] == (sbyte)0 && sm_bs[89] == (sbyte)0 && sm_bs[90] == (sbyte)0 && sm_bs[91] == (sbyte)0 && 
sm_bs[92] == (sbyte)0 && sm_bs[93] == (sbyte)0 && sm_bs[94] == (sbyte)0 && sm_bs[95] == (sbyte)0 && sm_bs[96] == (sbyte)0 && sm_bs[97] == (sbyte)0 && sm_bs[98] == (sbyte)0 && sm_bs[99] == (sbyte)0;
]]></pathCondition>
</generatedTest>
<test name="union" state="success" duration="0,05"/>
<test name="union" state="success" duration="0,04"/>
<test name="union" state="success" duration="0,04"/>
<test name="union" state="success" duration="0,04"/>
<generatedTest id="2fd3a655-4964-4a0e-adf5-0ec3050423b2" index="9" run="60" status="normaltermination" generated="true" new="true" assemblyName="NatSet" name="union40401"><declaringType assemblyName="NatSet" name="NatSet" token="ffffffff" namespace="NatSet"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="NatSet" name="NatSet" token="ffffffff" namespace="NatSet"/>
</type>
</parameter>
<rcov name="Block" dcov="0" dtot="0" acov="0" atot="0"/>
<rcov name="asserts" dcov="0" dtot="0" acov="12" atot="12"/>
<value name="other">new NatSet{sm={Length=100; true, true, true, true, true, true, true, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true},rest={102},max=102}</value>
<code><![CDATA[List<int> list;
global::NatSet.NatSet natSet;
int[] ints = new int[1];
ints[0] = 102;
list = new List<int>((IEnumerable<int>)ints);
bool[] bs = new bool[100];
bs[0] = true;
bs[1] = true;
bs[2] = true;
bs[3] = true;
bs[4] = true;
bs[5] = true;
bs[6] = true;
bs[99] = true;
natSet = NatSetFactory.Create(bs, list, 102);
this.union(natSet);
]]></code>
<methodCode imports="System.Collections.Generic;Microsoft.VisualStudio.TestTools.UnitTesting;Microsoft.Pex.Framework.Generated"><![CDATA[[TestMethod]
[PexGeneratedBy(typeof(global::NatSet.NatSet))]
public void union40401()
{
    List<int> list;
    global::NatSet.NatSet natSet;
    int[] ints = new int[1];
    ints[0] = 102;
    list = new List<int>((IEnumerable<int>)ints);
    bool[] bs = new bool[100];
    bs[0] = true;
    bs[1] = true;
    bs[2] = true;
    bs[3] = true;
    bs[4] = true;
    bs[5] = true;
    bs[6] = true;
    bs[99] = true;
    natSet = NatSetFactory.Create(bs, list, 102);
    this.union(natSet);
}
]]></methodCode>
<reference name="Microsoft.VisualStudio.QualityTools.UnitTestFramework"/>
<reference name="mscorlib" location="C:\Windows\Microsoft.NET\Framework\v4.0.30319\mscorlib.dll"/>
<reference name="Microsoft.Pex.Framework"/>
<reference name="NatSet" location="C:\Users\MehmetBerk\documents\visual studio 2010\Projects\NatSet\NatSet\bin\Debug\NatSet.dll"/>
<pathAssumption><![CDATA[List<int> s0 = new;
return rest_list == s0 && rest_list != (List<int>)null && sm_bs.Length == 100 && sm_bs != (bool[])null && other != (global::NatSet.NatSet)null && other == (global::NatSet.NatSet)s0;
]]></pathAssumption>
<pathCondition><![CDATA[return c != (int[])null && max_i == c[0] && sm_bs[0] != (sbyte)0 && sm_bs[1] != (sbyte)0 && 
                                                                    sm_bs[2] != (sbyte)0 && sm_bs[3] != (sbyte)0 && sm_bs[4] != (sbyte)0 && sm_bs[5] != (sbyte)0 && sm_bs[6] != (sbyte)0 && sm_bs[99] != (sbyte)0 && 101 < c[0] && c[0] != 100 && c[0] != 101 && 
                                                                                                                                                                                                                                                  c.Length == 1 && sm_bs[7] == (sbyte)0 && sm_bs[8] == (sbyte)0 && sm_bs[9] == (sbyte)0 && sm_bs[10] == (sbyte)0 && sm_bs[11] == (sbyte)0 && sm_bs[12] == (sbyte)0 && sm_bs[13] == (sbyte)0 && 
                                                                                                                                                                                                                                                                                                                                                                                                                      sm_bs[14] == (sbyte)0 && sm_bs[15] == (sbyte)0 && sm_bs[16] == (sbyte)0 && sm_bs[17] == (sbyte)0 && sm_bs[18] == (sbyte)0 && sm_bs[19] == (sbyte)0 && sm_bs[20] == (sbyte)0 && 
sm_bs[21] == (sbyte)0 && sm_bs[22] == (sbyte)0 && sm_bs[23] == (sbyte)0 && sm_bs[24] == (sbyte)0 && sm_bs[25] == (sbyte)0 && sm_bs[26] == (sbyte)0 && sm_bs[27] == (sbyte)0 && 
sm_bs[28] == (sbyte)0 && sm_bs[29] == (sbyte)0 && sm_bs[30] == (sbyte)0 && sm_bs[31] == (sbyte)0 && sm_bs[32] == (sbyte)0 && sm_bs[33] == (sbyte)0 && sm_bs[34] == (sbyte)0 && 
sm_bs[35] == (sbyte)0 && sm_bs[36] == (sbyte)0 && sm_bs[37] == (sbyte)0 && sm_bs[38] == (sbyte)0 && sm_bs[39] == (sbyte)0 && sm_bs[40] == (sbyte)0 && sm_bs[41] == (sbyte)0 && 
sm_bs[42] == (sbyte)0 && sm_bs[43] == (sbyte)0 && sm_bs[44] == (sbyte)0 && sm_bs[45] == (sbyte)0 && sm_bs[46] == (sbyte)0 && sm_bs[47] == (sbyte)0 && sm_bs[48] == (sbyte)0 && 
sm_bs[49] == (sbyte)0 && sm_bs[50] == (sbyte)0 && sm_bs[51] == (sbyte)0 && sm_bs[52] == (sbyte)0 && sm_bs[53] == (sbyte)0 && sm_bs[54] == (sbyte)0 && sm_bs[55] == (sbyte)0 && 
sm_bs[56] == (sbyte)0 && sm_bs[57] == (sbyte)0 && sm_bs[58] == (sbyte)0 && sm_bs[59] == (sbyte)0 && sm_bs[60] == (sbyte)0 && sm_bs[61] == (sbyte)0 && sm_bs[62] == (sbyte)0 && 
sm_bs[63] == (sbyte)0 && sm_bs[64] == (sbyte)0 && sm_bs[65] == (sbyte)0 && sm_bs[66] == (sbyte)0 && sm_bs[67] == (sbyte)0 && sm_bs[68] == (sbyte)0 && sm_bs[69] == (sbyte)0 && 
sm_bs[70] == (sbyte)0 && sm_bs[71] == (sbyte)0 && sm_bs[72] == (sbyte)0 && sm_bs[73] == (sbyte)0 && sm_bs[74] == (sbyte)0 && sm_bs[75] == (sbyte)0 && sm_bs[76] == (sbyte)0 && 
sm_bs[77] == (sbyte)0 && sm_bs[78] == (sbyte)0 && sm_bs[79] == (sbyte)0 && sm_bs[80] == (sbyte)0 && sm_bs[81] == (sbyte)0 && sm_bs[82] == (sbyte)0 && sm_bs[83] == (sbyte)0 && 
sm_bs[84] == (sbyte)0 && sm_bs[85] == (sbyte)0 && sm_bs[86] == (sbyte)0 && sm_bs[87] == (sbyte)0 && sm_bs[88] == (sbyte)0 && sm_bs[89] == (sbyte)0 && sm_bs[90] == (sbyte)0 && 
sm_bs[91] == (sbyte)0 && sm_bs[92] == (sbyte)0 && sm_bs[93] == (sbyte)0 && sm_bs[94] == (sbyte)0 && sm_bs[95] == (sbyte)0 && sm_bs[96] == (sbyte)0 && sm_bs[97] == (sbyte)0 && sm_bs[98] == (sbyte)0;
]]></pathCondition>
</generatedTest>
<test name="union" state="success" duration="0,02"/>
<test name="union" state="success" duration="0,07"/>
<test name="union" state="success" duration="0,04"/>
<test name="union" state="success" duration="0,01"/>
<test name="union" state="success" duration="0,07"/>
<test name="union" state="success" duration="0,04"/>
<test name="union" state="success" duration="0,02"/>
<test name="union" state="success" duration="0,07"/>
<test name="union" state="success" duration="0,04"/>
<test name="union" state="success" duration="0,04"/>
<test name="union" state="success" duration="0,04"/>
<test name="union" state="success" duration="0,04"/>
<test name="union" state="success" duration="0,04"/>
<test name="union" state="success" duration="0,01"/>
<test name="union" state="success" duration="0,06"/>
<test name="union" state="success" duration="0,04"/>
<test name="union" state="success" duration="0,04"/>
<test name="union" state="success" duration="0,07"/>
<test name="union" state="success" duration="0,02"/>
<test name="union" state="success" duration="0,00"/>
<test name="union" state="success" duration="0,05"/>
<test name="union" state="success" duration="0,04"/>
<test name="union" state="success" duration="0,05"/>
<test name="union" state="success" duration="0,03"/>
<test name="union" state="success" duration="0,02"/>
<test name="union" state="success" duration="0,07"/>
<test name="union" state="success" duration="0,04"/>
<test name="union" state="success" duration="0,08"/>
<test name="union" state="success" duration="0,04"/>
<log level="message" time="2015-03-18 19:01:25Z" category="progress" message="  250 constraint systems (%35,60 solved, %64,40 proven unsatisfiable)"/>
<test name="union" state="success" duration="0,06"/>
<log level="message" time="2015-03-18 19:01:25Z" category="progress" message="   90 runs (%94,44 unique paths, %37,78 retries)"/>
<test name="union" state="success" duration="0,02"/>
<test name="union" state="success" duration="0,01"/>
<test name="union" state="success" duration="0,05"/>
<test name="union" state="success" duration="0,04"/>
<test name="union" state="success" duration="0,06"/>
<test name="union" state="success" duration="0,03"/>
<test name="union" state="success" duration="0,00"/>
<test name="union" state="success" duration="0,01"/>
<test name="union" state="success" duration="0,01"/>
<test name="union" state="success" duration="0,01"/>
<test name="union" state="success" duration="0,01"/>
<test name="union" state="success" duration="0,01"/>
<test name="union" state="success" duration="0,02"/>
<test name="union" state="success" duration="0,06"/>
<generatedTest id="7598a481-36a0-406b-b330-130e381144ab" index="10" run="104" status="normaltermination" generated="true" new="true" assemblyName="NatSet" name="union20901"><declaringType assemblyName="NatSet" name="NatSet" token="ffffffff" namespace="NatSet"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="NatSet" name="NatSet" token="ffffffff" namespace="NatSet"/>
</type>
</parameter>
<rcov name="Block" dcov="0" dtot="0" acov="0" atot="0"/>
<rcov name="asserts" dcov="0" dtot="0" acov="12" atot="12"/>
<value name="other">new NatSet{sm={Length=100; false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false},rest={},max=-1}</value>
<code><![CDATA[List<int> list;
global::NatSet.NatSet natSet;
int[] ints = new int[0];
list = new List<int>((IEnumerable<int>)ints);
bool[] bs = new bool[100];
natSet = NatSetFactory.Create(bs, list, -1);
this.union(natSet);
]]></code>
<methodCode imports="System.Collections.Generic;Microsoft.VisualStudio.TestTools.UnitTesting;Microsoft.Pex.Framework.Generated"><![CDATA[[TestMethod]
[PexGeneratedBy(typeof(global::NatSet.NatSet))]
public void union20901()
{
    List<int> list;
    global::NatSet.NatSet natSet;
    int[] ints = new int[0];
    list = new List<int>((IEnumerable<int>)ints);
    bool[] bs = new bool[100];
    natSet = NatSetFactory.Create(bs, list, -1);
    this.union(natSet);
}
]]></methodCode>
<reference name="Microsoft.VisualStudio.QualityTools.UnitTestFramework"/>
<reference name="mscorlib" location="C:\Windows\Microsoft.NET\Framework\v4.0.30319\mscorlib.dll"/>
<reference name="Microsoft.Pex.Framework"/>
<reference name="NatSet" location="C:\Users\MehmetBerk\documents\visual studio 2010\Projects\NatSet\NatSet\bin\Debug\NatSet.dll"/>
<pathAssumption><![CDATA[List<int> s0 = new;
return rest_list == s0 && rest_list != (List<int>)null && sm_bs.Length == 100 && sm_bs != (bool[])null && other != (global::NatSet.NatSet)null && other == (global::NatSet.NatSet)s0;
]]></pathAssumption>
<pathCondition><![CDATA[return c != (int[])null && c.Length == 0 && 
                           max_i == -1 && sm_bs[0] == (sbyte)0 && sm_bs[1] == (sbyte)0 && sm_bs[2] == (sbyte)0 && sm_bs[3] == (sbyte)0 && sm_bs[4] == (sbyte)0 && sm_bs[5] == (sbyte)0 && sm_bs[6] == (sbyte)0 && 
                                                                                                                                                                                          sm_bs[7] == (sbyte)0 && sm_bs[8] == (sbyte)0 && sm_bs[9] == (sbyte)0 && sm_bs[10] == (sbyte)0 && sm_bs[11] == (sbyte)0 && sm_bs[12] == (sbyte)0 && sm_bs[13] == (sbyte)0 && sm_bs[14] == (sbyte)0 && 
                                                                                                                                                                                                                                                                                                                                                                      sm_bs[15] == (sbyte)0 && sm_bs[16] == (sbyte)0 && sm_bs[17] == (sbyte)0 && sm_bs[18] == (sbyte)0 && sm_bs[19] == (sbyte)0 && sm_bs[20] == (sbyte)0 && sm_bs[21] == (sbyte)0 && 
sm_bs[22] == (sbyte)0 && sm_bs[23] == (sbyte)0 && sm_bs[24] == (sbyte)0 && sm_bs[25] == (sbyte)0 && sm_bs[26] == (sbyte)0 && sm_bs[27] == (sbyte)0 && sm_bs[28] == (sbyte)0 && 
sm_bs[29] == (sbyte)0 && sm_bs[30] == (sbyte)0 && sm_bs[31] == (sbyte)0 && sm_bs[32] == (sbyte)0 && sm_bs[33] == (sbyte)0 && sm_bs[34] == (sbyte)0 && sm_bs[35] == (sbyte)0 && 
sm_bs[36] == (sbyte)0 && sm_bs[37] == (sbyte)0 && sm_bs[38] == (sbyte)0 && sm_bs[39] == (sbyte)0 && sm_bs[40] == (sbyte)0 && sm_bs[41] == (sbyte)0 && sm_bs[42] == (sbyte)0 && 
sm_bs[43] == (sbyte)0 && sm_bs[44] == (sbyte)0 && sm_bs[45] == (sbyte)0 && sm_bs[46] == (sbyte)0 && sm_bs[47] == (sbyte)0 && sm_bs[48] == (sbyte)0 && sm_bs[49] == (sbyte)0 && 
sm_bs[50] == (sbyte)0 && sm_bs[51] == (sbyte)0 && sm_bs[52] == (sbyte)0 && sm_bs[53] == (sbyte)0 && sm_bs[54] == (sbyte)0 && sm_bs[55] == (sbyte)0 && sm_bs[56] == (sbyte)0 && 
sm_bs[57] == (sbyte)0 && sm_bs[58] == (sbyte)0 && sm_bs[59] == (sbyte)0 && sm_bs[60] == (sbyte)0 && sm_bs[61] == (sbyte)0 && sm_bs[62] == (sbyte)0 && sm_bs[63] == (sbyte)0 && 
sm_bs[64] == (sbyte)0 && sm_bs[65] == (sbyte)0 && sm_bs[66] == (sbyte)0 && sm_bs[67] == (sbyte)0 && sm_bs[68] == (sbyte)0 && sm_bs[69] == (sbyte)0 && sm_bs[70] == (sbyte)0 && 
sm_bs[71] == (sbyte)0 && sm_bs[72] == (sbyte)0 && sm_bs[73] == (sbyte)0 && sm_bs[74] == (sbyte)0 && sm_bs[75] == (sbyte)0 && sm_bs[76] == (sbyte)0 && sm_bs[77] == (sbyte)0 && 
sm_bs[78] == (sbyte)0 && sm_bs[79] == (sbyte)0 && sm_bs[80] == (sbyte)0 && sm_bs[81] == (sbyte)0 && sm_bs[82] == (sbyte)0 && sm_bs[83] == (sbyte)0 && sm_bs[84] == (sbyte)0 && 
sm_bs[85] == (sbyte)0 && sm_bs[86] == (sbyte)0 && sm_bs[87] == (sbyte)0 && sm_bs[88] == (sbyte)0 && sm_bs[89] == (sbyte)0 && sm_bs[90] == (sbyte)0 && sm_bs[91] == (sbyte)0 && 
sm_bs[92] == (sbyte)0 && sm_bs[93] == (sbyte)0 && sm_bs[94] == (sbyte)0 && sm_bs[95] == (sbyte)0 && sm_bs[96] == (sbyte)0 && sm_bs[97] == (sbyte)0 && sm_bs[98] == (sbyte)0 && sm_bs[99] == (sbyte)0;
]]></pathCondition>
</generatedTest>
<test name="union" state="success" duration="0,00"/>
<test name="union" state="success" duration="0,07"/>
<test name="union" state="success" duration="0,02"/>
<test name="union" state="success" duration="0,01"/>
<test name="union" state="success" duration="0,05"/>
<test name="union" state="success" duration="0,04"/>
<test name="union" state="success" duration="0,06"/>
<test name="union" state="success" duration="0,03"/>
<test name="union" state="success" duration="0,00"/>
<test name="union" state="success" duration="0,08"/>
<test name="union" state="success" duration="0,05"/>
<test name="union" state="success" duration="0,01"/>
<test name="union" state="success" duration="0,01"/>
<test name="union" state="success" duration="0,01"/>
<test name="union" state="success" duration="0,01"/>
<test name="union" state="success" duration="0,01"/>
<test name="union" state="success" duration="0,01"/>
<test name="union" state="success" duration="0,01"/>
<test name="union" state="success" duration="0,01"/>
<test name="union" state="success" duration="0,06"/>
<test name="union" state="success" duration="0,04"/>
<test name="union" state="success" duration="0,04"/>
<test name="union" state="success" duration="0,04"/>
<generatedTest id="7f4ea3ae-4787-4911-91c4-9f184d1edd94" index="11" run="127" status="normaltermination" generated="true" new="true" assemblyName="NatSet" name="union21901"><declaringType assemblyName="NatSet" name="NatSet" token="ffffffff" namespace="NatSet"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="NatSet" name="NatSet" token="ffffffff" namespace="NatSet"/>
</type>
</parameter>
<rcov name="Block" dcov="0" dtot="0" acov="0" atot="0"/>
<rcov name="asserts" dcov="0" dtot="0" acov="12" atot="12"/>
<value name="other">new NatSet{sm={Length=100; false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false},rest={103, 103, 103},max=103}</value>
<code><![CDATA[List<int> list;
global::NatSet.NatSet natSet;
int[] ints = new int[3];
ints[0] = 103;
ints[1] = 103;
ints[2] = 103;
list = new List<int>((IEnumerable<int>)ints);
bool[] bs = new bool[100];
natSet = NatSetFactory.Create(bs, list, 103);
this.union(natSet);
]]></code>
<methodCode imports="System.Collections.Generic;Microsoft.VisualStudio.TestTools.UnitTesting;Microsoft.Pex.Framework.Generated"><![CDATA[[TestMethod]
[PexGeneratedBy(typeof(global::NatSet.NatSet))]
public void union21901()
{
    List<int> list;
    global::NatSet.NatSet natSet;
    int[] ints = new int[3];
    ints[0] = 103;
    ints[1] = 103;
    ints[2] = 103;
    list = new List<int>((IEnumerable<int>)ints);
    bool[] bs = new bool[100];
    natSet = NatSetFactory.Create(bs, list, 103);
    this.union(natSet);
}
]]></methodCode>
<reference name="Microsoft.VisualStudio.QualityTools.UnitTestFramework"/>
<reference name="mscorlib" location="C:\Windows\Microsoft.NET\Framework\v4.0.30319\mscorlib.dll"/>
<reference name="Microsoft.Pex.Framework"/>
<reference name="NatSet" location="C:\Users\MehmetBerk\documents\visual studio 2010\Projects\NatSet\NatSet\bin\Debug\NatSet.dll"/>
<pathAssumption><![CDATA[List<int> s0 = new;
return rest_list == s0 && rest_list != (List<int>)null && sm_bs.Length == 100 && sm_bs != (bool[])null && other != (global::NatSet.NatSet)null && other == (global::NatSet.NatSet)s0;
]]></pathAssumption>
<pathCondition><![CDATA[return c != (int[])null && c.Length == 3 && max_i == 103 && sm_bs[0] == (sbyte)0 && sm_bs[1] == (sbyte)0 && 
                                                                                    sm_bs[2] == (sbyte)0 && sm_bs[3] == (sbyte)0 && sm_bs[4] == (sbyte)0 && sm_bs[5] == (sbyte)0 && sm_bs[6] == (sbyte)0 && sm_bs[7] == (sbyte)0 && sm_bs[8] == (sbyte)0 && sm_bs[9] == (sbyte)0 && 
                                                                                                                                                                                                                                                            sm_bs[10] == (sbyte)0 && sm_bs[11] == (sbyte)0 && sm_bs[12] == (sbyte)0 && sm_bs[13] == (sbyte)0 && sm_bs[14] == (sbyte)0 && sm_bs[15] == (sbyte)0 && sm_bs[16] == (sbyte)0 && 
                                                                                                                                                                                                                                                                                                                                                                                                                  sm_bs[17] == (sbyte)0 && sm_bs[18] == (sbyte)0 && sm_bs[19] == (sbyte)0 && sm_bs[20] == (sbyte)0 && sm_bs[21] == (sbyte)0 && sm_bs[22] == (sbyte)0 && sm_bs[23] == (sbyte)0 && 
sm_bs[24] == (sbyte)0 && sm_bs[25] == (sbyte)0 && sm_bs[26] == (sbyte)0 && sm_bs[27] == (sbyte)0 && sm_bs[28] == (sbyte)0 && sm_bs[29] == (sbyte)0 && sm_bs[30] == (sbyte)0 && 
sm_bs[31] == (sbyte)0 && sm_bs[32] == (sbyte)0 && sm_bs[33] == (sbyte)0 && sm_bs[34] == (sbyte)0 && sm_bs[35] == (sbyte)0 && sm_bs[36] == (sbyte)0 && sm_bs[37] == (sbyte)0 && 
sm_bs[38] == (sbyte)0 && sm_bs[39] == (sbyte)0 && sm_bs[40] == (sbyte)0 && sm_bs[41] == (sbyte)0 && sm_bs[42] == (sbyte)0 && sm_bs[43] == (sbyte)0 && sm_bs[44] == (sbyte)0 && 
sm_bs[45] == (sbyte)0 && sm_bs[46] == (sbyte)0 && sm_bs[47] == (sbyte)0 && sm_bs[48] == (sbyte)0 && sm_bs[49] == (sbyte)0 && sm_bs[50] == (sbyte)0 && sm_bs[51] == (sbyte)0 && 
sm_bs[52] == (sbyte)0 && sm_bs[53] == (sbyte)0 && sm_bs[54] == (sbyte)0 && sm_bs[55] == (sbyte)0 && sm_bs[56] == (sbyte)0 && sm_bs[57] == (sbyte)0 && sm_bs[58] == (sbyte)0 && 
sm_bs[59] == (sbyte)0 && sm_bs[60] == (sbyte)0 && sm_bs[61] == (sbyte)0 && sm_bs[62] == (sbyte)0 && sm_bs[63] == (sbyte)0 && sm_bs[64] == (sbyte)0 && sm_bs[65] == (sbyte)0 && 
sm_bs[66] == (sbyte)0 && sm_bs[67] == (sbyte)0 && sm_bs[68] == (sbyte)0 && sm_bs[69] == (sbyte)0 && sm_bs[70] == (sbyte)0 && sm_bs[71] == (sbyte)0 && sm_bs[72] == (sbyte)0 && 
sm_bs[73] == (sbyte)0 && sm_bs[74] == (sbyte)0 && sm_bs[75] == (sbyte)0 && sm_bs[76] == (sbyte)0 && sm_bs[77] == (sbyte)0 && sm_bs[78] == (sbyte)0 && sm_bs[79] == (sbyte)0 && 
sm_bs[80] == (sbyte)0 && sm_bs[81] == (sbyte)0 && sm_bs[82] == (sbyte)0 && sm_bs[83] == (sbyte)0 && sm_bs[84] == (sbyte)0 && sm_bs[85] == (sbyte)0 && sm_bs[86] == (sbyte)0 && 
sm_bs[87] == (sbyte)0 && sm_bs[88] == (sbyte)0 && sm_bs[89] == (sbyte)0 && sm_bs[90] == (sbyte)0 && sm_bs[91] == (sbyte)0 && sm_bs[92] == (sbyte)0 && sm_bs[93] == (sbyte)0 && 
sm_bs[94] == (sbyte)0 && sm_bs[95] == (sbyte)0 && sm_bs[96] == (sbyte)0 && sm_bs[97] == (sbyte)0 && sm_bs[98] == (sbyte)0 && sm_bs[99] == (sbyte)0 && c[1] == 103 && c[2] == 103 && c[0] == 103;
]]></pathCondition>
</generatedTest>
<test name="union" state="success" duration="0,04"/>
<test name="union" state="success" duration="0,04"/>
<test name="union" state="success" duration="0,05"/>
<test name="union" state="success" duration="0,05"/>
<test name="union" state="success" duration="0,05"/>
<test name="union" state="success" duration="0,03"/>
<test name="union" state="success" duration="0,01"/>
<test name="union" state="success" duration="0,04"/>
<test name="union" state="success" duration="0,06"/>
<test name="union" state="success" duration="0,05"/>
<test name="union" state="success" duration="0,06"/>
<test name="union" state="success" duration="0,03"/>
<test name="union" state="success" duration="0,01"/>
<test name="union" state="success" duration="0,04"/>
<test name="union" state="success" duration="0,06"/>
<test name="union" state="success" duration="0,06"/>
<test name="union" state="success" duration="0,07"/>
<test name="union" state="success" duration="0,04"/>
<test name="union" state="success" duration="0,01"/>
<test name="union" state="success" duration="0,01"/>
<test name="union" state="success" duration="0,01"/>
<test name="union" state="success" duration="0,01"/>
<test name="union" state="success" duration="0,01"/>
<test name="union" state="success" duration="0,04"/>
<test name="union" state="success" duration="0,01"/>
<test name="union" state="success" duration="0,01"/>
<test name="union" state="success" duration="0,05"/>
<test name="union" state="success" duration="0,01"/>
<test name="union" state="success" duration="0,07"/>
<test name="union" state="success" duration="0,07"/>
<test name="union" state="success" duration="0,02"/>
<test name="union" state="success" duration="0,01"/>
<test name="union" state="success" duration="0,00"/>
<test name="union" state="success" duration="0,08"/>
<test name="union" state="success" duration="0,04"/>
<test name="union" state="success" duration="0,05"/>
<test name="union" state="success" duration="0,01"/>
<test name="union" state="success" duration="0,01"/>
<test name="union" state="success" duration="0,05"/>
<test name="union" state="success" duration="0,01"/>
<test name="union" state="success" duration="0,05"/>
<test name="union" state="success" duration="0,04"/>
<test name="union" state="success" duration="0,01"/>
<test name="union" state="success" duration="0,05"/>
<test name="union" state="success" duration="0,01"/>
<test name="union" state="success" duration="0,01"/>
<test name="union" state="success" duration="0,06"/>
<test name="union" state="success" duration="0,01"/>
<test name="union" state="success" duration="0,08"/>
<test name="union" state="success" duration="0,09"/>
<test name="union" state="success" duration="0,11"/>
<test name="union" state="success" duration="0,06"/>
<test name="union" state="success" duration="0,01"/>
<test name="union" state="success" duration="0,01"/>
<test name="union" state="success" duration="0,05"/>
<test name="union" state="success" duration="0,01"/>
<test name="union" state="success" duration="0,00"/>
<test name="union" state="success" duration="0,06"/>
<test name="union" state="success" duration="0,01"/>
<test name="union" state="success" duration="0,10"/>
<test name="union" state="success" duration="0,10"/>
<test name="union" state="success" duration="0,05"/>
<test name="union" state="success" duration="0,05"/>
<test name="union" state="success" duration="0,05"/>
<test name="union" state="success" duration="0,10"/>
<test name="union" state="success" duration="0,10"/>
<test name="union" state="success" duration="0,02"/>
<test name="union" state="success" duration="0,06"/>
<test name="union" state="success" duration="0,01"/>
<test name="union" state="success" duration="0,05"/>
<test name="union" state="success" duration="0,06"/>
<test name="union" state="success" duration="0,01"/>
<test name="union" state="success" duration="0,05"/>
<test name="union" state="success" duration="0,10"/>
<test name="union" state="success" duration="0,11"/>
<test name="union" state="success" duration="0,06"/>
<test name="union" state="success" duration="0,01"/>
<test name="union" state="success" duration="0,01"/>
<test name="union" state="success" duration="0,05"/>
<test name="union" state="success" duration="0,01"/>
<test name="union" state="success" duration="0,14"/>
<test name="union" state="success" duration="0,14"/>
<test name="union" state="success" duration="0,00"/>
<test name="union" state="success" duration="0,07"/>
<test name="union" state="success" duration="0,06"/>
<test name="union" state="success" duration="0,05"/>
<test name="union" state="success" duration="0,01"/>
<test name="union" state="success" duration="0,01"/>
<test name="union" state="success" duration="0,01"/>
<log level="message" time="2015-03-18 19:01:35Z" category="progress" message="  500 constraint systems (%43,20 solved, %56,80 proven unsatisfiable)"/>
<test name="union" state="success" duration="0,11"/>
<test name="union" state="success" duration="0,11"/>
<test name="union" state="success" duration="0,07"/>
<test name="union" state="success" duration="0,01"/>
<test name="union" state="success" duration="0,01"/>
<test name="union" state="success" duration="0,00"/>
<test name="union" state="success" duration="0,06"/>
<test name="union" state="success" duration="0,05"/>
<test name="union" state="success" duration="0,06"/>
<test name="union" state="success" duration="0,01"/>
<test name="union" state="success" duration="0,13"/>
<boundary kind="maxrunswithoutnewtests" value="100" message="maximum runs without new tests reached"><update kind="AddOrUpdateAttributeCodeUpdate" name="Set MaxRunsWithoutNewTests=200" update="true"><attributeCtor><definition assemblyName="Microsoft.Pex.Framework" name=".ctor" token="6000e51"><declaringType assemblyName="Microsoft.Pex.Framework" name="PexMethodAttribute" token="200027f" namespace="Microsoft.Pex.Framework"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="Microsoft.Pex.Framework" name="PexMethodAttribute" token="200027f" namespace="Microsoft.Pex.Framework"/>
</type>
</parameter>
</definition>
</attributeCtor>
<argument><value kind="I4Expression" value="200"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Int32" token="20000f6" namespace="System"/>
</type>
</value>
<property><definition assemblyName="Microsoft.Pex.Framework" name="MaxRunsWithoutNewTests" token="17000346"><declaringType assemblyName="Microsoft.Pex.Framework" name="PexSettingsAttributeBase" token="2000273" namespace="Microsoft.Pex.Framework.Settings"/>
<propertyType spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Int32" token="20000f6" namespace="System"/>
</propertyType>
</definition>
</property>
</argument>
<target><method><definition assemblyName="NatSet" name="union" token="6000006"><declaringType assemblyName="NatSet" name="NatSet" token="2000003" namespace="NatSet"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="NatSet" name="NatSet" token="2000003" namespace="NatSet"/>
</type>
</parameter>
<parameter name="other" position="1"><type spec="Class"><definition assemblyName="NatSet" name="NatSet" token="2000003" namespace="NatSet"/>
</type>
</parameter>
</definition>
</method>
</target>
</update>
</boundary>
<coverage domain="usercodeundertest" unit="block" covered="0" total="0" coveredRatio="0"/>
<sourceCoverage xml="cov\e475\cov.xml" html="cov\e475\cov.html"/>
<result name="union(NatSet)" state="success" duration="18.2056102526208"/>
<duration start="2015-03-18 19:01:18Z" end="2015-03-18 19:01:36Z" seconds="18.2081272"/>
<trajectory><image src="fix\natsetnatsetunio635623092969952299.trajectories.png" width="800" height="1600"/>
</trajectory>
</exploration>
<exploration shortName="unionFixedTest()" fullName="NatSet.NatSet.unionFixedTest()"><method><definition assemblyName="NatSet" name="unionFixedTest" token="600000c"><declaringType assemblyName="NatSet" name="NatSet" token="2000003" namespace="NatSet"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="NatSet" name="NatSet" token="2000003" namespace="NatSet"/>
</type>
</parameter>
</definition>
</method>
<test name="unionFixedTest" state="success" duration="0,11"/>
<generatedTest id="52d816b9-c6c9-46c6-9e4a-af894de73f03" index="1" run="1" status="normaltermination" generated="true" new="true" assemblyName="NatSet" name="unionFixedTest02"><declaringType assemblyName="NatSet" name="NatSet" token="ffffffff" namespace="NatSet"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="NatSet" name="NatSet" token="ffffffff" namespace="NatSet"/>
</type>
</parameter>
<rcov name="Block" dcov="0" dtot="0" acov="0" atot="0"/>
<rcov name="asserts" dcov="12" dtot="12" acov="12" atot="12"/>
<code><![CDATA[this.unionFixedTest();
]]></code>
<methodCode imports="Microsoft.VisualStudio.TestTools.UnitTesting;Microsoft.Pex.Framework.Generated"><![CDATA[[TestMethod]
[PexGeneratedBy(typeof(global::NatSet.NatSet))]
public void unionFixedTest02()
{
    this.unionFixedTest();
}
]]></methodCode>
<reference name="Microsoft.VisualStudio.QualityTools.UnitTestFramework"/>
<reference name="mscorlib" location="C:\Windows\Microsoft.NET\Framework\v4.0.30319\mscorlib.dll"/>
<reference name="Microsoft.Pex.Framework"/>
<reference name="NatSet" location="C:\Users\MehmetBerk\documents\visual studio 2010\Projects\NatSet\NatSet\bin\Debug\NatSet.dll"/>
</generatedTest>
<coverage domain="usercodeundertest" unit="block" covered="0" total="0" coveredRatio="0"/>
<sourceCoverage xml="cov\e480\cov.xml" html="cov\e480\cov.html"/>
<result name="unionFixedTest()" state="success" duration="0,18"/>
<duration start="2015-03-18 19:01:37Z" end="2015-03-18 19:01:37Z" seconds="0,18"/>
</exploration>
<coverage domain="usercodeundertest" unit="block" covered="0" total="0" coveredRatio="0"/>
<sourceCoverage xml="cov\t628\cov.xml" html="cov\t628\cov.html"/>
<duration start="2015-03-18 19:00:55Z" end="2015-03-18 19:01:37Z" seconds="41.8969528"/>
</fixture>
<coverage domain="usercodeundertest" unit="block" covered="0" total="0" coveredRatio="0"/>
<sourceCoverage xml="cov\a5464820\cov.xml" html="cov\a5464820\cov.html"/>
<duration start="2015-03-18 19:00:55Z" end="2015-03-18 19:01:37Z" seconds="42.0360463"/>
<frameTreeRef exceptionCount="2"/>
</assembly>
<duration start="2015-03-18 19:00:55Z" end="2015-03-18 19:01:37Z" seconds="42.1501199"/>
<background/>
</pex>
